sbc-bench v0.9.9 Khadas VIM (Fri, 23 Sep 2022 23:13:21 +0700)

Distributor ID:	Debian
Description:	Debian GNU/Linux 10 (buster)
Release:	10
Codename:	buster
Armbian info:   S905, aml-s905, aml-s905, 5.91, https://github.com/150balbes/Build-Armbian.git

/usr/bin/gcc (Debian 8.3.0-6) 8.3.0

Uptime: 23:13:22 up 23 min,  1 user,  load average: 0.68, 0.80, 0.58,  46.0Â°C

Linux 5.1.0-aml-s905 (aml) 	09/23/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           6.00    0.00    2.15    0.93    0.00   90.91

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          36.23       428.90      1052.26     617470    1514909
mmcblk1           0.23         6.52         0.00       9388          0
zram0             0.94         0.59         3.17        844       4564
zram1             4.12         3.35        13.12       4816      18884

              total        used        free      shared  buff/cache   available
Mem:          801Mi       105Mi       625Mi       1.0Mi        70Mi       627Mi
Swap:         400Mi        12Mi       388Mi

Filename				Type		Size	Used	Priority
/dev/zram1                             	partition	410488	12800	5

##########################################################################

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 1512    Measured: 1414 (1414.173/1414.143/1414.082)     (-6.5%)
Cpufreq OPP: 1200    Measured: 1197 (1198.043/1197.989/1197.934)
Cpufreq OPP: 1000    Measured:  998    (998.042/998.019/998.019)
Cpufreq OPP:  667    Measured:  664    (664.811/664.811/664.794)
Cpufreq OPP:  500    Measured:  498    (498.112/498.112/498.044)
Cpufreq OPP:  250    Measured:  248    (248.202/248.169/247.980)
Cpufreq OPP:  100    Measured:   98       (98.263/98.261/98.121)     (-2.0%)

##########################################################################

Hardware sensors:

scpi_sensors-isa-0000
aml_thermal:  +45.0 C  

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1822.4 MB/s (1.3%)
 C copy backwards (32 byte blocks)                    :   1835.2 MB/s (1.3%)
 C copy backwards (64 byte blocks)                    :   1872.2 MB/s (1.5%)
 C copy                                               :   1858.5 MB/s (1.7%)
 C copy prefetched (32 bytes step)                    :   1420.7 MB/s (0.1%)
 C copy prefetched (64 bytes step)                    :   1537.9 MB/s (0.1%)
 C 2-pass copy                                        :   1811.4 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1204.9 MB/s (0.3%)
 C 2-pass copy prefetched (64 bytes step)             :   1069.7 MB/s
 C fill                                               :   5894.0 MB/s
 C fill (shuffle within 16 byte blocks)               :   5896.0 MB/s
 C fill (shuffle within 32 byte blocks)               :   5896.7 MB/s (0.3%)
 C fill (shuffle within 64 byte blocks)               :   5896.1 MB/s
 ---
 standard memcpy                                      :   1939.0 MB/s (0.6%)
 standard memset                                      :   5899.5 MB/s
 ---
 NEON LDP/STP copy                                    :   1910.6 MB/s (0.5%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1285.0 MB/s (0.4%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1671.2 MB/s (0.4%)
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   2264.7 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2263.5 MB/s
 NEON LD1/ST1 copy                                    :   1903.1 MB/s (0.8%)
 NEON STP fill                                        :   5902.2 MB/s
 NEON STNP fill                                       :   5845.8 MB/s (0.9%)
 ARM LDP/STP copy                                     :   1911.0 MB/s
 ARM STP fill                                         :   5898.7 MB/s
 ARM STNP fill                                        :   5846.0 MB/s (1.4%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.1 ns          /     7.5 ns 
    131072 :    6.3 ns          /    10.9 ns 
    262144 :    8.0 ns          /    13.0 ns 
    524288 :   75.6 ns          /   105.6 ns 
   1048576 :  104.3 ns          /   127.0 ns 
   2097152 :  115.2 ns          /   134.5 ns 
   4194304 :  136.3 ns          /   179.8 ns 
   8388608 :  155.0 ns          /   202.0 ns 
  16777216 :  177.4 ns          /   215.4 ns 
  33554432 :  196.3 ns          /   224.4 ns 
  67108864 :  210.4 ns          /   247.7 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.1 ns          /     7.3 ns 
    131072 :    6.3 ns          /    10.7 ns 
    262144 :    7.9 ns          /    13.0 ns 
    524288 :   75.6 ns          /   105.6 ns 
   1048576 :  104.3 ns          /   126.9 ns 
   2097152 :  114.5 ns          /   133.6 ns 
   4194304 :  118.3 ns          /   136.4 ns 
   8388608 :  119.9 ns          /   137.6 ns 
  16777216 :  120.7 ns          /   138.3 ns 
  33554432 :  121.0 ns          /   138.5 ns 
  67108864 :  121.2 ns          /   138.6 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A53), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 2.830 2.830 2.122 2.122 2.122 2.122 2.917 5.923 
         8k: 2.830 2.829 2.122 2.122 2.123 2.126 2.918 5.925 
        16k: 2.829 2.829 2.123 2.122 2.123 2.122 2.918 5.924 
        32k: 2.836 2.835 2.131 2.137 2.133 2.127 2.923 5.932 
        64k: 19.01 21.17 18.77 20.89 18.77 21.06 25.86 47.34 
       128k: 22.27 24.32 22.18 23.74 22.19 23.87 28.11 54.64 
       256k: 24.28 25.68 24.35 25.40 24.28 25.51 28.96 72.23 
       512k: 117.0 121.0 117.1 121.7 118.7 120.7 175.5 330.4 
      1024k: 121.7 125.9 125.2 125.7 121.7 125.7 174.2 340.7 
      2048k: 122.3 126.5 122.4 126.2 122.3 129.1 174.6 340.9 
      4096k: 122.5 126.6 122.2 126.6 122.3 126.3 174.7 346.4 
      8192k: 122.5 126.5 122.3 126.5 122.3 126.2 174.9 343.5 
     16384k: 122.5 126.4 127.6 126.3 122.3 126.3 174.7 341.4 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A53)

OpenSSL 1.1.1n, built on 15 Mar 2022
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      92040.21k   292254.21k   625135.36k   912332.46k  1052669.27k  1064086.19k
aes-128-cbc      92062.55k   292195.61k   625184.60k   912290.13k  1052505.43k  1062944.77k
aes-192-cbc      87685.02k   264527.94k   521841.07k   710566.91k   793589.08k   799801.34k
aes-192-cbc      87703.17k   264450.94k   521913.60k   710518.10k   793870.34k   800200.02k
aes-256-cbc      85723.63k   246969.54k   458272.68k   597881.51k   655772.33k   660029.44k
aes-256-cbc      85750.15k   246960.32k   458373.12k   597897.22k   655788.71k   660291.58k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1407  1408  1412  1411  1413  1414  1414  1413  1413

RAM size:     801 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        899    99    883    875  |      15957   100   1369   1362
23:        885    99    910    902  |      15637   100   1360   1354
24:        878    99    953    944  |      15339   100   1353   1347
25:        842    99    970    961  |      15035   100   1344   1338
----------------------------------  | ------------------------------
Avr:              99    929    921  |              100   1356   1350
Tot:              99   1143   1136

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-3

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1409  1411  1407  1408  1412  1413  1413  1413  1413

RAM size:     801 MB,  # CPU hardware threads:   4
RAM usage:    450 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2421   301    784   2355  |      62161   397   1337   5303
23:       2386   301    809   2432  |      61158   397   1333   5292
24:       2385   309    830   2565  |      59682   395   1326   5239
----------------------------------  | ------------------------------
Avr:             303    807   2451  |              396   1332   5278
Tot:             350   1070   3864

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1412  1414  1413  1414  1413  1414  1414  1414  1414

RAM size:     801 MB,  # CPU hardware threads:   4
RAM usage:    450 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2428   301    786   2362  |      61208   391   1335   5222
23:       2395   300    812   2440  |      61133   397   1332   5290
24:       2384   309    830   2564  |      59461   394   1326   5220
----------------------------------  | ------------------------------
Avr:             303    809   2456  |              394   1331   5244
Tot:             349   1070   3850

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1412  1414  1414  1413  1413  1414  1413  1414  1413

RAM size:     801 MB,  # CPU hardware threads:   4
RAM usage:    450 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2445   303    786   2379  |      61871   395   1336   5279
23:       2404   302    811   2450  |      59998   390   1330   5191
24:       2389   309    830   2569  |      59910   396   1327   5259
----------------------------------  | ------------------------------
Avr:             305    809   2466  |              394   1331   5243
Tot:             349   1070   3855

Compression: 2451,2456,2466
Decompression: 5278,5244,5243
Total: 3864,3850,3855

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
23:28:58: 1512MHz  2.56  78%   0%  77%   0%   0%   0%  65.0Â°C

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 1512    Measured: 1414 (1414.173/1414.173/1413.991)     (-6.5%)

##########################################################################

Hardware sensors:

scpi_sensors-isa-0000
aml_thermal:  +59.0 C  

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (scpi_sensors)

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
23:13:48: 1512MHz  0.79   9%   1%   6%   0%   0%   0%  47.0Â°C
23:14:28: 1512MHz  0.94  25%   0%  24%   0%   0%   0%  54.0Â°C
23:15:08: 1512MHz  0.97  25%   0%  24%   0%   0%   0%  56.0Â°C
23:15:48: 1512MHz  0.99  25%   0%  24%   0%   0%   0%  59.0Â°C
23:16:28: 1512MHz  0.99  25%   0%  24%   0%   0%   0%  54.0Â°C
23:17:08: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:17:48: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:18:28: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:19:08: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:19:49: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:20:29: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:21:09: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:21:49: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:22:29: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:23:09: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  54.0Â°C

System health while running ramlat:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
23:23:35: 1512MHz  1.00  13%   1%  11%   0%   0%   0%  55.0Â°C
23:23:38: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:23:41: 1512MHz  1.00  25%   0%  25%   0%   0%   0%  53.0Â°C
23:23:44: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  54.0Â°C
23:23:48: 1512MHz  1.08  25%   0%  24%   0%   0%   0%  54.0Â°C
23:23:51: 1512MHz  1.07  25%   0%  24%   0%   0%   0%  53.0Â°C
23:23:54: 1512MHz  1.07  25%   0%  24%   0%   0%   0%  54.0Â°C
23:23:57: 1512MHz  1.07  25%   0%  24%   0%   0%   0%  54.0Â°C
23:24:00: 1512MHz  1.06  25%   0%  25%   0%   0%   0%  54.0Â°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
23:24:02: 1512MHz  1.06  14%   1%  11%   0%   0%   0%  55.0Â°C
23:24:18: 1512MHz  1.05  25%   0%  25%   0%   0%   0%  54.0Â°C
23:24:34: 1512MHz  1.04  25%   0%  24%   0%   0%   0%  54.0Â°C
23:24:50: 1512MHz  1.02  25%   0%  24%   0%   0%   0%  54.0Â°C
23:25:06: 1512MHz  1.02  25%   0%  25%   0%   0%   0%  54.0Â°C
23:25:22: 1512MHz  1.01  25%   0%  25%   0%   0%   0%  54.0Â°C
23:25:38: 1512MHz  1.01  25%   0%  24%   0%   0%   0%  54.0Â°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
23:25:50: 1512MHz  1.01  14%   1%  12%   0%   0%   0%  55.0Â°C
23:26:02: 1512MHz  1.01  25%   0%  24%   0%   0%   0%  53.0Â°C
23:26:14: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:26:26: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:26:38: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:26:50: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:27:02: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  53.0Â°C
23:27:14: 1512MHz  1.00  25%   0%  24%   0%   0%   0%  54.0Â°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
23:27:19: 1512MHz  1.00  15%   1%  12%   0%   0%   0%  54.0Â°C
23:27:43: 1512MHz  1.78  75%   0%  74%   0%   0%   0%  60.0Â°C
23:28:09: 1512MHz  2.11  77%   0%  75%   0%   0%   0%  63.0Â°C
23:28:33: 1512MHz  2.33  79%   0%  78%   0%   0%   0%  63.0Â°C
23:28:58: 1512MHz  2.56  78%   0%  77%   0%   0%   0%  65.0Â°C

##########################################################################

Linux 5.1.0-aml-s905 (aml) 	09/23/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          16.11    0.01    1.48    0.56    0.00   81.83

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          21.94       260.39       632.55     624382    1516749
mmcblk1           0.14         3.92         0.00       9388          0
zram0             0.70         0.36         2.43        852       5836
zram1             2.47         2.01         7.88       4820      18884

              total        used        free      shared  buff/cache   available
Mem:          801Mi       106Mi       617Mi       2.0Mi        78Mi       622Mi
Swap:         400Mi        12Mi       388Mi

Filename				Type		Size	Used	Priority
/dev/zram1                             	partition	410488	12800	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      100    1512   Cortex-A53 / r0p4
  1        0        0      100    1512   Cortex-A53 / r0p4
  2        0        0      100    1512   Cortex-A53 / r0p4
  3        0        0      100    1512   Cortex-A53 / r0p4

Architecture:        aarch64
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
Vendor ID:           ARM
Model:               4
Model name:          Cortex-A53
Stepping:            r0p4
CPU max MHz:         1512.0000
CPU min MHz:         100.0000
BogoMIPS:            48.00
L1d cache:           unknown size
L1i cache:           unknown size
L2 cache:            unknown size
Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid

Scanning /dev/mem for entry point.

SoC guess: Amlogic Meson GXL (S905X) Revision 21:a (82:2)
DT compat: khadas,vim
           amlogic,s905x
           amlogic,meson-gxl
 Compiler: /usr/bin/gcc (Debian 8.3.0-6) 8.3.0 / aarch64-linux-gnu
 Userland: arm64
   Kernel: 5.1.0-aml-s905/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y
           xor: measuring software checksum speed
           xor: using function: 32regs (2831.000 MB/sec)
           raid6: using algorithm neonx8 gen() 0 MB/s
           raid6: .... xor() 0 MB/s, rmw enabled
           raid6: using neon recovery algorithm

| Khadas VIM | 1512 MHz | 5.1 | Debian GNU/Linux 10 (buster) arm64 | 3860 | 92050 | 660160 | 1940 | 5900 | - |