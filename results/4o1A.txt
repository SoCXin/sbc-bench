sbc-bench v0.9.19 Khadas VIM3 (Tue, 14 Feb 2023 13:30:46 +0000)

Distributor ID:	Debian
Description:	Debian GNU/Linux 11 (bullseye)
Release:	11
Codename:	bullseye
Armbian info:   Khadas VIM3, meson-g12b, meson64, 22.11.4, https://github.com/armbian/build

/usr/bin/gcc (Debian 10.2.1-6) 10.2.1 20210110

Uptime: 13:30:46 up  7:53,  1 user,  load average: 0.27, 0.08, 0.02,  32.1Â°C,  150562585

Linux 6.0.13-meson64 (khadas-vim3-2) 	02/14/23 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.02    0.00    0.04    0.00    0.00   99.94

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           0.36         9.61         2.59       989.24     272913      73468   28090096
zram0             0.02         0.08         0.00         0.00       2392          4          0
zram1             0.04         0.02         0.25         0.00        488       6964          0

               total        used        free      shared  buff/cache   available
Mem:           3.7Gi       153Mi       3.4Gi       5.0Mi       119Mi       3.5Gi
Swap:          1.8Gi          0B       1.8Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1933716	0	5

##########################################################################

Checking cpufreq OPP for cpu0-cpu1 (Cortex-A53):

Cpufreq OPP: 2016    Measured: 2013 (2013.164/2013.115/2012.968)
Cpufreq OPP: 1908    Measured: 1901 (1905.959/1904.949/1895.077)
Cpufreq OPP: 1800    Measured: 1797 (1797.238/1797.238/1797.121)
Cpufreq OPP: 1704    Measured: 1701 (1701.196/1701.126/1701.056)
Cpufreq OPP: 1608    Measured: 1605 (1605.254/1605.176/1604.981)
Cpufreq OPP: 1512    Measured: 1497 (1497.113/1497.045/1496.943)
Cpufreq OPP: 1398    Measured: 1395 (1395.664/1395.458/1395.340)
Cpufreq OPP: 1200    Measured: 1197 (1197.528/1197.419/1197.256)
Cpufreq OPP: 1000    Measured:  997    (997.431/997.384/997.266)

Checking cpufreq OPP for cpu2-cpu5 (Cortex-A73):

Cpufreq OPP: 2400    Measured: 2398 (2398.881/2398.769/2398.769)
Cpufreq OPP: 2304    Measured: 2302 (2302.940/2302.889/2302.838)
Cpufreq OPP: 2208    Measured: 2206 (2206.952/2206.905/2206.763)
Cpufreq OPP: 2108    Measured: 2098 (2098.929/2098.929/2098.929)
Cpufreq OPP: 2016    Measured: 2014 (2014.980/2014.931/2014.882)
Cpufreq OPP: 1908    Measured: 1906 (1906.927/1906.927/1906.883)
Cpufreq OPP: 1800    Measured: 1798 (1798.881/1798.881/1798.803)
Cpufreq OPP: 1704    Measured: 1702 (1702.984/1702.949/1702.914)
Cpufreq OPP: 1608    Measured: 1606 (1606.971/1606.932/1606.893)
Cpufreq OPP: 1512    Measured: 1498 (1498.912/1498.878/1498.810)
Cpufreq OPP: 1398    Measured: 1396 (1397.021/1396.991/1396.932)
Cpufreq OPP: 1200    Measured: 1198 (1199.048/1198.993/1198.885)
Cpufreq OPP: 1000    Measured:  998    (998.961/998.961/998.890)

##########################################################################

Hardware sensors:

cpu_thermal-virtual-0
temp1:        +32.3 C  (crit = +110.0 C)

ddr_thermal-virtual-0
temp1:        +33.5 C  (crit = +110.0 C)

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   2377.2 MB/s (3, 3.5%)
 C copy backwards (32 byte blocks)                :   2419.8 MB/s (3, 1.3%)
 C copy backwards (64 byte blocks)                :   2366.3 MB/s (3, 1.7%)
 C copy                                           :   2410.7 MB/s (3, 3.2%)
 C copy prefetched (32 bytes step)                :   1790.2 MB/s (3, 0.5%)
 C copy prefetched (64 bytes step)                :   2115.6 MB/s (3, 0.1%)
 C 2-pass copy                                    :   1985.5 MB/s (2)
 C 2-pass copy prefetched (32 bytes step)         :   1454.1 MB/s (2)
 C 2-pass copy prefetched (64 bytes step)         :   1364.3 MB/s (2)
 C scan 8                                         :    391.7 MB/s (3)
 C scan 16                                        :    772.7 MB/s (2)
 C scan 32                                        :   1450.7 MB/s (3, 0.7%)
 C scan 64                                        :   2535.6 MB/s (3, 0.7%)
 C fill                                           :   7960.9 MB/s (2)
 C fill (shuffle within 16 byte blocks)           :   7962.0 MB/s (2)
 C fill (shuffle within 32 byte blocks)           :   7961.6 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :   7961.2 MB/s (2)
 ---
 libc memcpy copy                                 :   2508.9 MB/s (3, 1.1%)
 libc memchr scan                                 :   2523.0 MB/s (3, 3.2%)
 libc memset fill                                 :   7969.2 MB/s (2)
 ---
 NEON LDP/STP copy                                :   2514.5 MB/s (3, 0.3%)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :   1570.2 MB/s (3, 0.7%)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :   2075.4 MB/s (3, 0.3%)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :   2710.2 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :   2699.5 MB/s (2)
 NEON LD1/ST1 copy                                :   2426.9 MB/s (3, 0.7%)
 NEON LDP load                                    :   3674.3 MB/s (2)
 NEON LDNP load                                   :   2581.4 MB/s (3, 1.3%)
 NEON STP fill                                    :   7966.8 MB/s (2)
 NEON STNP fill                                   :   6528.0 MB/s (2)
 ARM LDP/STP copy                                 :   2511.5 MB/s (2)
 ARM LDP load                                     :   3675.2 MB/s (2)
 ARM LDNP load                                    :   2573.1 MB/s (3, 1.2%)
 ARM STP fill                                     :   7968.2 MB/s (2)
 ARM STNP fill                                    :   6525.2 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.0 ns 
     65536 :    3.5 ns          /     5.8 ns 
    131072 :    5.5 ns          /     8.0 ns 
    262144 :    7.0 ns          /     9.4 ns 
    524288 :   61.4 ns          /    96.8 ns 
   1048576 :   94.6 ns          /   129.9 ns 
   2097152 :  112.1 ns          /   141.8 ns 
   4194304 :  124.5 ns          /   149.9 ns 
   8388608 :  131.4 ns          /   153.8 ns 
  16777216 :  135.0 ns          /   156.5 ns 
  33554432 :  137.8 ns          /   158.4 ns 
  67108864 :  152.4 ns          /   186.8 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.0 ns 
     65536 :    3.5 ns          /     5.8 ns 
    131072 :    5.5 ns          /     8.1 ns 
    262144 :    7.0 ns          /     9.4 ns 
    524288 :   61.4 ns          /    96.8 ns 
   1048576 :   94.5 ns          /   129.9 ns 
   2097152 :  111.5 ns          /   141.2 ns 
   4194304 :  120.1 ns          /   145.5 ns 
   8388608 :  124.2 ns          /   147.3 ns 
  16777216 :  126.2 ns          /   148.0 ns 
  33554432 :  127.2 ns          /   148.4 ns 
  67108864 :  127.7 ns          /   148.6 ns 

Executing benchmark on cpu2 (Cortex-A73):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   5154.1 MB/s (3, 0.8%)
 C copy backwards (32 byte blocks)                :   5154.5 MB/s (2)
 C copy backwards (64 byte blocks)                :   5157.2 MB/s (2)
 C copy                                           :   5084.4 MB/s (2)
 C copy prefetched (32 bytes step)                :   5087.9 MB/s (2)
 C copy prefetched (64 bytes step)                :   5092.6 MB/s (2)
 C 2-pass copy                                    :   3302.1 MB/s (3, 0.2%)
 C 2-pass copy prefetched (32 bytes step)         :   3221.3 MB/s (3, 0.2%)
 C 2-pass copy prefetched (64 bytes step)         :   3250.6 MB/s (2)
 C scan 8                                         :    798.2 MB/s (2)
 C scan 16                                        :   1596.1 MB/s (2)
 C scan 32                                        :   3189.7 MB/s (2)
 C scan 64                                        :   6185.1 MB/s (2)
 C fill                                           :   9226.8 MB/s (2)
 C fill (shuffle within 16 byte blocks)           :   9237.2 MB/s (3, 0.1%)
 C fill (shuffle within 32 byte blocks)           :   9242.8 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :   9229.3 MB/s (2)
 ---
 libc memcpy copy                                 :   5079.1 MB/s (2)
 libc memchr scan                                 :   9892.4 MB/s (2)
 libc memset fill                                 :   9236.4 MB/s (3, 0.1%)
 ---
 NEON LDP/STP copy                                :   5081.8 MB/s (2)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :   5081.5 MB/s (2)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :   5082.0 MB/s (2)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :   4858.2 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :   5042.6 MB/s (3, 0.2%)
 NEON LD1/ST1 copy                                :   5082.1 MB/s (2)
 NEON LDP load                                    :   9923.4 MB/s (2)
 NEON LDNP load                                   :   9924.9 MB/s (2)
 NEON STP fill                                    :   9234.0 MB/s (3, 0.1%)
 NEON STNP fill                                   :   9217.9 MB/s (2)
 ARM LDP/STP copy                                 :   5081.4 MB/s (2)
 ARM LDP load                                     :   9923.1 MB/s (2)
 ARM LDNP load                                    :   9925.2 MB/s (2)
 ARM STP fill                                     :   9232.0 MB/s (2)
 ARM STNP fill                                    :   9228.4 MB/s (3, 0.2%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.7 ns          /     7.7 ns 
    131072 :    7.0 ns          /    10.8 ns 
    262144 :    8.8 ns          /    12.1 ns 
    524288 :   10.5 ns          /    12.6 ns 
   1048576 :   12.4 ns          /    13.7 ns 
   2097152 :   73.2 ns          /   109.6 ns 
   4194304 :  103.1 ns          /   138.0 ns 
   8388608 :  121.2 ns          /   150.3 ns 
  16777216 :  130.8 ns          /   155.7 ns 
  33554432 :  136.6 ns          /   159.1 ns 
  67108864 :  139.9 ns          /   161.9 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.7 ns          /     7.7 ns 
    131072 :    7.0 ns          /    10.8 ns 
    262144 :    8.3 ns          /    12.1 ns 
    524288 :    9.2 ns          /    12.7 ns 
   1048576 :   10.3 ns          /    13.7 ns 
   2097152 :   71.4 ns          /   108.0 ns 
   4194304 :  100.8 ns          /   135.6 ns 
   8388608 :  115.3 ns          /   144.9 ns 
  16777216 :  122.4 ns          /   148.5 ns 
  33554432 :  125.9 ns          /   149.9 ns 
  67108864 :  128.3 ns          /   151.4 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A53), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.988 1.987 1.490 1.491 1.490 1.491 2.049 4.161 
         8k: 1.987 1.987 1.491 1.490 1.490 1.491 2.050 4.161 
        16k: 1.987 1.988 1.491 1.491 1.491 1.491 2.050 4.161 
        32k: 1.991 1.991 1.493 1.494 1.493 1.494 2.053 4.166 
        64k: 16.78 15.53 13.49 15.07 13.50 15.19 18.50 33.46 
       128k: 17.34 17.09 15.97 16.81 15.98 16.88 19.85 38.14 
       256k: 18.01 17.99 17.46 17.86 17.44 17.91 20.66 39.59 
       512k: 121.3 136.3 130.3 136.9 130.1 136.2 168.5 306.4 
      1024k: 143.7 144.5 144.1 144.5 144.3 144.5 166.8 317.9 
      2048k: 144.9 145.4 145.0 146.0 145.0 145.2 167.2 317.6 
      4096k: 145.5 145.8 145.5 145.6 146.3 145.5 167.1 317.4 
      8192k: 145.8 145.8 145.8 145.8 145.8 145.7 169.4 317.3 
     16384k: 145.8 145.9 145.8 145.8 145.9 145.8 166.9 317.2 

Executing ramlat on cpu2 (Cortex-A73), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.668 1.668 1.668 1.668 1.251 1.251 2.323 3.306 
         8k: 1.668 1.668 1.668 1.668 1.251 1.251 2.307 3.296 
        16k: 1.668 1.668 1.668 1.668 1.251 1.251 1.735 3.297 
        32k: 1.670 1.669 1.670 1.669 1.252 1.252 1.756 3.298 
        64k: 8.871 9.173 8.871 9.172 8.939 9.084 10.72 19.48 
       128k: 10.39 10.40 10.37 10.39 10.38 10.38 11.86 23.28 
       256k: 10.42 10.42 10.42 10.42 10.42 10.42 11.68 23.49 
       512k: 10.45 10.42 10.42 10.42 10.42 10.42 11.68 23.50 
      1024k: 11.53 11.04 11.49 11.07 11.60 13.76 12.57 24.97 
      2048k: 148.2 148.5 146.7 148.5 147.6 148.4 153.1 162.5 
      4096k: 148.9 149.0 147.6 149.0 147.8 149.2 149.2 164.1 
      8192k: 148.9 149.8 148.5 148.9 148.8 149.2 149.5 164.6 
     16384k: 148.9 148.9 148.8 149.1 148.9 149.1 148.8 165.6 

##########################################################################

Executing benchmark on each cluster individually

OpenSSL 1.1.1n, built on 15 Mar 2022
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     130841.87k   416286.34k   890323.63k  1299006.81k  1498961.24k  1513073.32k (Cortex-A53)
aes-128-cbc     370937.71k   960136.11k  1537371.31k  1791214.25k  1902070.44k  1909287.59k (Cortex-A73)
aes-192-cbc     125296.25k   376868.12k   743426.90k  1011781.63k  1130386.77k  1137087.83k (Cortex-A53)
aes-192-cbc     347875.75k   863091.18k  1288869.55k  1509295.79k  1587328.34k  1593169.24k (Cortex-A73)
aes-256-cbc     122452.29k   352926.04k   652911.62k   851293.87k   933806.08k   940048.38k (Cortex-A53)
aes-256-cbc     336513.01k   793753.47k  1160447.15k  1302674.09k  1362097.49k  1366305.45k (Cortex-A73)

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 32000000 - - - 256000000 512000000 - -

RAM size:    3776 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1168    99   1145   1136  |      21585    99   1852   1843
23:       1145    99   1177   1167  |      21107    99   1837   1827
24:       1130    99   1225   1216  |      20689    99   1826   1816
25:       1130    99   1300   1290  |      20297    99   1816   1807
----------------------------------  | ------------------------------
Avr:              99   1212   1202  |               99   1833   1823
Tot:              99   1522   1513

Executing benchmark single-threaded on cpu2 (Cortex-A73)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 - - - 128000000 - 512000000 - -

RAM size:    3776 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2055   100   2004   1999  |      31494   100   2692   2689
23:       2009   100   2052   2047  |      30786   100   2668   2665
24:       1979   100   2134   2128  |      30187   100   2653   2650
25:       1952   100   2235   2229  |      29520   100   2630   2627
----------------------------------  | ------------------------------
Avr:             100   2106   2101  |              100   2661   2658
Tot:             100   2384   2379

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-5

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - 64000000 128000000 256000000 512000000 1024000000 -

RAM size:    3776 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       7333   555   1285   7134  |     134743   471   2442  11491
23:       7193   565   1296   7330  |     137333   507   2342  11883
24:       7077   567   1342   7610  |     134588   507   2329  11813
25:       6965   566   1405   7953  |     132208   508   2317  11766
----------------------------------  | ------------------------------
Avr:             563   1332   7507  |              498   2357  11738
Tot:             531   1845   9622

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - 64000000 - 64000000 - - - 1024000000 -

RAM size:    3776 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       7356   558   1283   7156  |     140672   507   2365  11997
23:       7105   558   1297   7240  |     136874   505   2346  11844
24:       7117   569   1344   7653  |     134510   507   2329  11806
25:       6995   570   1402   7987  |     128798   485   2362  11462
----------------------------------  | ------------------------------
Avr:             564   1332   7509  |              501   2351  11777
Tot:             532   1841   9643

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 - - - - - 512000000 - 2048000000

RAM size:    3776 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       7355   558   1282   7156  |     140573   507   2364  11988
23:       7201   567   1294   7338  |     137366   507   2346  11886
24:       7128   572   1340   7664  |     134436   507   2327  11800
25:       6953   565   1404   7939  |     132115   508   2316  11758
----------------------------------  | ------------------------------
Avr:             566   1330   7524  |              507   2338  11858
Tot:             536   1834   9691

Compression: 7507,7509,7524
Decompression: 11738,11777,11858
Total: 9622,9643,9691

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:43:13: 2400/2016MHz  6.39  97%   1%  95%   0%   0%   0%  70.6Â°C

Checking cpufreq OPP for cpu0-cpu1 (Cortex-A53):

Cpufreq OPP: 2016    Measured: 2013 (2013.262/2013.066/2012.919)

Checking cpufreq OPP for cpu2-cpu5 (Cortex-A73):

Cpufreq OPP: 2400    Measured: 2398 (2398.881/2398.881/2398.825)

##########################################################################

Hardware sensors:

cpu_thermal-virtual-0
temp1:        +47.7 C  (crit = +110.0 C)

ddr_thermal-virtual-0
temp1:        +49.2 C  (crit = +110.0 C)

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (cpu_thermal)

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:32:03: 2400/2016MHz  0.79   0%   0%   0%   0%   0%   0%  35.7Â°C
13:33:23: 2400/2016MHz  0.95  16%   0%  16%   0%   0%   0%  37.2Â°C

System health while running ramlat:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:34:40: 2400/2016MHz  0.99   0%   0%   0%   0%   0%   0%  40.3Â°C
13:34:46: 2400/2016MHz  0.99  16%   0%  16%   0%   0%   0%  36.0Â°C
13:34:52: 2400/2016MHz  0.99  16%   0%  16%   0%   0%   0%  36.3Â°C
13:34:58: 2400/2016MHz  0.99  16%   0%  16%   0%   0%   0%  36.0Â°C
13:35:05: 2400/2016MHz  0.99  16%   0%  16%   0%   0%   0%  36.0Â°C
13:35:11: 2400/2016MHz  0.99  16%   0%  16%   0%   0%   0%  37.1Â°C
13:35:17: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  37.9Â°C
13:35:23: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  37.7Â°C
13:35:29: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  37.1Â°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:35:34: 2400/2016MHz  1.08   0%   0%   0%   0%   0%   0%  39.6Â°C
13:35:50: 2400/2016MHz  1.06  16%   0%  16%   0%   0%   0%  35.7Â°C
13:36:06: 2400/2016MHz  1.05  16%   0%  16%   0%   0%   0%  40.0Â°C
13:36:22: 2400/2016MHz  1.04  16%   0%  16%   0%   0%   0%  36.1Â°C
13:36:38: 2400/2016MHz  1.03  16%   0%  16%   0%   0%   0%  40.8Â°C
13:36:54: 2400/2016MHz  1.02  16%   0%  16%   0%   0%   0%  36.5Â°C
13:37:10: 2400/2016MHz  1.01  16%   0%  16%   0%   0%   0%  41.0Â°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:37:22: 2400/2016MHz  1.01   0%   0%   0%   0%   0%   0%  42.3Â°C
13:37:32: 2400/2016MHz  1.01  16%   0%  16%   0%   0%   0%  36.7Â°C
13:37:42: 2400/2016MHz  1.01  16%   0%  16%   0%   0%   0%  36.3Â°C
13:37:52: 2400/2016MHz  1.01  16%   0%  16%   0%   0%   0%  36.4Â°C
13:38:02: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  36.5Â°C
13:38:12: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  36.5Â°C
13:38:22: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  36.1Â°C
13:38:32: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  36.5Â°C
13:38:42: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  36.5Â°C
13:38:52: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  36.5Â°C
13:39:02: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  38.8Â°C
13:39:12: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  39.9Â°C
13:39:22: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  40.2Â°C
13:39:32: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  40.2Â°C
13:39:42: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  40.4Â°C
13:39:52: 2400/2016MHz  1.00  16%   0%  16%   0%   0%   0%  40.4Â°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:40:01: 2400/2016MHz  1.00   0%   0%   0%   0%   0%   0%  43.6Â°C
13:40:11: 2400/2016MHz  1.99  84%   0%  83%   0%   0%   0%  62.7Â°C
13:40:24: 2400/2016MHz  2.61  86%   0%  85%   0%   0%   0%  64.7Â°C
13:40:35: 2400/2016MHz  3.51  85%   0%  84%   0%   0%   0%  58.5Â°C
13:40:45: 2400/2016MHz  3.49  78%   0%  77%   0%   0%   0%  57.5Â°C
13:40:56: 2400/2016MHz  4.03  96%   1%  94%   0%   0%   0%  59.8Â°C
13:41:06: 2400/2016MHz  4.33  83%   0%  82%   0%   0%   0%  51.1Â°C
13:41:18: 2400/2016MHz  4.74  97%   0%  96%   0%   0%   0%  68.7Â°C
13:41:30: 2400/2016MHz  4.64  85%   0%  84%   0%   0%   0%  68.7Â°C
13:41:43: 2400/2016MHz  5.17  83%   0%  82%   0%   0%   0%  67.5Â°C
13:41:54: 2400/2016MHz  5.42  82%   0%  80%   0%   0%   0%  61.5Â°C
13:42:04: 2400/2016MHz  5.59  95%   1%  93%   0%   0%   0%  67.9Â°C
13:42:15: 2400/2016MHz  5.81  77%   0%  76%   0%   0%   0%  61.1Â°C
13:42:25: 2400/2016MHz  5.52  88%   0%  87%   0%   0%   0%  55.8Â°C
13:42:35: 2400/2016MHz  5.59  94%   0%  93%   0%   0%   0%  71.5Â°C
13:42:48: 2400/2016MHz  5.88  82%   1%  81%   0%   0%   0%  69.7Â°C
13:43:00: 2400/2016MHz  6.29  81%   0%  80%   0%   0%   0%  63.8Â°C
13:43:13: 2400/2016MHz  6.39  97%   1%  95%   0%   0%   0%  70.6Â°C

##########################################################################

Linux 6.0.13-meson64 (khadas-vim3-2) 	02/14/23 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.89    0.00    0.07    0.00    0.00   99.04

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           0.37         9.63         4.38       963.58     280617     127792   28090096
zram0             0.02         0.08         0.00         0.00       2392          4          0
zram1             0.04         0.02         0.24         0.00        564       7064          0

               total        used        free      shared  buff/cache   available
Mem:           3.7Gi       157Mi       3.4Gi       5.0Mi       127Mi       3.5Gi
Swap:          1.8Gi          0B       1.8Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1933716	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0     1000    2016   Cortex-A53 / r0p4
  1        0        0     1000    2016   Cortex-A53 / r0p4
  2        0        2     1000    2400   Cortex-A73 / r0p2
  3        0        2     1000    2400   Cortex-A73 / r0p2
  4        0        2     1000    2400   Cortex-A73 / r0p2
  5        0        2     1000    2400   Cortex-A73 / r0p2

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          6
On-line CPU(s) list:             0-5
Thread(s) per core:              1
Core(s) per socket:              6
Socket(s):                       1
NUMA node(s):                    1
Vendor ID:                       ARM
Model:                           4
Model name:                      Cortex-A53
Stepping:                        r0p4
CPU max MHz:                     2400.0000
CPU min MHz:                     1000.0000
BogoMIPS:                        48.00
NUMA node0 CPU(s):               0-5
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Mmio stale data:   Not affected
Vulnerability Retbleed:          Not affected
Vulnerability Spec store bypass: Vulnerable
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Vulnerable
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid

SoC guess: Amlogic Meson G12B (A311D) Revision 29:b (10:2)
DT compat: khadas,vim3
           amlogic,a311d
           amlogic,g12b
 Compiler: /usr/bin/gcc (Debian 10.2.1-6) 10.2.1 20210110 / aarch64-linux-gnu
 Userland: arm64
   Kernel: 6.0.13-meson64/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_BUILD=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y

##########################################################################

6.0 has reached end-of-life on 2023-01-12 with version 6.0.19.
Your 6.0.13 and all other 6.0 revisions are unsupported since then.

##########################################################################

   opp-table-0:
      1000 MHz    761.0 mV
      1200 MHz    781.0 mV
      1398 MHz    811.0 mV
      1512 MHz    861.0 mV
      1608 MHz    901.0 mV
      1704 MHz    951.0 mV
      1800 MHz   1001.0 mV
      1908 MHz   1030.0 mV
      2016 MHz   1040.0 mV

   opp-table-1:
      1000 MHz    731.0 mV
      1200 MHz    751.0 mV
      1398 MHz    771.0 mV
      1512 MHz    771.0 mV
      1608 MHz    781.0 mV
      1704 MHz    791.0 mV
      1800 MHz    831.0 mV
      1908 MHz    861.0 mV
      2016 MHz    911.0 mV
      2108 MHz    951.0 mV
      2208 MHz   1011.0 mV
      2304 MHz   1030.0 mV
      2400 MHz   1040.0 mV

   opp-table-gpu:
       125 MHz    800.0 mV
       250 MHz    800.0 mV
       286 MHz    800.0 mV
       400 MHz    800.0 mV
       500 MHz    800.0 mV
       667 MHz    800.0 mV
       800 MHz    800.0 mV

| Khadas VIM3 | 2400/2016 MHz | 6.0 | Debian GNU/Linux 11 (bullseye) arm64 | 9650 | 2379 | 1366300 | 5080 | 9240 | - |