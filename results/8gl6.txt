sbc-bench v0.9.71 Milk-V DuoS (Sun, 08 Jun 2025 18:25:14 +0000)

Description:	Debian GNU/Linux 13 (trixie)

/usr/bin/gcc (Debian 14.2.0-19) 14.2.0

Uptime: 18:25:14 up 2 min,  2 users,  load average: 0.15, 0.12, 0.05,  40.6°C,  1790240718

Linux 5.10.4-20240527-2+ (duos) 	06/08/25 	_riscv64_	(1 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          13.64    0.16    9.89    0.45    0.00   75.87

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0          22.82       590.30        85.28         0.00      97275      14052          0

               total        used        free      shared  buff/cache   available
Mem:           486Mi        57Mi       383Mi       584Ki        55Mi       429Mi
Swap:             0B          0B          0B

##########################################################################

Checking cpufreq OPP (rv64imafdvcsu):

No cpufreq support.  Measured: 1047 (1047.575/1047.470/1047.246)

##########################################################################

Executing benchmark on cpu0 (rv64imafdvcsu):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   1422.5 MB/s (3, 32.4%)
 C copy backwards (32 byte blocks)                :    817.0 MB/s (3, 0.6%)
 C copy backwards (64 byte blocks)                :   1490.2 MB/s (3, 2.6%)
 C copy                                           :   1540.0 MB/s (3, 0.3%)
 C copy prefetched (32 bytes step)                :   1541.5 MB/s (3, 0.6%)
 C copy prefetched (64 bytes step)                :   1541.1 MB/s (2)
 C 2-pass copy                                    :    755.7 MB/s (2)
 C 2-pass copy prefetched (32 bytes step)         :    756.1 MB/s (3, 0.2%)
 C 2-pass copy prefetched (64 bytes step)         :    743.2 MB/s (3, 0.5%)
 C scan 8                                         :    254.6 MB/s (3, 1.4%)
 C scan 16                                        :    500.9 MB/s (2)
 C scan 32                                        :    967.8 MB/s (2)
 C scan 64                                        :   1796.0 MB/s (3, 0.2%)
 C fill                                           :   3518.8 MB/s (2)
 C fill (shuffle within 16 byte blocks)           :    301.2 MB/s (2)
 C fill (shuffle within 32 byte blocks)           :    300.1 MB/s (3, 1.2%)
 C fill (shuffle within 64 byte blocks)           :    299.6 MB/s (3, 1.5%)
 ---
 libc memcpy copy                                 :   1423.6 MB/s (2)
 libc memchr scan                                 :    787.0 MB/s (2)
 libc memset fill                                 :   3518.7 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.2 ns          /     0.1 ns 
     65536 :    2.1 ns          /     3.8 ns 
    131072 :   79.3 ns          /   124.3 ns 
    262144 :  118.1 ns          /   161.6 ns 
    524288 :  137.3 ns          /   174.2 ns 
   1048576 :  147.4 ns          /   179.8 ns 
   2097152 :  170.9 ns          /   212.0 ns 
   4194304 :  183.7 ns          /   234.9 ns 
   8388608 :  203.9 ns          /   265.4 ns 
  16777216 :  229.5 ns          /   316.3 ns 
  33554432 :  266.1 ns          /   389.3 ns 
  67108864 :  294.1 ns          /   445.4 ns 

##########################################################################

Executing benchmark twice on cluster 0 (rv64imafdvcsu)

OpenSSL 3.5.0, built on 8 Apr 2025 (Library: OpenSSL 3.5.0 8 Apr 2025)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc       7478.82k    14913.34k    16496.30k    16865.62k    16962.90k    16962.90k
aes-128-cbc      11848.98k    15067.29k    16218.20k    16859.14k    16954.71k    16962.90k
aes-192-cbc      10490.60k    13123.65k    13681.92k    14072.83k    14330.54k    14325.08k
aes-192-cbc      10423.39k    13062.53k    13835.78k    13850.62k    14265.00k    14265.00k
aes-256-cbc       9436.88k    11456.96k    12109.74k    12102.66k    12077.74k    12326.23k
aes-256-cbc       9418.77k    11445.06k    12111.53k    12296.19k    12088.66k    12162.39k

##########################################################################

Executing benchmark single-threaded on cpu0 (rv64imafdvcsu)

7-Zip (a) 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,1 CPU LE)

LE
CPU Freq: 64000000 64000000 64000000 - - - - - -

RAM size:     486 MB,  # CPU hardware threads:   1
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        382    97    383    373  |       7833    99    672    669
23:        372    99    383    380  |       7687    99    670    665
24:        367    99    397    395  |       7539    99    666    662
25:        356    99    411    407  |       7218    98    657    642
----------------------------------  | ------------------------------
Avr:              99    393    389  |               99    666    660
Tot:              99    530    524

Compression: 389
Decompression: 660
Total: 524

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:32:42:  n/aMHz    1.21 100%   4%  95%   0%   0%   0%  42.7°C  

Checking cpufreq OPP (rv64imafdvcsu):

No cpufreq support.  Measured: 1047 (1047.394/1047.319/1046.708)

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (soc_thermal_0)

System health while running tinymembench:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:25:25:  n/aMHz    0.36  28%   9%  17%   0%   0%   0%  41.6°C  
18:25:39:  n/aMHz    0.57 100%   0%  99%   0%   0%   0%  42.7°C  
18:25:53:  n/aMHz    0.75 100%   0%  99%   0%   0%   0%  42.3°C  
18:26:08:  n/aMHz    0.79 100%   1%  98%   0%   0%   0%  42.0°C  

System health while running OpenSSL benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:26:21:  n/aMHz    0.90  45%   7%  37%   0%   0%   0%  42.0°C  
18:26:42:  n/aMHz    0.99 100%   0%  99%   0%   0%   0%  42.0°C  
18:27:02:  n/aMHz    1.06 100%   0%  99%   0%   0%   0%  42.0°C  
18:27:22:  n/aMHz    1.10 100%   0%  99%   0%   0%   0%  42.0°C  
18:27:42:  n/aMHz    1.14 100%   0%  99%   0%   0%   0%  42.0°C  
18:28:02:  n/aMHz    1.16 100%   0%  99%   0%   0%   0%  42.0°C  

System health while running 7-zip single core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:28:10:  n/aMHz    1.29  63%   5%  57%   0%   0%   0%  42.3°C  
18:28:30:  n/aMHz    1.27 100%   1%  98%   0%   0%   0%  42.3°C  
18:28:49:  n/aMHz    1.25 100%   0%  99%   0%   0%   0%  42.3°C  
18:29:08:  n/aMHz    1.20 100%   0%  98%   0%   0%   0%  42.3°C  
18:29:27:  n/aMHz    1.20 100%   2%  97%   0%   0%   0%  42.7°C  
18:29:46:  n/aMHz    1.21 100%   0%  99%   0%   0%   0%  42.3°C  
18:30:06:  n/aMHz    1.21 100%   2%  97%   0%   0%   0%  42.7°C  
18:30:25:  n/aMHz    1.21 100%   2%  97%   0%   0%   0%  42.7°C  
18:30:44:  n/aMHz    1.21 100%   2%  97%   0%   0%   0%  42.3°C  
18:31:03:  n/aMHz    1.17 100%   0%  99%   0%   0%   0%  42.3°C  
18:31:23:  n/aMHz    1.18 100%   3%  96%   0%   0%   0%  42.7°C  
18:31:42:  n/aMHz    1.19 100%   2%  97%   0%   0%   0%  42.7°C  
18:32:01:  n/aMHz    1.20 100%   2%  97%   0%   0%   0%  42.7°C  
18:32:20:  n/aMHz    1.20 100%   2%  97%   0%   0%   0%  42.7°C  
18:32:42:  n/aMHz    1.21 100%   4%  95%   0%   0%   0%  42.7°C  

##########################################################################

Linux 5.10.4-20240527-2+ (duos) 	06/08/25 	_riscv64_	(1 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          76.02    0.09    4.13    0.12    0.00   19.64

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           6.71       182.00        23.07         0.00     115235      14608          0

               total        used        free      shared  buff/cache   available
Mem:           486Mi        56Mi       415Mi       612Ki        24Mi       429Mi
Swap:             0B          0B          0B

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0       -1        0       -      -     rv64imafdvcsu

Architecture:        riscv64
Byte Order:          Little Endian
CPU(s):              1
On-line CPU(s) list: 0

  cpuinfo: http://0x0.st/81GU.txt
Signature: 10rv64imafdvcsu
DT compat: cvitek,cv181x
 Compiler: /usr/bin/gcc (Debian 14.2.0-19) 14.2.0 / riscv64-linux-gnu
 Userland: riscv64
   Kernel: 5.10.4-20240527-2+/riscv64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPT_NONE=y

##########################################################################

Results validation:

  * Too much background activity (%system): 1% avg, 4% max -> https://tinyurl.com/mr2wy5uv

| Milk-V DuoS | ~1050 MHz | 5.10 | Debian GNU/Linux 13 (trixie) riscv64 | 520 | 524 | 12240 | 1420 | 3520 | - |