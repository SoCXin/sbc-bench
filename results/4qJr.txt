sbc-bench v0.9.39 Radxa ROCK 5B review (Mon, 13 Mar 2023 17:21:19 +0100)

Distributor ID:	Ubuntu
Description:	Ubuntu 20.04.5 LTS
Release:	20.04
Codename:	focal
Build system:   https://github.com/armbian/build, 23.02.2, Rock 5B, rockchip-rk3588, rockchip-rk3588

/usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0

Uptime: 17:21:19 up 1 min,  1 user,  load average: 0.31, 0.13, 0.05,  41.6Â°C,  5.15V,  136462724

Linux 5.10.110-rockchip-rk3588 (rock-5b) 	03/13/23 	_aarch64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           1.79    0.02    2.64    1.50    0.00   94.06

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           3.62       107.92         0.00         0.00       8429          0          0
mmcblk1          49.83      2400.60        13.53         0.00     187511       1056          0
mtdblock0         0.45         4.30         0.00         0.00        336          0          0
zram0             7.18        28.68         0.05         0.00       2240          4          0
zram1             2.46         5.68        89.57         0.00        444       6996          0

              total        used        free      shared  buff/cache   available
Mem:           15Gi       232Mi        15Gi       9.0Mi       100Mi        14Gi
Swap:         7.7Gi          0B       7.7Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	8048172	0	5

Power monitoring on socket 2 of powerbox-1 (Netio 4KF, FW v3.2.0, XML API v2.4, 231.25V @ 50.04Hz) 

##########################################################################

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A55):

Cpufreq OPP: 1800    Measured: 1823 (1823.209/1823.168/1823.128)     (+1.3%)
Cpufreq OPP: 1608    Measured: 1642 (1643.074/1642.992/1642.829)     (+2.1%)
Cpufreq OPP: 1416    Measured: 1424 (1424.042/1424.011/1424.011)
Cpufreq OPP: 1200    Measured: 1234 (1234.535/1234.507/1234.219)     (+2.8%)
Cpufreq OPP: 1008    Measured: 1065 (1065.818/1065.796/1065.560)     (+5.7%)
Cpufreq OPP:  816    Measured:  848    (848.245/848.143/848.058)     (+3.9%)
Cpufreq OPP:  600    Measured:  591    (591.378/591.353/591.327)     (-1.5%)
Cpufreq OPP:  408    Measured:  393    (393.560/393.542/393.337)     (-3.7%)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A76):

Cpufreq OPP: 2400    Measured: 2333 (2333.266/2333.213/2333.213)     (-2.8%)
Cpufreq OPP: 2352    Measured: 2333 (2333.160/2333.107/2333.055)
Cpufreq OPP: 2304    Measured: 2332 (2333.055/2333.002/2332.739)     (+1.2%)
Cpufreq OPP: 2256    Measured: 2332 (2333.002/2333.002/2332.949)     (+3.4%)
Cpufreq OPP: 2208    Measured: 2173 (2173.107/2173.062/2172.924)     (-1.6%)
Cpufreq OPP: 2016    Measured: 2007 (2007.296/2007.296/2007.101)
Cpufreq OPP: 1800    Measured: 1810 (1810.824/1810.666/1810.666)
Cpufreq OPP: 1608    Measured: 1622 (1622.828/1622.788/1622.708)
Cpufreq OPP: 1416    Measured: 1435 (1435.981/1435.919/1435.887)     (+1.3%)
Cpufreq OPP: 1200    Measured: 1258 (1258.445/1258.445/1258.385)     (+4.8%)
Cpufreq OPP: 1008    Measured: 1056 (1056.188/1055.977/1055.924)     (+4.8%)
Cpufreq OPP:  816    Measured:  849    (849.727/849.727/849.642)     (+4.0%)
Cpufreq OPP:  600    Measured:  592    (592.906/592.893/592.880)     (-1.3%)
Cpufreq OPP:  408    Measured:  394    (394.932/394.914/394.914)     (-3.4%)

Checking cpufreq OPP for cpu6-cpu7 (Cortex-A76):

Cpufreq OPP: 2400    Measured: 2334 (2334.320/2334.320/2334.320)     (-2.7%)
Cpufreq OPP: 2352    Measured: 2334 (2334.215/2334.109/2334.056)
Cpufreq OPP: 2304    Measured: 2334 (2334.320/2334.162/2334.056)     (+1.3%)
Cpufreq OPP: 2256    Measured: 2333 (2334.004/2333.951/2333.529)     (+3.4%)
Cpufreq OPP: 2208    Measured: 2174 (2174.296/2174.251/2174.159)     (-1.5%)
Cpufreq OPP: 2016    Measured: 2006 (2007.053/2006.858/2006.858)
Cpufreq OPP: 1800    Measured: 1809 (1809.674/1809.595/1809.437)
Cpufreq OPP: 1608    Measured: 1620 (1620.163/1620.004/1620.004)
Cpufreq OPP: 1416    Measured: 1429 (1429.987/1429.770/1429.646)
Cpufreq OPP: 1200    Measured: 1246 (1246.434/1246.434/1246.405)     (+3.8%)
Cpufreq OPP: 1008    Measured: 1048 (1049.013/1049.013/1048.961)     (+4.0%)
Cpufreq OPP:  816    Measured:  843    (843.498/843.477/843.413)     (+3.3%)
Cpufreq OPP:  600    Measured:  592    (592.893/592.893/592.880)     (-1.3%)
Cpufreq OPP:  408    Measured:  394    (394.968/394.959/394.932)     (-3.4%)

##########################################################################

Hardware sensors:

gpu_thermal-virtual-0
temp1:        +39.8 C  

littlecore_thermal-virtual-0
temp1:        +40.7 C  

bigcore0_thermal-virtual-0
temp1:        +40.7 C  

tcpm_source_psy_4_0022-i2c-4-22
in0:           5.00 V  (min =  +5.00 V, max =  +5.00 V)
curr1:         3.00 A  (max =  +3.00 A)

npu_thermal-virtual-0
temp1:        +40.7 C  

center_thermal-virtual-0
temp1:        +40.7 C  

bigcore1_thermal-virtual-0
temp1:        +40.7 C  

soc_thermal-virtual-0
temp1:        +40.7 C  (crit = +115.0 C)

##########################################################################

Executing benchmark on cpu0 (Cortex-A55):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   3230.0 MB/s (3, 8.2%)
 C copy backwards (32 byte blocks)                :   3180.7 MB/s (2)
 C copy backwards (64 byte blocks)                :   3230.4 MB/s (2)
 C copy                                           :   5418.2 MB/s (2)
 C copy prefetched (32 bytes step)                :   2332.0 MB/s (3, 0.2%)
 C copy prefetched (64 bytes step)                :   5546.5 MB/s (2)
 C 2-pass copy                                    :   2531.0 MB/s (2)
 C 2-pass copy prefetched (32 bytes step)         :   1559.3 MB/s (3)
 C 2-pass copy prefetched (64 bytes step)         :   2899.3 MB/s (2)
 C scan 8                                         :    452.1 MB/s (2)
 C scan 16                                        :    898.5 MB/s (2)
 C scan 32                                        :   1782.2 MB/s (2)
 C scan 64                                        :   3429.8 MB/s (2)
 C fill                                           :  14073.3 MB/s (2)
 C fill (shuffle within 16 byte blocks)           :  12576.2 MB/s (2)
 C fill (shuffle within 32 byte blocks)           :  12576.6 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :  12278.9 MB/s (2)
 ---
 libc memcpy copy                                 :   5885.4 MB/s (2)
 libc memchr scan                                 :   3279.7 MB/s (2)
 libc memset fill                                 :  22141.2 MB/s (2)
 ---
 NEON LDP/STP copy                                :   5211.8 MB/s (3, 0.2%)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :   1810.9 MB/s (2)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :   3366.8 MB/s (2)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :   2564.8 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :   4985.5 MB/s (2)
 NEON LD1/ST1 copy                                :   4985.4 MB/s (2)
 NEON LDP load                                    :   6197.9 MB/s (2)
 NEON LDNP load                                   :   6264.9 MB/s (2)
 NEON STP fill                                    :  22067.6 MB/s (2)
 NEON STNP fill                                   :  15477.1 MB/s (3, 1.1%)
 ARM LDP/STP copy                                 :   5209.0 MB/s (2)
 ARM LDP load                                     :   6196.6 MB/s (2)
 ARM LDNP load                                    :   6265.0 MB/s (2)
 ARM STP fill                                     :  22059.1 MB/s (2)
 ARM STNP fill                                    :  15491.1 MB/s (3, 1.1%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.2 ns          /     0.1 ns 
     32768 :    1.0 ns          /     1.2 ns 
     65536 :    1.6 ns          /     2.7 ns 
    131072 :    2.9 ns          /     4.3 ns 
    262144 :    8.4 ns          /    11.8 ns 
    524288 :   12.4 ns          /    15.0 ns 
   1048576 :   15.3 ns          /    16.1 ns 
   2097152 :   19.9 ns          /    18.6 ns 
   4194304 :   45.7 ns          /    65.7 ns 
   8388608 :   88.7 ns          /   120.7 ns 
  16777216 :  110.7 ns          /   139.2 ns 
  33554432 :  123.2 ns          /   149.1 ns 
  67108864 :  130.2 ns          /   159.1 ns 

Executing benchmark on cpu4 (Cortex-A76):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   9914.8 MB/s (3, 0.2%)
 C copy backwards (32 byte blocks)                :   9866.9 MB/s (2)
 C copy backwards (64 byte blocks)                :   9871.6 MB/s (2)
 C copy                                           :  10269.8 MB/s (2)
 C copy prefetched (32 bytes step)                :  10475.3 MB/s (2)
 C copy prefetched (64 bytes step)                :  10484.1 MB/s (2)
 C 2-pass copy                                    :   4715.3 MB/s (3, 0.2%)
 C 2-pass copy prefetched (32 bytes step)         :   7390.5 MB/s (2)
 C 2-pass copy prefetched (64 bytes step)         :   6674.4 MB/s (2)
 C scan 8                                         :   1160.5 MB/s (2)
 C scan 16                                        :   2319.3 MB/s (2)
 C scan 32                                        :   4632.4 MB/s (2)
 C scan 64                                        :   8346.6 MB/s (2)
 C fill                                           :  28823.6 MB/s (3, 0.9%)
 C fill (shuffle within 16 byte blocks)           :  29075.3 MB/s (3, 0.4%)
 C fill (shuffle within 32 byte blocks)           :  29241.2 MB/s (3, 0.8%)
 C fill (shuffle within 64 byte blocks)           :  29181.3 MB/s (2)
 ---
 libc memcpy copy                                 :  10464.3 MB/s (2)
 libc memchr scan                                 :  14858.1 MB/s (3, 0.4%)
 libc memset fill                                 :  29162.6 MB/s (3, 1.3%)
 ---
 NEON LDP/STP copy                                :  10490.6 MB/s (2)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :  10523.4 MB/s (3, 0.1%)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :  10532.6 MB/s (2)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :  10558.0 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :  10551.3 MB/s (2)
 NEON LD1/ST1 copy                                :  10402.5 MB/s (2)
 NEON LDP load                                    :  17178.6 MB/s (2)
 NEON LDNP load                                   :  16260.9 MB/s (2)
 NEON STP fill                                    :  29188.8 MB/s (3, 1.4%)
 NEON STNP fill                                   :  29119.5 MB/s (3, 0.8%)
 ARM LDP/STP copy                                 :  10479.4 MB/s (2)
 ARM LDP load                                     :  16879.5 MB/s (2)
 ARM LDNP load                                    :  15641.1 MB/s (2)
 ARM STP fill                                     :  28939.2 MB/s (3, 1.3%)
 ARM STNP fill                                    :  29175.6 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    0.1 ns          /     0.0 ns 
    131072 :    1.3 ns          /     1.5 ns 
    262144 :    2.6 ns          /     2.8 ns 
    524288 :    3.6 ns          /     4.0 ns 
   1048576 :   11.4 ns          /    13.0 ns 
   2097152 :   17.1 ns          /    15.6 ns 
   4194304 :   39.1 ns          /    56.5 ns 
   8388608 :   83.0 ns          /   111.8 ns 
  16777216 :  106.5 ns          /   131.9 ns 
  33554432 :  118.9 ns          /   139.8 ns 
  67108864 :  125.5 ns          /   144.3 ns 

Executing benchmark on cpu6 (Cortex-A76):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   9936.1 MB/s (3, 0.2%)
 C copy backwards (32 byte blocks)                :   9885.0 MB/s (2)
 C copy backwards (64 byte blocks)                :   9890.1 MB/s (2)
 C copy                                           :  10289.5 MB/s (2)
 C copy prefetched (32 bytes step)                :  10471.5 MB/s (2)
 C copy prefetched (64 bytes step)                :  10477.6 MB/s (2)
 C 2-pass copy                                    :   4754.5 MB/s (3, 0.3%)
 C 2-pass copy prefetched (32 bytes step)         :   7402.8 MB/s (2)
 C 2-pass copy prefetched (64 bytes step)         :   6826.6 MB/s (2)
 C scan 8                                         :   1158.2 MB/s (2)
 C scan 16                                        :   2315.6 MB/s (2)
 C scan 32                                        :   4625.7 MB/s (2)
 C scan 64                                        :   8346.0 MB/s (2)
 C fill                                           :  28710.2 MB/s (3, 0.8%)
 C fill (shuffle within 16 byte blocks)           :  28861.9 MB/s (3, 0.3%)
 C fill (shuffle within 32 byte blocks)           :  29155.1 MB/s (3, 0.3%)
 C fill (shuffle within 64 byte blocks)           :  28752.1 MB/s (3, 0.5%)
 ---
 libc memcpy copy                                 :  10465.7 MB/s (2)
 libc memchr scan                                 :  14900.9 MB/s (2)
 libc memset fill                                 :  29000.5 MB/s (3, 1.2%)
 ---
 NEON LDP/STP copy                                :  10493.7 MB/s (2)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :  10525.9 MB/s (2)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :  10534.4 MB/s (2)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :  10565.4 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :  10558.7 MB/s (2)
 NEON LD1/ST1 copy                                :  10399.8 MB/s (2)
 NEON LDP load                                    :  17254.4 MB/s (2)
 NEON LDNP load                                   :  16317.9 MB/s (2)
 NEON STP fill                                    :  28948.5 MB/s (3, 1.1%)
 NEON STNP fill                                   :  29185.0 MB/s (2)
 ARM LDP/STP copy                                 :  10480.1 MB/s (2)
 ARM LDP load                                     :  16943.6 MB/s (2)
 ARM LDNP load                                    :  15683.0 MB/s (2)
 ARM STP fill                                     :  29025.7 MB/s (3, 1.2%)
 ARM STNP fill                                    :  29193.8 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    0.1 ns          /     0.0 ns 
    131072 :    1.3 ns          /     1.5 ns 
    262144 :    2.6 ns          /     2.8 ns 
    524288 :    4.1 ns          /     4.0 ns 
   1048576 :   12.2 ns          /    13.0 ns 
   2097152 :   18.2 ns          /    15.7 ns 
   4194304 :   39.5 ns          /    57.4 ns 
   8388608 :   83.0 ns          /   111.9 ns 
  16777216 :  106.8 ns          /   131.9 ns 
  33554432 :  118.9 ns          /   139.7 ns 
  67108864 :  124.6 ns          /   144.1 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A55), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.669 1.657 1.654 1.653 1.102 1.653 2.239 4.511 
         8k: 1.653 1.653 1.652 1.653 1.102 1.653 2.238 4.511 
        16k: 1.662 1.653 1.662 1.653 1.107 1.653 2.239 4.511 
        32k: 1.677 1.654 1.677 1.655 1.114 1.655 2.242 4.517 
        64k: 9.788 11.01 9.787 11.01 9.956 11.04 15.94 28.97 
       128k: 13.19 14.19 13.20 14.18 13.65 14.19 21.51 40.50 
       256k: 15.85 16.27 15.85 16.27 15.28 16.31 25.28 49.31 
       512k: 16.63 16.80 16.61 16.81 15.94 17.00 26.54 52.79 
      1024k: 16.83 16.92 16.75 16.92 16.16 17.09 27.72 52.96 
      2048k: 20.49 21.94 19.94 21.94 19.31 22.20 36.41 71.54 
      4096k: 55.83 68.12 53.19 68.31 53.01 68.31 117.1 254.0 
      8192k: 100.7 106.4 97.97 106.7 97.48 110.9 181.9 326.3 
     16384k: 120.9 121.0 118.1 121.2 116.8 126.6 203.6 371.3 
     32768k: 128.7 129.5 127.1 129.0 126.1 134.3 212.8 380.5 
     65536k: 135.3 136.0 135.0 135.9 134.4 140.7 217.7 386.1 
    131072k: 145.5 146.0 145.1 146.0 144.4 150.7 225.1 397.9 

Executing ramlat on cpu4 (Cortex-A76), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.722 1.722 1.721 1.722 1.721 1.721 1.722 3.268 
         8k: 1.721 1.722 1.721 1.721 1.721 1.722 1.722 3.355 
        16k: 1.721 1.722 1.721 1.722 1.721 1.721 1.722 3.356 
        32k: 1.721 1.722 1.721 1.722 1.721 1.721 1.722 3.359 
        64k: 1.722 1.722 1.722 1.722 1.722 1.722 1.723 3.358 
       128k: 5.326 5.328 5.326 5.328 5.326 5.940 7.437 13.05 
       256k: 6.076 6.164 6.080 6.094 6.094 6.086 7.579 13.05 
       512k: 9.063 8.744 9.079 8.753 9.294 9.205 10.69 16.85 
      1024k: 17.97 18.28 17.89 18.28 17.91 18.17 19.90 29.96 
      2048k: 19.33 19.48 19.23 19.48 19.19 19.79 21.92 31.76 
      4096k: 55.35 42.83 50.64 42.65 50.58 44.41 46.72 59.95 
      8192k: 101.4 85.65 97.97 85.61 97.49 84.82 84.23 91.84 
     16384k: 120.8 109.5 118.6 109.4 118.7 107.7 109.7 109.1 
     32768k: 131.1 128.9 133.1 129.1 133.0 121.7 120.9 122.7 
     65536k: 134.2 134.5 133.9 134.4 134.0 127.7 125.7 132.3 
    131072k: 137.1 137.9 137.0 137.8 136.9 132.1 131.0 136.1 

Executing ramlat on cpu6 (Cortex-A76), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.721 1.721 1.720 1.721 1.720 1.720 1.721 3.263 
         8k: 1.720 1.721 1.720 1.721 1.720 1.720 1.721 3.353 
        16k: 1.720 1.721 1.720 1.720 1.720 1.720 1.721 3.353 
        32k: 1.720 1.720 1.720 1.721 1.720 1.720 1.721 3.356 
        64k: 1.721 1.721 1.721 1.721 1.721 1.721 1.722 3.356 
       128k: 5.214 5.217 5.214 5.216 5.215 5.920 7.426 13.04 
       256k: 6.129 6.073 6.104 6.098 6.119 6.079 7.574 13.04 
       512k: 11.60 9.961 11.28 9.966 11.65 10.62 12.43 19.14 
      1024k: 17.95 18.47 17.88 18.47 18.09 18.13 19.84 30.12 
      2048k: 19.32 19.45 19.30 19.45 19.25 19.78 21.89 31.66 
      4096k: 55.24 42.18 49.56 42.21 49.36 43.65 46.08 59.47 
      8192k: 101.8 85.42 98.06 86.08 101.1 84.98 84.20 91.70 
     16384k: 128.6 114.1 119.0 110.4 118.3 106.1 104.0 107.7 
     32768k: 127.5 128.2 127.3 128.3 127.7 125.0 120.6 116.0 
     65536k: 134.3 134.5 134.0 134.5 133.1 127.4 124.8 130.4 
    131072k: 137.9 138.2 138.0 138.3 137.2 132.3 130.5 134.8 

##########################################################################

Executing benchmark on each cluster individually

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-256-cbc     158764.21k   407795.78k   668686.34k   799750.83k   847765.50k   851542.02k (Cortex-A55)
aes-256-cbc     645699.40k  1057904.92k  1246935.72k  1300131.16k  1323152.73k  1325705.90k (Cortex-A76)
aes-256-cbc     645555.88k  1056458.05k  1248653.82k  1300471.81k  1323379.37k  1326006.27k (Cortex-A76)

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A55)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - 256000000 - - -

RAM size:   15719 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1398   100   1361   1361  |      22142   100   1891   1890
23:       1313   100   1338   1338  |      21680   100   1877   1877
24:       1276   100   1373   1373  |      21288   100   1869   1869
25:       1237   100   1413   1413  |      20770   100   1849   1849
----------------------------------  | ------------------------------
Avr:             100   1371   1371  |              100   1871   1871
Tot:             100   1621   1621

Executing benchmark single-threaded on cpu4 (Cortex-A76)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   15719 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3057   100   2975   2975  |      38167   100   3259   3259
23:       2913   100   2969   2969  |      37727   100   3266   3266
24:       2794   100   3004   3004  |      36980   100   3247   3247
25:       2659   100   3037   3037  |      36056   100   3209   3209
----------------------------------  | ------------------------------
Avr:             100   2996   2996  |              100   3245   3245
Tot:             100   3121   3121

Executing benchmark single-threaded on cpu6 (Cortex-A76)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   15719 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3093   100   3009   3009  |      38229   100   3264   3264
23:       2912   100   2967   2967  |      37744   100   3267   3267
24:       2759   100   2967   2967  |      36986   100   3247   3247
25:       2663   100   3041   3041  |      36037   100   3208   3208
----------------------------------  | ------------------------------
Avr:             100   2996   2996  |              100   3246   3246
Tot:             100   3121   3121

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-7

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - 64000000 - - - - - - -

RAM size:   15719 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      15733   739   2072  15306  |     208908   680   2620  17819
23:      15216   753   2059  15504  |     203409   677   2599  17602
24:      14562   761   2057  15658  |     199261   680   2573  17489
25:      13710   774   2024  15654  |     194406   682   2536  17301
----------------------------------  | ------------------------------
Avr:             757   2053  15530  |              680   2582  17553
Tot:             718   2317  16542

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   15719 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      15266   701   2117  14851  |     207739   679   2610  17719
23:      15189   755   2051  15477  |     203518   680   2589  17612
24:      14443   770   2018  15530  |     198946   681   2565  17461
25:      13734   778   2015  15681  |     193495   681   2530  17220
----------------------------------  | ------------------------------
Avr:             751   2050  15385  |              680   2573  17503
Tot:             716   2312  16444

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - 2048000000

RAM size:   15719 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      15584   725   2090  15161  |     208003   681   2607  17742
23:      14623   729   2045  14900  |     203157   681   2583  17581
24:      13827   721   2063  14868  |     198180   679   2560  17394
25:      13297   750   2023  15182  |     192801   680   2525  17158
----------------------------------  | ------------------------------
Avr:             731   2055  15028  |              680   2568  17469
Tot:             706   2312  16248

Compression: 15530,15385,15028
Decompression: 17553,17503,17469
Total: 16542,16444,16248

##########################################################################

** cpuminer-multi 1.3.7 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2023-03-13 17:34:29] 8 miner threads started, using 'scrypt' algorithm.
[2023-03-13 17:34:29] CPU #5: 4.38 kH/s
[2023-03-13 17:34:29] CPU #6: 4.38 kH/s
[2023-03-13 17:34:29] CPU #4: 4.24 kH/s
[2023-03-13 17:34:29] CPU #7: 4.29 kH/s
[2023-03-13 17:34:29] CPU #0: 1.80 kH/s
[2023-03-13 17:34:29] CPU #1: 1.79 kH/s
[2023-03-13 17:34:29] CPU #2: 1.79 kH/s
[2023-03-13 17:34:29] CPU #3: 1.78 kH/s
[2023-03-13 17:34:34] Total: 24.68 kH/s
[2023-03-13 17:34:39] CPU #4: 4.42 kH/s
[2023-03-13 17:34:39] CPU #7: 4.41 kH/s
[2023-03-13 17:34:39] Total: 24.79 kH/s
[2023-03-13 17:34:39] CPU #5: 4.41 kH/s
[2023-03-13 17:34:39] CPU #6: 4.41 kH/s
[2023-03-13 17:34:39] CPU #3: 1.81 kH/s
[2023-03-13 17:34:39] CPU #1: 1.81 kH/s
[2023-03-13 17:34:39] CPU #0: 1.81 kH/s
[2023-03-13 17:34:39] CPU #2: 1.80 kH/s
[2023-03-13 17:34:44] Total: 24.89 kH/s
[2023-03-13 17:34:49] CPU #4: 4.42 kH/s
[2023-03-13 17:34:49] CPU #7: 4.41 kH/s
[2023-03-13 17:34:49] Total: 24.90 kH/s
[2023-03-13 17:34:49] CPU #5: 4.42 kH/s
[2023-03-13 17:34:49] CPU #6: 4.41 kH/s
[2023-03-13 17:34:49] CPU #3: 1.81 kH/s
[2023-03-13 17:34:49] CPU #1: 1.81 kH/s
[2023-03-13 17:34:49] CPU #0: 1.81 kH/s
[2023-03-13 17:34:49] CPU #2: 1.80 kH/s
[2023-03-13 17:34:54] Total: 24.89 kH/s
[2023-03-13 17:34:59] CPU #4: 4.41 kH/s
[2023-03-13 17:34:59] CPU #7: 4.41 kH/s
[2023-03-13 17:34:59] Total: 24.88 kH/s
[2023-03-13 17:34:59] CPU #5: 4.42 kH/s
[2023-03-13 17:34:59] CPU #6: 4.41 kH/s
[2023-03-13 17:34:59] CPU #3: 1.81 kH/s
[2023-03-13 17:34:59] CPU #1: 1.81 kH/s
[2023-03-13 17:34:59] CPU #0: 1.81 kH/s
[2023-03-13 17:34:59] CPU #2: 1.80 kH/s
[2023-03-13 17:35:04] Total: 24.88 kH/s
[2023-03-13 17:35:09] CPU #4: 4.42 kH/s
[2023-03-13 17:35:09] CPU #7: 4.41 kH/s
[2023-03-13 17:35:09] Total: 24.87 kH/s
[2023-03-13 17:35:09] CPU #5: 4.42 kH/s
[2023-03-13 17:35:09] CPU #6: 4.41 kH/s
[2023-03-13 17:35:09] CPU #3: 1.81 kH/s
[2023-03-13 17:35:09] CPU #1: 1.81 kH/s
[2023-03-13 17:35:09] CPU #0: 1.81 kH/s
[2023-03-13 17:35:09] CPU #2: 1.80 kH/s
[2023-03-13 17:35:14] Total: 24.87 kH/s
[2023-03-13 17:35:19] CPU #4: 4.41 kH/s
[2023-03-13 17:35:19] CPU #7: 4.40 kH/s
[2023-03-13 17:35:19] Total: 24.86 kH/s
[2023-03-13 17:35:19] CPU #5: 4.41 kH/s
[2023-03-13 17:35:19] CPU #6: 4.40 kH/s
[2023-03-13 17:35:19] CPU #3: 1.81 kH/s
[2023-03-13 17:35:19] CPU #1: 1.81 kH/s
[2023-03-13 17:35:19] CPU #0: 1.81 kH/s
[2023-03-13 17:35:19] CPU #2: 1.80 kH/s
[2023-03-13 17:35:24] Total: 24.86 kH/s
[2023-03-13 17:35:29] CPU #4: 4.41 kH/s
[2023-03-13 17:35:29] CPU #7: 4.40 kH/s
[2023-03-13 17:35:29] Total: 24.85 kH/s
[2023-03-13 17:35:29] CPU #5: 4.41 kH/s
[2023-03-13 17:35:29] CPU #6: 4.41 kH/s
[2023-03-13 17:35:29] CPU #3: 1.81 kH/s
[2023-03-13 17:35:29] CPU #1: 1.81 kH/s
[2023-03-13 17:35:29] CPU #0: 1.81 kH/s
[2023-03-13 17:35:29] CPU #2: 1.80 kH/s
[2023-03-13 17:35:34] Total: 24.86 kH/s
[2023-03-13 17:35:39] CPU #4: 4.41 kH/s
[2023-03-13 17:35:39] CPU #7: 4.40 kH/s
[2023-03-13 17:35:39] Total: 24.85 kH/s
[2023-03-13 17:35:39] CPU #5: 4.41 kH/s
[2023-03-13 17:35:39] CPU #6: 4.40 kH/s
[2023-03-13 17:35:39] CPU #3: 1.81 kH/s
[2023-03-13 17:35:39] CPU #1: 1.81 kH/s
[2023-03-13 17:35:39] CPU #0: 1.80 kH/s
[2023-03-13 17:35:39] CPU #2: 1.80 kH/s
[2023-03-13 17:35:44] Total: 24.85 kH/s
[2023-03-13 17:35:49] CPU #4: 4.41 kH/s
[2023-03-13 17:35:49] CPU #7: 4.40 kH/s
[2023-03-13 17:35:49] Total: 24.85 kH/s
[2023-03-13 17:35:49] CPU #5: 4.41 kH/s
[2023-03-13 17:35:49] CPU #6: 4.40 kH/s
[2023-03-13 17:35:49] CPU #3: 1.81 kH/s
[2023-03-13 17:35:49] CPU #1: 1.81 kH/s
[2023-03-13 17:35:49] CPU #0: 1.80 kH/s
[2023-03-13 17:35:49] CPU #2: 1.80 kH/s
[2023-03-13 17:35:54] Total: 24.84 kH/s
[2023-03-13 17:35:59] CPU #4: 4.41 kH/s
[2023-03-13 17:35:59] CPU #7: 4.40 kH/s
[2023-03-13 17:35:59] Total: 24.83 kH/s
[2023-03-13 17:35:59] CPU #5: 4.41 kH/s
[2023-03-13 17:35:59] CPU #6: 4.40 kH/s
[2023-03-13 17:35:59] CPU #3: 1.81 kH/s
[2023-03-13 17:35:59] CPU #1: 1.81 kH/s
[2023-03-13 17:35:59] CPU #0: 1.80 kH/s
[2023-03-13 17:35:59] CPU #2: 1.80 kH/s
[2023-03-13 17:36:04] Total: 24.83 kH/s
[2023-03-13 17:36:09] CPU #4: 4.40 kH/s
[2023-03-13 17:36:09] CPU #7: 4.40 kH/s
[2023-03-13 17:36:09] Total: 24.82 kH/s
[2023-03-13 17:36:09] CPU #5: 4.41 kH/s
[2023-03-13 17:36:09] CPU #6: 4.40 kH/s
[2023-03-13 17:36:09] CPU #3: 1.80 kH/s
[2023-03-13 17:36:09] CPU #1: 1.81 kH/s
[2023-03-13 17:36:09] CPU #0: 1.80 kH/s
[2023-03-13 17:36:09] CPU #2: 1.80 kH/s
[2023-03-13 17:36:14] Total: 24.83 kH/s
[2023-03-13 17:36:19] CPU #4: 4.41 kH/s
[2023-03-13 17:36:19] CPU #7: 4.40 kH/s
[2023-03-13 17:36:19] Total: 24.83 kH/s
[2023-03-13 17:36:19] CPU #5: 4.41 kH/s
[2023-03-13 17:36:19] CPU #6: 4.40 kH/s
[2023-03-13 17:36:19] CPU #3: 1.80 kH/s
[2023-03-13 17:36:19] CPU #1: 1.81 kH/s
[2023-03-13 17:36:19] CPU #0: 1.80 kH/s
[2023-03-13 17:36:19] CPU #2: 1.80 kH/s
[2023-03-13 17:36:24] Total: 24.83 kH/s
[2023-03-13 17:36:29] CPU #4: 4.41 kH/s
[2023-03-13 17:36:29] CPU #7: 4.40 kH/s
[2023-03-13 17:36:29] Total: 24.83 kH/s
[2023-03-13 17:36:29] CPU #5: 4.41 kH/s
[2023-03-13 17:36:29] CPU #6: 4.40 kH/s
[2023-03-13 17:36:29] CPU #3: 1.80 kH/s
[2023-03-13 17:36:29] CPU #1: 1.81 kH/s
[2023-03-13 17:36:29] CPU #0: 1.80 kH/s
[2023-03-13 17:36:29] CPU #2: 1.80 kH/s
[2023-03-13 17:36:34] Total: 24.82 kH/s
[2023-03-13 17:36:39] CPU #4: 4.41 kH/s
[2023-03-13 17:36:39] CPU #7: 4.40 kH/s
[2023-03-13 17:36:39] Total: 24.82 kH/s
[2023-03-13 17:36:39] CPU #5: 4.41 kH/s
[2023-03-13 17:36:39] CPU #6: 4.40 kH/s
[2023-03-13 17:36:39] CPU #3: 1.80 kH/s
[2023-03-13 17:36:39] CPU #1: 1.80 kH/s
[2023-03-13 17:36:39] CPU #0: 1.80 kH/s
[2023-03-13 17:36:39] CPU #2: 1.80 kH/s
[2023-03-13 17:36:44] Total: 24.81 kH/s
[2023-03-13 17:36:49] CPU #4: 4.40 kH/s
[2023-03-13 17:36:49] CPU #7: 4.40 kH/s
[2023-03-13 17:36:49] Total: 24.81 kH/s
[2023-03-13 17:36:49] CPU #5: 4.40 kH/s
[2023-03-13 17:36:49] CPU #6: 4.39 kH/s
[2023-03-13 17:36:49] CPU #3: 1.80 kH/s
[2023-03-13 17:36:49] CPU #1: 1.80 kH/s
[2023-03-13 17:36:49] CPU #0: 1.80 kH/s
[2023-03-13 17:36:49] CPU #2: 1.80 kH/s
[2023-03-13 17:36:54] Total: 24.80 kH/s
[2023-03-13 17:36:59] CPU #4: 4.40 kH/s
[2023-03-13 17:36:59] CPU #7: 4.40 kH/s
[2023-03-13 17:36:59] Total: 24.80 kH/s
[2023-03-13 17:36:59] CPU #5: 4.40 kH/s
[2023-03-13 17:36:59] CPU #6: 4.40 kH/s
[2023-03-13 17:36:59] CPU #3: 1.80 kH/s
[2023-03-13 17:36:59] CPU #1: 1.80 kH/s
[2023-03-13 17:36:59] CPU #0: 1.80 kH/s
[2023-03-13 17:36:59] CPU #2: 1.80 kH/s
[2023-03-13 17:37:04] Total: 24.81 kH/s
[2023-03-13 17:37:09] CPU #4: 4.40 kH/s
[2023-03-13 17:37:09] CPU #7: 4.40 kH/s
[2023-03-13 17:37:09] Total: 24.81 kH/s
[2023-03-13 17:37:09] CPU #5: 4.40 kH/s
[2023-03-13 17:37:09] CPU #6: 4.40 kH/s
[2023-03-13 17:37:09] CPU #3: 1.80 kH/s
[2023-03-13 17:37:09] CPU #1: 1.80 kH/s
[2023-03-13 17:37:09] CPU #0: 1.80 kH/s
[2023-03-13 17:37:09] CPU #2: 1.80 kH/s
[2023-03-13 17:37:14] Total: 24.80 kH/s
[2023-03-13 17:37:19] CPU #4: 4.40 kH/s
[2023-03-13 17:37:19] CPU #7: 4.40 kH/s
[2023-03-13 17:37:19] Total: 24.80 kH/s
[2023-03-13 17:37:19] CPU #5: 4.40 kH/s
[2023-03-13 17:37:19] CPU #6: 4.40 kH/s
[2023-03-13 17:37:19] CPU #3: 1.80 kH/s
[2023-03-13 17:37:19] CPU #1: 1.80 kH/s
[2023-03-13 17:37:19] CPU #0: 1.80 kH/s
[2023-03-13 17:37:19] CPU #2: 1.80 kH/s
[2023-03-13 17:37:24] Total: 24.79 kH/s
[2023-03-13 17:37:29] CPU #4: 4.40 kH/s
[2023-03-13 17:37:29] CPU #7: 4.40 kH/s
[2023-03-13 17:37:29] Total: 24.79 kH/s
[2023-03-13 17:37:29] CPU #5: 4.40 kH/s
[2023-03-13 17:37:29] CPU #6: 4.39 kH/s
[2023-03-13 17:37:29] CPU #3: 1.80 kH/s
[2023-03-13 17:37:29] CPU #1: 1.80 kH/s
[2023-03-13 17:37:29] CPU #0: 1.80 kH/s
[2023-03-13 17:37:29] CPU #2: 1.80 kH/s
[2023-03-13 17:37:34] Total: 24.78 kH/s
[2023-03-13 17:37:39] CPU #4: 4.40 kH/s
[2023-03-13 17:37:39] CPU #7: 4.39 kH/s
[2023-03-13 17:37:39] Total: 24.78 kH/s
[2023-03-13 17:37:39] CPU #5: 4.39 kH/s
[2023-03-13 17:37:39] CPU #6: 4.38 kH/s
[2023-03-13 17:37:39] CPU #3: 1.80 kH/s
[2023-03-13 17:37:39] CPU #1: 1.80 kH/s
[2023-03-13 17:37:39] CPU #0: 1.80 kH/s
[2023-03-13 17:37:39] CPU #2: 1.80 kH/s
[2023-03-13 17:37:44] Total: 24.77 kH/s
[2023-03-13 17:37:49] CPU #4: 4.40 kH/s
[2023-03-13 17:37:49] CPU #7: 4.39 kH/s
[2023-03-13 17:37:49] Total: 24.79 kH/s
[2023-03-13 17:37:49] CPU #5: 4.40 kH/s
[2023-03-13 17:37:49] CPU #6: 4.39 kH/s
[2023-03-13 17:37:49] CPU #3: 1.80 kH/s
[2023-03-13 17:37:49] CPU #1: 1.80 kH/s
[2023-03-13 17:37:49] CPU #0: 1.80 kH/s
[2023-03-13 17:37:49] CPU #2: 1.80 kH/s
[2023-03-13 17:37:54] Total: 24.78 kH/s
[2023-03-13 17:37:59] CPU #4: 4.40 kH/s
[2023-03-13 17:37:59] CPU #7: 4.39 kH/s
[2023-03-13 17:37:59] Total: 24.78 kH/s
[2023-03-13 17:37:59] CPU #5: 4.40 kH/s
[2023-03-13 17:37:59] CPU #6: 4.39 kH/s
[2023-03-13 17:37:59] CPU #3: 1.80 kH/s
[2023-03-13 17:37:59] CPU #1: 1.80 kH/s
[2023-03-13 17:37:59] CPU #0: 1.80 kH/s
[2023-03-13 17:37:59] CPU #2: 1.80 kH/s
[2023-03-13 17:38:04] Total: 24.78 kH/s
[2023-03-13 17:38:09] CPU #4: 4.40 kH/s
[2023-03-13 17:38:09] CPU #7: 4.39 kH/s
[2023-03-13 17:38:09] Total: 24.78 kH/s
[2023-03-13 17:38:09] CPU #5: 4.40 kH/s
[2023-03-13 17:38:09] CPU #6: 4.39 kH/s
[2023-03-13 17:38:09] CPU #3: 1.80 kH/s
[2023-03-13 17:38:09] CPU #1: 1.80 kH/s
[2023-03-13 17:38:09] CPU #0: 1.80 kH/s
[2023-03-13 17:38:09] CPU #2: 1.80 kH/s
[2023-03-13 17:38:14] Total: 24.78 kH/s
[2023-03-13 17:38:19] CPU #4: 4.40 kH/s
[2023-03-13 17:38:19] CPU #7: 4.39 kH/s
[2023-03-13 17:38:19] Total: 24.77 kH/s
[2023-03-13 17:38:19] CPU #5: 4.40 kH/s
[2023-03-13 17:38:19] CPU #6: 4.39 kH/s
[2023-03-13 17:38:19] CPU #3: 1.80 kH/s
[2023-03-13 17:38:19] CPU #1: 1.80 kH/s
[2023-03-13 17:38:19] CPU #0: 1.80 kH/s
[2023-03-13 17:38:19] CPU #2: 1.80 kH/s
[2023-03-13 17:38:24] Total: 24.76 kH/s
[2023-03-13 17:38:29] CPU #4: 4.40 kH/s
[2023-03-13 17:38:29] CPU #7: 4.39 kH/s
[2023-03-13 17:38:29] Total: 24.76 kH/s
[2023-03-13 17:38:29] CPU #5: 4.39 kH/s
[2023-03-13 17:38:29] CPU #6: 4.39 kH/s
[2023-03-13 17:38:29] CPU #3: 1.80 kH/s
[2023-03-13 17:38:29] CPU #1: 1.80 kH/s
[2023-03-13 17:38:29] CPU #0: 1.80 kH/s
[2023-03-13 17:38:29] CPU #2: 1.80 kH/s
[2023-03-13 17:38:34] Total: 24.76 kH/s
[2023-03-13 17:38:39] CPU #4: 4.39 kH/s
[2023-03-13 17:38:39] CPU #7: 4.39 kH/s
[2023-03-13 17:38:39] Total: 24.76 kH/s
[2023-03-13 17:38:39] CPU #5: 4.39 kH/s
[2023-03-13 17:38:39] CPU #6: 4.39 kH/s
[2023-03-13 17:38:39] CPU #3: 1.80 kH/s
[2023-03-13 17:38:39] CPU #1: 1.80 kH/s
[2023-03-13 17:38:39] CPU #0: 1.80 kH/s
[2023-03-13 17:38:39] CPU #2: 1.80 kH/s
[2023-03-13 17:38:44] Total: 24.76 kH/s
[2023-03-13 17:38:49] CPU #4: 4.39 kH/s
[2023-03-13 17:38:49] CPU #7: 4.39 kH/s
[2023-03-13 17:38:49] Total: 24.76 kH/s
[2023-03-13 17:38:49] CPU #5: 4.39 kH/s
[2023-03-13 17:38:49] CPU #6: 4.39 kH/s
[2023-03-13 17:38:49] CPU #3: 1.80 kH/s
[2023-03-13 17:38:49] CPU #1: 1.80 kH/s
[2023-03-13 17:38:49] CPU #0: 1.80 kH/s
[2023-03-13 17:38:49] CPU #2: 1.80 kH/s
[2023-03-13 17:38:54] Total: 24.75 kH/s
[2023-03-13 17:38:59] CPU #4: 4.39 kH/s
[2023-03-13 17:38:59] CPU #7: 4.39 kH/s
[2023-03-13 17:38:59] Total: 24.75 kH/s
[2023-03-13 17:38:59] CPU #5: 4.39 kH/s
[2023-03-13 17:38:59] CPU #6: 4.39 kH/s
[2023-03-13 17:38:59] CPU #3: 1.80 kH/s
[2023-03-13 17:38:59] CPU #1: 1.80 kH/s
[2023-03-13 17:38:59] CPU #0: 1.80 kH/s
[2023-03-13 17:38:59] CPU #2: 1.80 kH/s
[2023-03-13 17:39:04] Total: 24.75 kH/s
[2023-03-13 17:39:09] CPU #4: 4.38 kH/s
[2023-03-13 17:39:09] CPU #7: 4.38 kH/s
[2023-03-13 17:39:09] Total: 24.74 kH/s
[2023-03-13 17:39:09] CPU #5: 4.39 kH/s
[2023-03-13 17:39:09] CPU #6: 4.38 kH/s
[2023-03-13 17:39:09] CPU #3: 1.80 kH/s
[2023-03-13 17:39:09] CPU #1: 1.80 kH/s
[2023-03-13 17:39:09] CPU #0: 1.80 kH/s
[2023-03-13 17:39:09] CPU #2: 1.79 kH/s
[2023-03-13 17:39:14] Total: 24.74 kH/s
[2023-03-13 17:39:19] CPU #4: 4.39 kH/s
[2023-03-13 17:39:19] CPU #7: 4.39 kH/s
[2023-03-13 17:39:19] Total: 24.75 kH/s
[2023-03-13 17:39:19] CPU #5: 4.39 kH/s
[2023-03-13 17:39:19] CPU #6: 4.39 kH/s
[2023-03-13 17:39:19] CPU #3: 1.80 kH/s
[2023-03-13 17:39:19] CPU #1: 1.80 kH/s
[2023-03-13 17:39:19] CPU #0: 1.80 kH/s
[2023-03-13 17:39:19] CPU #2: 1.79 kH/s
[2023-03-13 17:39:24] Total: 24.75 kH/s
[2023-03-13 17:39:29] CPU #4: 4.39 kH/s

Total Scores: 24.90,24.89,24.88,24.87,24.86,24.85,24.84,24.83,24.82,24.81,24.80,24.79,24.78,24.77,24.76,24.75,24.74

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:39:09: 2400/1800MHz  8.08 100%   0% 100%   0%   0%   0%  77.6Â°C   5.05

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A55):

Cpufreq OPP: 1800    Measured: 1797 (1797.942/1797.707/1797.473)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A76):

Cpufreq OPP: 2400    Measured: 2291 (2292.006/2291.752/2291.701)     (-4.5%)

Checking cpufreq OPP for cpu6-cpu7 (Cortex-A76):

Cpufreq OPP: 2400    Measured: 2293 (2293.685/2293.380/2292.922)     (-4.5%)

##########################################################################

Hardware sensors:

gpu_thermal-virtual-0
temp1:        +67.5 C  

littlecore_thermal-virtual-0
temp1:        +69.3 C  

bigcore0_thermal-virtual-0
temp1:        +68.4 C  

tcpm_source_psy_4_0022-i2c-4-22
in0:           5.00 V  (min =  +5.00 V, max =  +5.00 V)
curr1:         3.00 A  (max =  +3.00 A)

npu_thermal-virtual-0
temp1:        +68.4 C  

center_thermal-virtual-0
temp1:        +67.5 C  

bigcore1_thermal-virtual-0
temp1:        +69.3 C  

soc_thermal-virtual-0
temp1:        +69.3 C  (crit = +115.0 C)

##########################################################################

DRAM clock transitions since last boot (1179190 ms ago):

/sys/devices/platform/dmc/devfreq/dmc:

     From  :   To
           : 528000000106800000015600000002112000000   time(ms)
  528000000:         0         0         0         3     72430
 1068000000:         0         0         0         0         0
 1560000000:         0         0         0         0         0
*2112000000:         3         0         0         0   1104646
Total transition : 6

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (soc-thermal)

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:23:26: 2400/1800MHz  0.92  10%   1%   8%   0%   0%   0%  42.5Â°C   5.16
17:23:56: 2400/1800MHz  0.95  12%   0%  12%   0%   0%   0%  44.4Â°C   5.17
17:24:26: 2400/1800MHz  0.97  12%   0%  12%   0%   0%   0%  45.3Â°C   5.19
17:24:56: 2400/1800MHz  0.98  12%   0%  12%   0%   0%   0%  49.0Â°C   5.30
17:25:26: 2400/1800MHz  0.99  12%   0%  12%   0%   0%   0%  48.1Â°C   5.22
17:25:56: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  51.8Â°C   5.08
17:26:26: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  50.8Â°C   5.29

System health while running ramlat:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:26:29: 2400/1800MHz  1.00  11%   0%  10%   0%   0%   0%  50.8Â°C   5.17
17:26:38: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  49.0Â°C   5.28
17:26:47: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  49.0Â°C   5.36
17:26:56: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  49.0Â°C   5.20
17:27:05: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  48.1Â°C   5.21
17:27:14: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  48.1Â°C   5.14
17:27:23: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  48.1Â°C   5.28
17:27:32: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  47.2Â°C   5.35
17:27:41: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  48.1Â°C   5.13
17:27:51: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  48.1Â°C   5.26

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:28:00: 2400/1800MHz  1.00  11%   0%  10%   0%   0%   0%  48.1Â°C   5.17
17:28:16: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.16
17:28:32: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  47.2Â°C   5.16
17:28:48: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  47.2Â°C   5.23

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:28:54: 2400/1800MHz  1.00  11%   0%  10%   0%   0%   0%  47.2Â°C   5.31
17:29:06: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.23
17:29:18: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.21
17:29:30: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  45.3Â°C   5.33
17:29:42: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  45.3Â°C   5.37
17:29:54: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  45.3Â°C   5.17
17:30:06: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  44.4Â°C   5.20
17:30:19: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  44.4Â°C   5.38
17:30:31: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.34
17:30:43: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  45.3Â°C   5.36
17:30:55: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.32
17:31:07: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.33
17:31:19: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.28
17:31:31: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.23
17:31:43: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.22
17:31:55: 2400/1800MHz  1.00  12%   0%  12%   0%   0%   0%  46.2Â°C   5.16

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:31:56: 2400/1800MHz  1.00  12%   0%  11%   0%   0%   0%  51.8Â°C   5.08
17:32:07: 2400/1800MHz  2.22  85%   0%  84%   0%   0%   0%  54.5Â°C   5.08
17:32:17: 2400/1800MHz  3.15  83%   0%  82%   0%   0%   0%  54.5Â°C   5.26
17:32:27: 2400/1800MHz  3.57  92%   0%  91%   0%   0%   0%  56.4Â°C   5.04
17:32:37: 2400/1800MHz  4.56  84%   1%  82%   0%   0%   0%  58.2Â°C   5.06
17:32:48: 2400/1800MHz  5.09  86%   1%  85%   0%   0%   0%  60.1Â°C   5.05
17:32:58: 2400/1800MHz  5.22  83%   0%  82%   0%   0%   0%  61.0Â°C   5.08
17:33:08: 2400/1800MHz  5.32  83%   0%  82%   0%   0%   0%  61.9Â°C   5.08
17:33:18: 2400/1800MHz  5.81  94%   0%  93%   0%   0%   0%  61.9Â°C   5.14
17:33:28: 2400/1800MHz  6.30  83%   1%  82%   0%   0%   0%  63.8Â°C   5.03
17:33:39: 2400/1800MHz  6.24  80%   0%  79%   0%   0%   0%  63.8Â°C   5.17
17:33:49: 2400/1800MHz  6.19  84%   0%  84%   0%   0%   0%  61.9Â°C   5.29
17:33:59: 2400/1800MHz  6.23  86%   0%  85%   0%   0%   0%  63.8Â°C   5.23
17:34:09: 2400/1800MHz  6.58  91%   1%  90%   0%   0%   0%  67.5Â°C   5.08
17:34:19: 2400/1800MHz  6.44  79%   1%  77%   0%   0%   0%  67.5Â°C   5.08

System health while running cpuminer:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp   DC(V)
17:34:36: 2400/1800MHz  6.87  25%   0%  24%   0%   0%   0%  68.4Â°C   5.36
17:35:22: 2400/1800MHz  7.51 100%   0%  99%   0%   0%   0%  70.2Â°C   5.08
17:36:07: 2400/1800MHz  7.81 100%   0%  99%   0%   0%   0%  73.0Â°C   5.05
17:36:53: 2400/1800MHz  7.95 100%   0% 100%   0%   0%   0%  73.9Â°C   5.07
17:37:38: 2400/1800MHz  8.02 100%   0%  99%   0%   0%   0%  75.8Â°C   5.27
17:38:24: 2400/1800MHz  8.09 100%   0%  99%   0%   0%   0%  76.7Â°C   5.25
17:39:09: 2400/1800MHz  8.08 100%   0% 100%   0%   0%   0%  77.6Â°C   5.05

##########################################################################

Linux 5.10.110-rockchip-rk3588 (rock-5b) 	03/13/23 	_aarch64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          43.44    0.01    0.40    0.10    0.00   56.06

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           0.24         7.15         0.00         0.00       8429          0          0
mmcblk1           3.76       168.97         1.48         0.00     199259       1748          0
mtdblock0         0.03         0.28         0.00         0.00        336          0          0
zram0             0.48         1.90         0.00         0.00       2240          4          0
zram1             0.19         0.39         6.03         0.00        464       7108          0

              total        used        free      shared  buff/cache   available
Mem:           15Gi       240Mi        15Gi       9.0Mi       112Mi        14Gi
Swap:         7.7Gi          0B       7.7Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	8048172	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      408    1800   Cortex-A55 / r2p0
  1        0        0      408    1800   Cortex-A55 / r2p0
  2        0        0      408    1800   Cortex-A55 / r2p0
  3        0        0      408    1800   Cortex-A55 / r2p0
  4        1        4      408    2400   Cortex-A76 / r4p0
  5        1        4      408    2400   Cortex-A76 / r4p0
  6        2        6      408    2400   Cortex-A76 / r4p0
  7        2        6      408    2400   Cortex-A76 / r4p0

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          8
On-line CPU(s) list:             0-7
Thread(s) per core:              1
Core(s) per socket:              2
Socket(s):                       3
Vendor ID:                       ARM
Model:                           0
Model name:                      Cortex-A55
Stepping:                        r2p0
CPU max MHz:                     2400.0000
CPU min MHz:                     408.0000
BogoMIPS:                        48.00
L1d cache:                       256 KiB
L1i cache:                       256 KiB
L2 cache:                        1 MiB
L3 cache:                        3 MiB
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Vulnerable: Unprivileged eBPF enabled
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm lrcpc dcpop asimddp

SoC guess: Rockchip RK3588/RK3588s (35880000)
  DMC gov: performance (2112 MHz)
DT compat: radxa,rock-5b
           rockchip,rk3588
 Compiler: /usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 / aarch64-linux-gnu
 Userland: arm64
   Kernel: 5.10.110-rockchip-rk3588/aarch64
           CONFIG_HZ=300
           CONFIG_HZ_300=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_VOLUNTARY=y
           cpu cpu0: pvtm=1529
           cpu cpu0: pvtm-volt-sel=5
           cpu cpu4: pvtm=1781
           cpu cpu4: pvtm-volt-sel=7
           cpu cpu6: pvtm=1780
           cpu cpu6: pvtm-volt-sel=7

##########################################################################

Kernel 5.10.110 is not latest 5.10.173 LTS that was released on 2023-03-11.

See https://endoflife.date/linux for details. It is somewhat likely that
a lot of exploitable vulnerabilities exist for this kernel as well as many
unfixed bugs.

But this version string doesn't matter since this is not an official LTS Linux
from kernel.org. This device runs a Rockchip vendor/BSP kernel.

This kernel is based on a mixture of Android GKI and other sources. Also some
community attempts to do version string cosmetics might have happened, see
https://tinyurl.com/2p8fuubd for example. To examine how far away this 5.10.110
is from an official LTS of same version someone would have to reapply Rockchip's
thousands of patches to a clean 5.10.110 LTS.

##########################################################################

cpu0/index0: 32K, level: 1, type: Data
cpu0/index1: 32K, level: 1, type: Instruction
cpu0/index2: 128K, level: 2, type: Unified
cpu0/index3: 3072K, level: 3, type: Unified
cpu1/index0: 32K, level: 1, type: Data
cpu1/index1: 32K, level: 1, type: Instruction
cpu1/index2: 128K, level: 2, type: Unified
cpu1/index3: 3072K, level: 3, type: Unified
cpu2/index0: 32K, level: 1, type: Data
cpu2/index1: 32K, level: 1, type: Instruction
cpu2/index2: 128K, level: 2, type: Unified
cpu2/index3: 3072K, level: 3, type: Unified
cpu3/index0: 32K, level: 1, type: Data
cpu3/index1: 32K, level: 1, type: Instruction
cpu3/index2: 128K, level: 2, type: Unified
cpu3/index3: 3072K, level: 3, type: Unified
cpu4/index0: 64K, level: 1, type: Data
cpu4/index1: 64K, level: 1, type: Instruction
cpu4/index2: 512K, level: 2, type: Unified
cpu4/index3: 3072K, level: 3, type: Unified
cpu5/index0: 64K, level: 1, type: Data
cpu5/index1: 64K, level: 1, type: Instruction
cpu5/index2: 512K, level: 2, type: Unified
cpu5/index3: 3072K, level: 3, type: Unified
cpu6/index0: 64K, level: 1, type: Data
cpu6/index1: 64K, level: 1, type: Instruction
cpu6/index2: 512K, level: 2, type: Unified
cpu6/index3: 3072K, level: 3, type: Unified
cpu7/index0: 64K, level: 1, type: Data
cpu7/index1: 64K, level: 1, type: Instruction
cpu7/index2: 512K, level: 2, type: Unified
cpu7/index3: 3072K, level: 3, type: Unified

##########################################################################

   vdd_cpu_big0_s0: 1000 mV (1050 mV max)
   vdd_cpu_big1_s0: 1000 mV (1050 mV max)
   vdd_npu_s0: 788 mV (950 mV max)

   cluster0-opp-table:
       408 MHz    675.0 mV (00ff ffff)
       600 MHz    675.0 mV (00ff ffff)
       816 MHz    675.0 mV (00ff ffff)
      1008 MHz    675.0 mV (00ff ffff)
      1200 MHz    712.5 mV (00ff ffff)
      1416 MHz    762.5 mV (00ff ffff)
      1608 MHz    850.0 mV (00ff ffff)
      1800 MHz    950.0 mV (00fd ffff)

   cluster1-opp-table:
       408 MHz    675.0 mV (00ff ffff)
       600 MHz    675.0 mV (00ff ffff)
       816 MHz    675.0 mV (00ff ffff)
      1008 MHz    675.0 mV (00ff ffff)
      1200 MHz    675.0 mV (00ff ffff)
      1416 MHz    725.0 mV (00ff ffff)
      1608 MHz    762.5 mV (00ff ffff)
      1800 MHz    850.0 mV (00ff ffff)
      2016 MHz    925.0 mV (00ff ffff)
      2208 MHz    987.5 mV (00ff ffff)
      2256 MHz   1000.0 mV (00ff ffff)
      2304 MHz   1000.0 mV (00ff ffff)
      2352 MHz   1000.0 mV (00ff ffff)
      2400 MHz   1000.0 mV (00ff ffff)

   cluster2-opp-table:
       408 MHz    675.0 mV (00ff ffff)
       600 MHz    675.0 mV (00ff ffff)
       816 MHz    675.0 mV (00ff ffff)
      1008 MHz    675.0 mV (00ff ffff)
      1200 MHz    675.0 mV (00ff ffff)
      1416 MHz    725.0 mV (00ff ffff)
      1608 MHz    762.5 mV (00ff ffff)
      1800 MHz    850.0 mV (00ff ffff)
      2016 MHz    925.0 mV (00ff ffff)
      2208 MHz    987.5 mV (00ff ffff)
      2256 MHz   1000.0 mV (00ff ffff)
      2304 MHz   1000.0 mV (00ff ffff)
      2352 MHz   1000.0 mV (00ff ffff)
      2400 MHz   1000.0 mV (00ff ffff)

   dmc-opp-table:
       528 MHz    675.0 mV
      1068 MHz    725.0 mV
      1560 MHz    800.0 mV
      2750 MHz    875.0 mV

   gpu-opp-table:
       300 MHz    675.0 mV
       400 MHz    675.0 mV
       500 MHz    675.0 mV
       600 MHz    675.0 mV
       700 MHz    700.0 mV
       800 MHz    750.0 mV
       900 MHz    800.0 mV
      1000 MHz    850.0 mV

   npu-opp-table:
       300 MHz    700.0 mV
       400 MHz    700.0 mV
       500 MHz    700.0 mV
       600 MHz    700.0 mV
       700 MHz    700.0 mV
       800 MHz    750.0 mV
       900 MHz    800.0 mV
      1000 MHz    850.0 mV

##########################################################################

Results validation:

  * Advertised vs. measured max CPU clockspeed: -2.8% before, -4.5% after
  * No swapping
  * Background activity (%system) OK
  * No throttling

Status of performance related governors found below /sys (w/o cpufreq):

  * dmc: performance / 2112 MHz (rknpu_ondemand dmc_ondemand userspace powersave performance simple_ondemand / 528 1068 1560 2112)
  * fb000000.gpu: performance / 1000 MHz (rknpu_ondemand dmc_ondemand userspace powersave performance simple_ondemand / 300 400 500 600 700 800 900 1000)
  * fdab0000.npu: performance / 1000 MHz (rknpu_ondemand dmc_ondemand userspace powersave performance simple_ondemand / 300 400 500 600 700 800 900 1000)

Status of performance related policies found below /sys:

  * /sys/devices/platform/fb000000.gpu/power_policy: [coarse_demand] always_on
  * /sys/module/pcie_aspm/parameters/policy: default [performance] powersave powersupersave

##########################################################################

/sys/kernel/debug/clk/clk_summary diff between all governors set to powersave and performance:

                                   enable  prepare  protect                                duty
     clock                          count    count    count        rate   accuracy phase  cycle
  ---------------------------------------------------------------------------------------------
59,63c59,63
<  scmi_clk_ddr                         0        0        0   528000000          0     0  50000
<  scmi_clk_cpub23                      0        0        0   408000000          0     0  50000
<  scmi_clk_cpub01                      0        0        0   408000000          0     0  50000
<  scmi_clk_dsu                         0        0        0   396000000          0     0  50000
<  scmi_clk_cpul                        0        0        0   408000000          0     0  50000
---
>  scmi_clk_ddr                         0        0        0  2112000000          0     0  50000
>  scmi_clk_cpub23                      0        0        0  2400000000          0     0  50000
>  scmi_clk_cpub01                      0        0        0  2400000000          0     0  50000
>  scmi_clk_dsu                         0        0        0           0          0     0  50000
>  scmi_clk_cpul                        0        0        0  1800000000          0     0  50000

##########################################################################

# Radxa ROCK 5B

Tested with sbc-bench v0.9.39 on Mon, 13 Mar 2023 17:39:42 +0100.

### General information:

The CPU features 3 clusters consisting of 2 different core types:

    Rockchip RK3588/RK3588s (35880000), Kernel: aarch64, Userland: arm64
    
    CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                     cpufreq   min    max
     CPU    cluster  policy   speed  speed   core type
      0        0        0      408    1800   Cortex-A55 / r2p0
      1        0        0      408    1800   Cortex-A55 / r2p0
      2        0        0      408    1800   Cortex-A55 / r2p0
      3        0        0      408    1800   Cortex-A55 / r2p0
      4        1        4      408    2400   Cortex-A76 / r4p0
      5        1        4      408    2400   Cortex-A76 / r4p0
      6        2        6      408    2400   Cortex-A76 / r4p0
      7        2        6      408    2400   Cortex-A76 / r4p0

15719 KB available RAM

### Governors/policies (performance vs. idle consumption):

Original governor settings:

    cpufreq-policy0: ondemand / 1800 MHz (conservative ondemand userspace powersave performance schedutil / 408 600 816 1008 1200 1416 1608 1800)
    cpufreq-policy4: ondemand / 2400 MHz (conservative ondemand userspace powersave performance schedutil / 408 600 816 1008 1200 1416 1608 1800 2016 2208 2256 2304 2352 2400)
    cpufreq-policy6: ondemand / 2400 MHz (conservative ondemand userspace powersave performance schedutil / 408 600 816 1008 1200 1416 1608 1800 2016 2208 2256 2304 2352 2400)
    dmc: dmc_ondemand / 528 MHz (rknpu_ondemand dmc_ondemand userspace powersave performance simple_ondemand / 528 1068 1560 2112)
    fb000000.gpu: simple_ondemand / 300 MHz (rknpu_ondemand dmc_ondemand userspace powersave performance simple_ondemand / 300 400 500 600 700 800 900 1000)
    fdab0000.npu: rknpu_ondemand / 1000 MHz (rknpu_ondemand dmc_ondemand userspace powersave performance simple_ondemand / 300 400 500 600 700 800 900 1000)

Tuned governor settings:

    cpufreq-policy0: performance / 1800 MHz
    cpufreq-policy4: performance / 2400 MHz
    cpufreq-policy6: performance / 2400 MHz
    dmc: performance / 2112 MHz
    fb000000.gpu: performance / 1000 MHz
    fdab0000.npu: performance / 1000 MHz

Status of performance related policies found below /sys:

    /sys/devices/platform/fb000000.gpu/power_policy: [coarse_demand] always_on
    /sys/module/pcie_aspm/parameters/policy: default [performance] powersave powersupersave

### Clockspeeds (idle vs. heated up):

Before at 41.6Â°C:

    cpu0-cpu3 (Cortex-A55): OPP: 1800, Measured: 1823      (+1.3%)
    cpu4-cpu5 (Cortex-A76): OPP: 2400, Measured: 2333      (-2.8%)
    cpu6-cpu7 (Cortex-A76): OPP: 2400, Measured: 2334      (-2.7%)

After at 77.6Â°C:

    cpu0-cpu3 (Cortex-A55): OPP: 1800, Measured: 1797 
    cpu4-cpu5 (Cortex-A76): OPP: 2400, Measured: 2291      (-4.5%)
    cpu6-cpu7 (Cortex-A76): OPP: 2400, Measured: 2293      (-4.5%)

### Performance baseline

  * cpu0 (Cortex-A55): memcpy: 5885.4 MB/s, memchr: 3279.7 MB/s, memset: 22141.2 MB/s
  * cpu4 (Cortex-A76): memcpy: 10464.3 MB/s, memchr: 14858.1 MB/s, memset: 29162.6 MB/s
  * cpu6 (Cortex-A76): memcpy: 10465.7 MB/s, memchr: 14900.9 MB/s, memset: 29000.5 MB/s
  * cpu0 (Cortex-A55) 16M latency: 120.9 121.0 118.1 121.2 116.8 126.6 203.6 371.3 
  * cpu0 (Cortex-A55) 128M latency: 145.5 146.0 145.1 146.0 144.4 150.7 225.1 397.9 
  * cpu4 (Cortex-A76) 16M latency: 120.8 109.5 118.6 109.4 118.7 107.7 109.7 109.1 
  * cpu4 (Cortex-A76) 128M latency: 137.1 137.9 137.0 137.8 136.9 132.1 131.0 136.1 
  * cpu6 (Cortex-A76) 16M latency: 128.6 114.1 119.0 110.4 118.3 106.1 104.0 107.7 
  * cpu6 (Cortex-A76) 128M latency: 137.9 138.2 138.0 138.3 137.2 132.3 130.5 134.8 
  * 7-zip MIPS (3 consecutive runs): 16542, 16444, 16248 (16410 avg), single-threaded: 3121
  * `aes-256-cbc     158764.21k   407795.78k   668686.34k   799750.83k   847765.50k   851542.02k (Cortex-A55)`
  * `aes-256-cbc     645699.40k  1057904.92k  1246935.72k  1300131.16k  1323152.73k  1325705.90k (Cortex-A76)`
  * `aes-256-cbc     645555.88k  1056458.05k  1248653.82k  1300471.81k  1323379.37k  1326006.27k (Cortex-A76)`

### PCIe and storage devices:

  * Realtek RTL8125 2.5GbE: Speed 5GT/s (ok), Width x1 (ok), driver in use: r8125
  * 14.5GB "Foresee NCard" HS200 eMMC 5.0 card as /dev/mmcblk0: date 08/2016, manfid/oemid: 0x000088/0x0103, hw/fw rev: 0x0/0x0100000000000000
  * 7.4GB "SanDisk SL08G" UHS SDR50 SD card as /dev/mmcblk1: date 06/2016, manfid/oemid: 0x000003/0x5344, hw/fw rev: 0x8/0x0
  * 16MB SPI NOR flash, drivers in use: spi-nor/rockchip-sfc

### Swap configuration:

  * /dev/zram0: 7.7G (0K used, lzo-rle, 8 streams, 4K data, 74B compressed, 12K total)

### Software versions:

  * Ubuntu 20.04.5 LTS
  * Build scripts: https://github.com/armbian/build, 23.02.2, Rock 5B, rockchip-rk3588, rockchip-rk3588
  * Compiler: /usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 / aarch64-linux-gnu

### Kernel info:

  * `/proc/cmdline: root=UUID=a98b51b6-4f19-4fbb-966d-e835e9b7eb15 rootwait rootfstype=ext4 console=ttyS2,1500000 console=tty1 consoleblank=0 loglevel=1 ubootpart=8917ce6a-4dc2-a145-b073-1492d425c2b8 usb-storage.quirks=0x2537:0x1066:u,0x2537:0x1068:u   cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1`
  * Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl
  * Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
  * Vulnerability Spectre v2:        Vulnerable: Unprivileged eBPF enabled
  * Kernel 5.10.110-rockchip-rk3588 / CONFIG_HZ=300

Kernel 5.10.110 is not latest 5.10.173 LTS that was released on 2023-03-11.

See https://endoflife.date/linux for details. It is somewhat likely that
a lot of exploitable vulnerabilities exist for this kernel as well as many
unfixed bugs.

But this version string doesn't matter since this is not an official LTS Linux
from kernel.org. This device runs a Rockchip vendor/BSP kernel.

This kernel is based on a mixture of Android GKI and other sources. Also some
community attempts to do version string cosmetics might have happened, see
https://tinyurl.com/2p8fuubd for example. To examine how far away this 5.10.110
is from an official LTS of same version someone would have to reapply Rockchip's
thousands of patches to a clean 5.10.110 LTS.

### Idle consumption (measured with Netio 4KF, FW v3.2.0):

  * everything set to powersave: 1490 mW
  * /sys/devices/platform/dmc/devfreq/dmc set to performance: 1900 mW
  * /sys/devices/platform/fb000000.gpu/devfreq/fb000000.gpu set to performance: 1970 mW
  * /sys/devices/platform/fdab0000.npu/devfreq/fdab0000.npu set to performance: 1950 mW
  * /sys/devices/system/cpu/cpufreq/policy0 set to performance: 2040 mW
  * /sys/devices/system/cpu/cpufreq/policy4 set to performance: 2070 mW
  * /sys/devices/system/cpu/cpufreq/policy6 set to performance: 2080 mW
  * /sys/module/pcie_aspm/parameters/policy set to performance: 2220 mW
