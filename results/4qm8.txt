sbc-bench v0.9.37 FriendlyElec NanoPi Fire3 review (Thu, 09 Mar 2023 15:31:32 +0000)

Distributor ID:	Ubuntu
Description:	Ubuntu 20.04 LTS
Release:	20.04
Codename:	focal

/usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0

Uptime: 15:31:33 up  1:00,  4 users,  load average: 0.22, 0.13, 0.68,  65.0Â°C,  476219322

Linux 4.4.172-s5p6818 (NanoPi-Fire3) 	03/09/23 	_armv7l_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          18.32    0.01    0.60    0.32    0.00   80.75

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           7.02       135.02       250.75         0.00     491213     912268          0
sda               0.06         1.80         0.00         0.00       6552          0          0

              total        used        free      shared  buff/cache   available
Mem:          954Mi        90Mi       810Mi       0.0Ki        52Mi       804Mi
Swap:         2.0Gi        30Mi       2.0Gi

Filename				Type		Size	Used	Priority
/swapfile                              	file    	2097148	31148	-1

##########################################################################

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 1400    Measured: 1395 (1395.782/1395.693/1395.399)
Cpufreq OPP: 1300    Measured: 1295 (1296.099/1296.099/1295.781)
Cpufreq OPP: 1200    Measured: 1195 (1195.795/1195.795/1195.633)
Cpufreq OPP: 1100    Measured: 1096 (1096.123/1096.100/1096.077)
Cpufreq OPP: 1000    Measured:  996    (996.092/996.069/995.975)
Cpufreq OPP:  900    Measured:  896    (896.443/896.158/895.987)
Cpufreq OPP:  800    Measured:  796    (796.236/796.162/796.105)
Cpufreq OPP:  700    Measured:  696    (696.381/696.310/696.281)
Cpufreq OPP:  600    Measured:  596    (596.340/596.209/596.169)
Cpufreq OPP:  500    Measured:  496    (496.446/496.423/496.321)
Cpufreq OPP:  400    Measured:  396    (396.559/396.513/396.395)

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   1537.7 MB/s (2)
 C copy backwards (32 byte blocks)                :   1647.3 MB/s (2)
 C copy backwards (64 byte blocks)                :   1659.0 MB/s (3, 0.2%)
 C copy                                           :   1441.7 MB/s (3, 0.1%)
 C copy prefetched (32 bytes step)                :   1572.3 MB/s (2)
 C copy prefetched (64 bytes step)                :   1573.1 MB/s (2)
 C 2-pass copy                                    :   1358.1 MB/s (3, 0.3%)
 C 2-pass copy prefetched (32 bytes step)         :   1449.3 MB/s (2)
 C 2-pass copy prefetched (64 bytes step)         :   1451.4 MB/s (2)
 C scan 8                                         :    229.5 MB/s (2)
 C scan 16                                        :    452.9 MB/s (2)
 C scan 32                                        :    879.7 MB/s (3)
 C scan 64                                        :   1298.4 MB/s (3, 1.4%)
 C fill                                           :   4572.5 MB/s (2)
 C fill (shuffle within 16 byte blocks)           :   4570.5 MB/s (3, 0.6%)
 C fill (shuffle within 32 byte blocks)           :   4570.8 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :   4569.5 MB/s (3, 0.3%)
 ---
 libc memcpy copy                                 :   1645.5 MB/s (3, 0.5%)
 libc memchr scan                                 :   2057.3 MB/s (3)
 libc memset fill                                 :   3714.1 MB/s (2)
 ---
 NEON read                                        :   2202.0 MB/s (2)
 NEON read prefetched (32 bytes step)             :   3535.7 MB/s (2)
 NEON read prefetched (64 bytes step)             :   3540.0 MB/s (3, 0.7%)
 NEON read 2 data streams                         :   1966.1 MB/s (2)
 NEON read 2 data streams prefetched (32 bytes step) :   3278.1 MB/s (2)
 NEON read 2 data streams prefetched (64 bytes step) :   3278.6 MB/s (2)
 NEON copy                                        :   1445.7 MB/s (2)
 NEON copy prefetched (32 bytes step)             :   1630.1 MB/s (2)
 NEON copy prefetched (64 bytes step)             :   1635.6 MB/s (3, 0.2%)
 NEON unrolled copy                               :   1447.0 MB/s (3, 0.5%)
 NEON unrolled copy prefetched (32 bytes step)    :   1735.2 MB/s (2)
 NEON unrolled copy prefetched (64 bytes step)    :   1735.8 MB/s (2)
 NEON copy backwards                              :   1647.7 MB/s (3, 0.5%)
 NEON copy backwards prefetched (32 bytes step)   :   1733.8 MB/s (2)
 NEON copy backwards prefetched (64 bytes step)   :   1733.1 MB/s (3, 0.3%)
 NEON 2-pass copy                                 :   1365.1 MB/s (3, 0.5%)
 NEON 2-pass copy prefetched (32 bytes step)      :   1458.1 MB/s (2)
 NEON 2-pass copy prefetched (64 bytes step)      :   1459.6 MB/s (2)
 NEON unrolled 2-pass copy                        :   1345.5 MB/s (2)
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   1559.5 MB/s (2)
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   1579.4 MB/s (3)
 NEON fill                                        :   4572.3 MB/s (3, 0.3%)
 NEON fill backwards                              :   4571.3 MB/s (2)
 VFP copy                                         :   1452.8 MB/s (3, 0.1%)
 VFP 2-pass copy                                  :   1339.7 MB/s (2)
 ARM fill (STRD)                                  :   3714.5 MB/s (2)
 ARM fill (STM with 8 registers)                  :   4565.6 MB/s (3, 0.2%)
 ARM fill (STM with 4 registers)                  :   4553.7 MB/s (2)
 ARM copy prefetched (incr pld)                   :   1614.9 MB/s (2)
 ARM copy prefetched (wrap pld)                   :   1553.8 MB/s (2)
 ARM 2-pass copy prefetched (incr pld)            :   1408.0 MB/s (2)
 ARM 2-pass copy prefetched (wrap pld)            :   1398.3 MB/s (3, 0.5%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                     :     65.2 MB/s (2)
 NEON copy (from framebuffer)                     :     64.2 MB/s (2)
 NEON 2-pass copy (from framebuffer)              :     64.0 MB/s (3)
 NEON unrolled copy (from framebuffer)            :     64.5 MB/s (2)
 NEON 2-pass unrolled copy (from framebuffer)     :     63.6 MB/s (2)
 VFP copy (from framebuffer)                      :    437.3 MB/s (2)
 VFP 2-pass copy (from framebuffer)               :    401.6 MB/s (3, 0.3%)
 ARM copy (from framebuffer)                      :    235.4 MB/s (2)
 ARM 2-pass copy (from framebuffer)               :    224.7 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.0 ns 
     65536 :    5.0 ns          /     8.2 ns 
    131072 :    7.8 ns          /    11.4 ns 
    262144 :    9.5 ns          /    12.9 ns 
    524288 :   12.4 ns          /    15.8 ns 
   1048576 :   81.2 ns          /   122.8 ns 
   2097152 :  118.8 ns          /   157.2 ns 
   4194304 :  142.5 ns          /   175.3 ns 
   8388608 :  155.3 ns          /   184.5 ns 
  16777216 :  162.5 ns          /   190.3 ns 
  33554432 :  166.7 ns          /   194.1 ns 
  67108864 :  168.8 ns          /   196.9 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.0 ns 
     65536 :    5.0 ns          /     8.3 ns 
    131072 :    7.8 ns          /    11.6 ns 
    262144 :    9.5 ns          /    12.9 ns 
    524288 :   12.4 ns          /    15.6 ns 
   1048576 :   81.1 ns          /   122.6 ns 
   2097152 :  117.9 ns          /   156.5 ns 
   4194304 :  136.6 ns          /   167.4 ns 
   8388608 :  145.7 ns          /   171.3 ns 
  16777216 :  150.2 ns          /   172.9 ns 
  33554432 :  152.5 ns          /   173.5 ns 
  67108864 :  153.5 ns          /   173.9 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A53), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 2.157 2.160 2.331 2.329 2.150 2.149 2.956 5.912 
         8k: 2.150 2.156 2.329 2.329 2.150 2.150 2.956 5.911 
        16k: 2.150 2.152 2.329 2.329 2.150 2.150 2.957 5.912 
        32k: 2.156 2.156 2.336 2.335 2.161 2.156 2.963 5.923 
        64k: 19.62 21.69 19.81 21.78 19.51 21.77 28.44 51.82 
       128k: 23.08 24.29 23.38 24.43 23.11 24.34 32.01 61.18 
       256k: 24.96 25.42 25.31 25.73 24.93 25.49 32.39 62.48 
       512k: 27.97 27.37 27.64 27.59 27.53 27.69 34.06 65.91 
      1024k: 149.5 154.2 151.4 152.6 152.5 151.0 219.5 409.5 
      2048k: 159.2 159.5 159.0 159.5 159.0 160.2 230.6 442.9 
      4096k: 160.3 159.6 159.1 159.6 159.1 160.4 232.1 444.2 
      8192k: 159.0 160.7 159.0 159.4 159.0 160.3 230.1 444.4 
     16384k: 159.0 160.6 159.1 159.3 159.0 160.2 230.1 444.8 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A53)

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-256-cbc      98707.27k   273482.94k   478640.04k   599685.02k   648536.06k   650771.39k
aes-256-cbc      99225.53k   272750.03k   478245.72k   601413.63k   647042.81k   652875.09k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,8 CPUs LE)

LE
CPU Freq: 64000000 64000000 64000000 - - 256000000 512000000 1024000000 2048000000

RAM size:     954 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        870   100    847    847  |      16407   100   1401   1401
23:        854   100    870    871  |      16111   100   1395   1395
24:        845   100    909    909  |      15812   100   1388   1388
25:        840   100    960    960  |      15529   100   1382   1382
----------------------------------  | ------------------------------
Avr:             100    896    896  |              100   1391   1391
Tot:             100   1144   1144

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-7

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,8 CPUs LE)

LE
CPU Freq: 32000000 64000000 64000000 - - 256000000 256000000 512000000 2048000000

RAM size:     954 MB,  # CPU hardware threads:   8
RAM usage:    901 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4439   642    673   4318  |     125609   796   1346  10714
23:       4370   649    686   4453  |     123428   797   1340  10681
24:       4067   635    689   4374  |     110010   762   1268   9655
----------------------------------  | ------------------------------
Avr:             642    682   4382  |              785   1318  10350
Tot:             713   1000   7366

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,8 CPUs LE)

LE
CPU Freq: 32000000 64000000 64000000 64000000 - - 512000000 1024000000 2048000000

RAM size:     954 MB,  # CPU hardware threads:   8
RAM usage:    901 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4265   640    648   4149  |     119667   796   1282  10207
23:       4424   652    691   4508  |     123050   796   1338  10648
24:       4014   616    701   4316  |     118016   778   1331  10358
----------------------------------  | ------------------------------
Avr:             636    680   4324  |              790   1317  10405
Tot:             713    998   7365

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,8 CPUs LE)

LE
CPU Freq: 32000000 64000000 64000000 64000000 128000000 256000000 512000000 1024000000 2048000000

RAM size:     954 MB,  # CPU hardware threads:   8
RAM usage:    901 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4463   646    672   4343  |     125634   795   1347  10716
23:       4388   650    688   4472  |     123189   795   1340  10660
24:       4172   643    697   4486  |     115076   758   1333  10100
----------------------------------  | ------------------------------
Avr:             646    686   4433  |              783   1340  10492
Tot:             715   1013   7463

Compression: 4382,4324,4433
Decompression: 10350,10405,10492
Total: 7366,7365,7463

##########################################################################

** cpuminer-multi 1.3.7 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2023-03-09 15:41:29] 8 miner threads started, using 'scrypt' algorithm.
[2023-03-09 15:41:30] CPU #3: 1.08 kH/s
[2023-03-09 15:41:30] CPU #1: 1.07 kH/s
[2023-03-09 15:41:30] CPU #2: 1.06 kH/s
[2023-03-09 15:41:30] CPU #6: 1.06 kH/s
[2023-03-09 15:41:30] CPU #7: 1.07 kH/s
[2023-03-09 15:41:30] CPU #5: 1.05 kH/s
[2023-03-09 15:41:30] CPU #0: 1.01 kH/s
[2023-03-09 15:41:30] CPU #4: 0.92 kH/s
[2023-03-09 15:41:34] Total: 8.59 kH/s
[2023-03-09 15:41:38] CPU #0: 1.11 kH/s
[2023-03-09 15:41:38] CPU #2: 1.12 kH/s
[2023-03-09 15:41:39] CPU #5: 1.11 kH/s
[2023-03-09 15:41:39] CPU #1: 1.11 kH/s
[2023-03-09 15:41:39] CPU #6: 1.11 kH/s
[2023-03-09 15:41:39] CPU #3: 1.11 kH/s
[2023-03-09 15:41:39] CPU #7: 1.11 kH/s
[2023-03-09 15:41:39] Total: 8.87 kH/s
[2023-03-09 15:41:39] CPU #4: 1.11 kH/s
[2023-03-09 15:41:44] Total: 8.88 kH/s
[2023-03-09 15:41:44] CPU #0: 1.11 kH/s
[2023-03-09 15:41:44] CPU #2: 1.12 kH/s
[2023-03-09 15:41:49] CPU #1: 1.12 kH/s
[2023-03-09 15:41:49] CPU #6: 1.11 kH/s
[2023-03-09 15:41:49] CPU #3: 1.12 kH/s
[2023-03-09 15:41:49] CPU #7: 1.11 kH/s
[2023-03-09 15:41:49] Total: 8.88 kH/s
[2023-03-09 15:41:49] CPU #4: 1.11 kH/s
[2023-03-09 15:41:49] CPU #5: 1.11 kH/s
[2023-03-09 15:41:54] Total: 8.88 kH/s
[2023-03-09 15:41:54] CPU #0: 1.11 kH/s
[2023-03-09 15:41:54] CPU #2: 1.12 kH/s
[2023-03-09 15:41:59] CPU #1: 1.12 kH/s
[2023-03-09 15:41:59] CPU #6: 1.11 kH/s
[2023-03-09 15:41:59] CPU #3: 1.12 kH/s
[2023-03-09 15:41:59] CPU #7: 1.11 kH/s
[2023-03-09 15:41:59] Total: 8.88 kH/s
[2023-03-09 15:41:59] CPU #4: 1.10 kH/s
[2023-03-09 15:41:59] CPU #5: 1.11 kH/s
[2023-03-09 15:42:04] Total: 8.88 kH/s
[2023-03-09 15:42:04] CPU #0: 1.11 kH/s
[2023-03-09 15:42:04] CPU #2: 1.12 kH/s
[2023-03-09 15:42:09] CPU #1: 1.12 kH/s
[2023-03-09 15:42:09] CPU #6: 1.11 kH/s
[2023-03-09 15:42:09] CPU #3: 1.12 kH/s
[2023-03-09 15:42:09] CPU #7: 1.11 kH/s
[2023-03-09 15:42:09] Total: 8.88 kH/s
[2023-03-09 15:42:09] CPU #4: 1.11 kH/s
[2023-03-09 15:42:09] CPU #5: 1.11 kH/s
[2023-03-09 15:42:14] Total: 8.88 kH/s
[2023-03-09 15:42:14] CPU #0: 1.11 kH/s
[2023-03-09 15:42:14] CPU #2: 1.12 kH/s
[2023-03-09 15:42:19] CPU #1: 1.11 kH/s
[2023-03-09 15:42:19] CPU #6: 1.10 kH/s
[2023-03-09 15:42:19] CPU #7: 1.10 kH/s
[2023-03-09 15:42:19] Total: 8.87 kH/s
[2023-03-09 15:42:19] CPU #3: 1.10 kH/s
[2023-03-09 15:42:19] CPU #4: 1.10 kH/s
[2023-03-09 15:42:20] CPU #5: 1.10 kH/s
[2023-03-09 15:42:24] Total: 8.86 kH/s
[2023-03-09 15:42:24] CPU #0: 1.11 kH/s
[2023-03-09 15:42:24] CPU #2: 1.12 kH/s
[2023-03-09 15:42:29] CPU #1: 1.12 kH/s
[2023-03-09 15:42:29] CPU #6: 1.11 kH/s
[2023-03-09 15:42:29] CPU #7: 1.11 kH/s
[2023-03-09 15:42:29] Total: 8.88 kH/s
[2023-03-09 15:42:29] CPU #3: 1.12 kH/s
[2023-03-09 15:42:29] CPU #4: 1.10 kH/s
[2023-03-09 15:42:29] CPU #5: 1.11 kH/s
[2023-03-09 15:42:34] Total: 8.88 kH/s
[2023-03-09 15:42:34] CPU #0: 1.11 kH/s
[2023-03-09 15:42:34] CPU #2: 1.12 kH/s
[2023-03-09 15:42:39] CPU #1: 1.12 kH/s
[2023-03-09 15:42:39] CPU #6: 1.11 kH/s
[2023-03-09 15:42:39] CPU #7: 1.11 kH/s
[2023-03-09 15:42:39] Total: 8.88 kH/s
[2023-03-09 15:42:39] CPU #3: 1.12 kH/s
[2023-03-09 15:42:39] CPU #4: 1.11 kH/s
[2023-03-09 15:42:39] CPU #5: 1.11 kH/s
[2023-03-09 15:42:44] Total: 8.88 kH/s
[2023-03-09 15:42:44] CPU #0: 1.11 kH/s
[2023-03-09 15:42:44] CPU #2: 1.12 kH/s
[2023-03-09 15:42:49] CPU #6: 1.11 kH/s
[2023-03-09 15:42:49] CPU #7: 1.11 kH/s
[2023-03-09 15:42:49] Total: 8.88 kH/s
[2023-03-09 15:42:49] CPU #3: 1.12 kH/s
[2023-03-09 15:42:49] CPU #4: 1.11 kH/s
[2023-03-09 15:42:49] CPU #5: 1.11 kH/s
[2023-03-09 15:42:49] CPU #1: 1.12 kH/s
[2023-03-09 15:42:54] Total: 8.88 kH/s
[2023-03-09 15:42:54] CPU #0: 1.11 kH/s
[2023-03-09 15:42:54] CPU #2: 1.12 kH/s
[2023-03-09 15:42:59] CPU #6: 1.11 kH/s
[2023-03-09 15:42:59] CPU #3: 1.11 kH/s
[2023-03-09 15:42:59] CPU #7: 1.10 kH/s
[2023-03-09 15:42:59] Total: 8.88 kH/s
[2023-03-09 15:42:59] CPU #4: 1.10 kH/s
[2023-03-09 15:42:59] CPU #5: 1.11 kH/s
[2023-03-09 15:43:00] CPU #1: 1.11 kH/s
[2023-03-09 15:43:04] Total: 8.86 kH/s
[2023-03-09 15:43:04] CPU #0: 1.11 kH/s
[2023-03-09 15:43:04] CPU #2: 1.11 kH/s
[2023-03-09 15:43:05] CPU #5: 1.10 kH/s
[2023-03-09 15:43:08] CPU #1: 1.12 kH/s
[2023-03-09 15:43:09] CPU #6: 1.11 kH/s
[2023-03-09 15:43:09] CPU #7: 1.11 kH/s
[2023-03-09 15:43:09] Total: 8.87 kH/s
[2023-03-09 15:43:09] CPU #3: 1.12 kH/s
[2023-03-09 15:43:09] CPU #4: 1.11 kH/s
[2023-03-09 15:43:14] Total: 8.88 kH/s
[2023-03-09 15:43:14] CPU #0: 1.11 kH/s
[2023-03-09 15:43:14] CPU #2: 1.12 kH/s
[2023-03-09 15:43:14] CPU #1: 1.12 kH/s
[2023-03-09 15:43:14] CPU #5: 1.11 kH/s
[2023-03-09 15:43:19] CPU #6: 1.11 kH/s
[2023-03-09 15:43:19] CPU #7: 1.11 kH/s
[2023-03-09 15:43:19] Total: 8.88 kH/s
[2023-03-09 15:43:19] CPU #3: 1.12 kH/s
[2023-03-09 15:43:19] CPU #4: 1.11 kH/s
[2023-03-09 15:43:24] Total: 8.88 kH/s
[2023-03-09 15:43:24] CPU #0: 1.11 kH/s
[2023-03-09 15:43:24] CPU #2: 1.12 kH/s
[2023-03-09 15:43:24] CPU #1: 1.12 kH/s
[2023-03-09 15:43:24] CPU #5: 1.11 kH/s
[2023-03-09 15:43:29] CPU #6: 1.11 kH/s
[2023-03-09 15:43:29] CPU #7: 1.11 kH/s
[2023-03-09 15:43:29] Total: 8.88 kH/s
[2023-03-09 15:43:29] CPU #3: 1.12 kH/s
[2023-03-09 15:43:29] CPU #4: 1.11 kH/s
[2023-03-09 15:43:34] Total: 8.88 kH/s
[2023-03-09 15:43:34] CPU #0: 1.11 kH/s
[2023-03-09 15:43:34] CPU #2: 1.12 kH/s
[2023-03-09 15:43:34] CPU #1: 1.12 kH/s
[2023-03-09 15:43:34] CPU #5: 1.11 kH/s
[2023-03-09 15:43:39] CPU #6: 1.11 kH/s
[2023-03-09 15:43:39] CPU #7: 1.11 kH/s
[2023-03-09 15:43:39] Total: 8.88 kH/s
[2023-03-09 15:43:39] CPU #3: 1.12 kH/s
[2023-03-09 15:43:39] CPU #4: 1.11 kH/s
[2023-03-09 15:43:44] Total: 8.88 kH/s
[2023-03-09 15:43:44] CPU #0: 1.11 kH/s
[2023-03-09 15:43:44] CPU #5: 1.11 kH/s
[2023-03-09 15:43:44] CPU #2: 1.11 kH/s
[2023-03-09 15:43:45] CPU #1: 1.10 kH/s
[2023-03-09 15:43:49] CPU #6: 1.10 kH/s
[2023-03-09 15:43:49] CPU #7: 1.10 kH/s
[2023-03-09 15:43:49] Total: 8.87 kH/s
[2023-03-09 15:43:49] CPU #3: 1.10 kH/s
[2023-03-09 15:43:49] CPU #4: 1.10 kH/s
[2023-03-09 15:43:50] CPU #2: 1.11 kH/s
[2023-03-09 15:43:53] CPU #1: 1.12 kH/s
[2023-03-09 15:43:54] Total: 8.87 kH/s
[2023-03-09 15:43:54] CPU #0: 1.11 kH/s
[2023-03-09 15:43:54] CPU #5: 1.11 kH/s
[2023-03-09 15:43:59] CPU #7: 1.11 kH/s
[2023-03-09 15:43:59] Total: 8.88 kH/s
[2023-03-09 15:43:59] CPU #3: 1.12 kH/s
[2023-03-09 15:43:59] CPU #4: 1.11 kH/s
[2023-03-09 15:43:59] CPU #2: 1.12 kH/s
[2023-03-09 15:43:59] CPU #1: 1.12 kH/s
[2023-03-09 15:43:59] CPU #6: 1.11 kH/s
[2023-03-09 15:44:04] Total: 8.88 kH/s
[2023-03-09 15:44:04] CPU #0: 1.11 kH/s
[2023-03-09 15:44:04] CPU #5: 1.11 kH/s
[2023-03-09 15:44:09] CPU #7: 1.11 kH/s
[2023-03-09 15:44:09] Total: 8.88 kH/s
[2023-03-09 15:44:09] CPU #3: 1.12 kH/s
[2023-03-09 15:44:09] CPU #4: 1.11 kH/s
[2023-03-09 15:44:09] CPU #2: 1.12 kH/s
[2023-03-09 15:44:09] CPU #1: 1.12 kH/s
[2023-03-09 15:44:09] CPU #6: 1.11 kH/s
[2023-03-09 15:44:14] Total: 8.88 kH/s
[2023-03-09 15:44:14] CPU #0: 1.11 kH/s
[2023-03-09 15:44:14] CPU #5: 1.11 kH/s
[2023-03-09 15:44:19] CPU #7: 1.11 kH/s
[2023-03-09 15:44:19] Total: 8.88 kH/s
[2023-03-09 15:44:19] CPU #3: 1.12 kH/s
[2023-03-09 15:44:19] CPU #4: 1.10 kH/s
[2023-03-09 15:44:19] CPU #1: 1.12 kH/s
[2023-03-09 15:44:19] CPU #2: 1.12 kH/s
[2023-03-09 15:44:19] CPU #6: 1.11 kH/s
[2023-03-09 15:44:24] Total: 8.88 kH/s
[2023-03-09 15:44:24] CPU #0: 1.11 kH/s
[2023-03-09 15:44:24] CPU #5: 1.11 kH/s
[2023-03-09 15:44:29] CPU #3: 1.11 kH/s
[2023-03-09 15:44:29] CPU #7: 1.10 kH/s
[2023-03-09 15:44:29] Total: 8.87 kH/s
[2023-03-09 15:44:29] CPU #4: 1.10 kH/s
[2023-03-09 15:44:29] CPU #2: 1.11 kH/s
[2023-03-09 15:44:29] CPU #6: 1.10 kH/s
[2023-03-09 15:44:30] CPU #1: 1.11 kH/s
[2023-03-09 15:44:30] CPU #5: 1.10 kH/s
[2023-03-09 15:44:34] Total: 8.87 kH/s
[2023-03-09 15:44:34] CPU #0: 1.11 kH/s
[2023-03-09 15:44:38] CPU #5: 1.11 kH/s
[2023-03-09 15:44:39] CPU #7: 1.11 kH/s
[2023-03-09 15:44:39] Total: 8.87 kH/s
[2023-03-09 15:44:39] CPU #3: 1.12 kH/s
[2023-03-09 15:44:39] CPU #4: 1.11 kH/s
[2023-03-09 15:44:39] CPU #2: 1.12 kH/s
[2023-03-09 15:44:39] CPU #6: 1.11 kH/s
[2023-03-09 15:44:39] CPU #1: 1.12 kH/s
[2023-03-09 15:44:44] Total: 8.88 kH/s
[2023-03-09 15:44:44] CPU #0: 1.11 kH/s
[2023-03-09 15:44:44] CPU #5: 1.11 kH/s
[2023-03-09 15:44:49] CPU #7: 1.11 kH/s
[2023-03-09 15:44:49] Total: 8.88 kH/s
[2023-03-09 15:44:49] CPU #3: 1.12 kH/s
[2023-03-09 15:44:49] CPU #4: 1.11 kH/s
[2023-03-09 15:44:49] CPU #6: 1.11 kH/s
[2023-03-09 15:44:49] CPU #2: 1.12 kH/s
[2023-03-09 15:44:49] CPU #1: 1.12 kH/s
[2023-03-09 15:44:54] Total: 8.88 kH/s
[2023-03-09 15:44:54] CPU #0: 1.11 kH/s
[2023-03-09 15:44:54] CPU #5: 1.11 kH/s
[2023-03-09 15:44:59] CPU #7: 1.11 kH/s
[2023-03-09 15:44:59] Total: 8.88 kH/s
[2023-03-09 15:44:59] CPU #3: 1.12 kH/s
[2023-03-09 15:44:59] CPU #4: 1.10 kH/s
[2023-03-09 15:44:59] CPU #6: 1.11 kH/s
[2023-03-09 15:44:59] CPU #1: 1.12 kH/s
[2023-03-09 15:44:59] CPU #2: 1.11 kH/s
[2023-03-09 15:45:04] Total: 8.88 kH/s
[2023-03-09 15:45:04] CPU #0: 1.11 kH/s
[2023-03-09 15:45:04] CPU #5: 1.11 kH/s
[2023-03-09 15:45:09] CPU #7: 1.11 kH/s
[2023-03-09 15:45:09] Total: 8.87 kH/s
[2023-03-09 15:45:09] CPU #3: 1.12 kH/s
[2023-03-09 15:45:09] CPU #4: 1.11 kH/s
[2023-03-09 15:45:09] CPU #6: 1.11 kH/s
[2023-03-09 15:45:09] CPU #2: 1.12 kH/s
[2023-03-09 15:45:09] CPU #1: 1.12 kH/s
[2023-03-09 15:45:14] Total: 8.88 kH/s
[2023-03-09 15:45:14] CPU #0: 1.10 kH/s
[2023-03-09 15:45:14] CPU #5: 1.11 kH/s
[2023-03-09 15:45:15] CPU #1: 1.11 kH/s
[2023-03-09 15:45:19] CPU #7: 1.10 kH/s
[2023-03-09 15:45:19] Total: 8.86 kH/s
[2023-03-09 15:45:19] CPU #3: 1.11 kH/s
[2023-03-09 15:45:19] CPU #4: 1.10 kH/s
[2023-03-09 15:45:19] CPU #6: 1.11 kH/s
[2023-03-09 15:45:19] CPU #2: 1.11 kH/s
[2023-03-09 15:45:24] Total: 8.87 kH/s
[2023-03-09 15:45:24] CPU #0: 1.11 kH/s
[2023-03-09 15:45:24] CPU #5: 1.11 kH/s
[2023-03-09 15:45:24] CPU #1: 1.12 kH/s
[2023-03-09 15:45:29] CPU #7: 1.11 kH/s
[2023-03-09 15:45:29] Total: 8.88 kH/s
[2023-03-09 15:45:29] CPU #3: 1.12 kH/s
[2023-03-09 15:45:29] CPU #4: 1.11 kH/s
[2023-03-09 15:45:29] CPU #6: 1.11 kH/s
[2023-03-09 15:45:29] CPU #2: 1.12 kH/s
[2023-03-09 15:45:34] Total: 8.88 kH/s
[2023-03-09 15:45:34] CPU #0: 1.11 kH/s
[2023-03-09 15:45:34] CPU #5: 1.11 kH/s
[2023-03-09 15:45:34] CPU #1: 1.11 kH/s
[2023-03-09 15:45:39] CPU #7: 1.11 kH/s
[2023-03-09 15:45:39] Total: 8.88 kH/s
[2023-03-09 15:45:39] CPU #3: 1.11 kH/s
[2023-03-09 15:45:39] CPU #4: 1.11 kH/s
[2023-03-09 15:45:39] CPU #6: 1.11 kH/s
[2023-03-09 15:45:39] CPU #2: 1.12 kH/s
[2023-03-09 15:45:44] Total: 8.88 kH/s
[2023-03-09 15:45:44] CPU #0: 1.11 kH/s
[2023-03-09 15:45:44] CPU #5: 1.11 kH/s
[2023-03-09 15:45:44] CPU #1: 1.12 kH/s
[2023-03-09 15:45:49] CPU #7: 1.11 kH/s
[2023-03-09 15:45:49] Total: 8.88 kH/s
[2023-03-09 15:45:49] CPU #3: 1.12 kH/s
[2023-03-09 15:45:49] CPU #4: 1.10 kH/s
[2023-03-09 15:45:49] CPU #6: 1.11 kH/s
[2023-03-09 15:45:49] CPU #2: 1.12 kH/s
[2023-03-09 15:45:54] Total: 8.88 kH/s
[2023-03-09 15:45:54] CPU #0: 1.11 kH/s
[2023-03-09 15:45:54] CPU #5: 1.11 kH/s
[2023-03-09 15:45:54] CPU #1: 1.12 kH/s
[2023-03-09 15:45:59] CPU #7: 1.10 kH/s
[2023-03-09 15:45:59] Total: 8.88 kH/s
[2023-03-09 15:45:59] CPU #3: 1.11 kH/s
[2023-03-09 15:45:59] CPU #4: 1.10 kH/s
[2023-03-09 15:45:59] CPU #2: 1.11 kH/s
[2023-03-09 15:46:00] CPU #6: 1.09 kH/s
[2023-03-09 15:46:04] Total: 8.86 kH/s
[2023-03-09 15:46:04] CPU #0: 1.11 kH/s
[2023-03-09 15:46:04] CPU #1: 1.12 kH/s
[2023-03-09 15:46:04] CPU #5: 1.11 kH/s
[2023-03-09 15:46:09] CPU #7: 1.11 kH/s
[2023-03-09 15:46:09] Total: 8.87 kH/s
[2023-03-09 15:46:09] CPU #3: 1.12 kH/s
[2023-03-09 15:46:09] CPU #4: 1.10 kH/s
[2023-03-09 15:46:09] CPU #6: 1.11 kH/s
[2023-03-09 15:46:09] CPU #2: 1.12 kH/s
[2023-03-09 15:46:13] Total: 8.88 kH/s
[2023-03-09 15:46:14] CPU #0: 1.11 kH/s
[2023-03-09 15:46:14] CPU #5: 1.11 kH/s
[2023-03-09 15:46:14] CPU #1: 1.12 kH/s
[2023-03-09 15:46:15] CPU #7: 1.11 kH/s
[2023-03-09 15:46:15] Total: 8.88 kH/s
[2023-03-09 15:46:18] Total: 8.88 kH/s
[2023-03-09 15:46:19] CPU #3: 1.12 kH/s
[2023-03-09 15:46:19] CPU #4: 1.11 kH/s
[2023-03-09 15:46:19] CPU #6: 1.11 kH/s
[2023-03-09 15:46:19] CPU #2: 1.12 kH/s
[2023-03-09 15:46:19] Total: 8.88 kH/s
[2023-03-09 15:46:24] CPU #0: 1.11 kH/s
[2023-03-09 15:46:24] CPU #5: 1.11 kH/s
[2023-03-09 15:46:24] CPU #1: 1.12 kH/s
[2023-03-09 15:46:24] CPU #7: 1.11 kH/s
[2023-03-09 15:46:24] Total: 8.88 kH/s
[2023-03-09 15:46:29] CPU #3: 1.12 kH/s

Total Scores: 8.88,8.87,8.86

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:45:59: 1400MHz  8.07 100%   0%  99%   0%   0%   0%  47.0Â°C

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 1400    Measured: 1396 (1396.371/1396.165/1396.165)

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (cpu0-thermal)

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:32:13: 1400MHz  0.68  19%   0%  18%   0%   0%   0%  65.0Â°C
15:32:23: 1400MHz  0.73  12%   0%  12%   0%   0%   0%  65.0Â°C
15:32:33: 1400MHz  0.77  12%   0%  12%   0%   0%   0%  66.0Â°C
15:32:43: 1400MHz  0.88  12%   0%  12%   0%   0%   0%  66.0Â°C
15:32:54: 1400MHz  0.90  12%   0%  12%   0%   0%   0%  67.0Â°C
15:33:04: 1400MHz  0.92  12%   0%  12%   0%   0%   0%  67.0Â°C
15:33:14: 1400MHz  0.93  12%   0%  12%   0%   0%   0%  68.0Â°C
15:33:24: 1400MHz  0.94  12%   0%  12%   0%   0%   0%  68.0Â°C
15:33:34: 1400MHz  0.95  12%   0%  12%   0%   0%   0%  68.0Â°C
15:33:44: 1400MHz  0.96  12%   0%  12%   0%   0%   0%  69.0Â°C
15:33:54: 1400MHz  0.97  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:04: 1400MHz  1.05  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:14: 1400MHz  1.04  12%   0%  12%   0%   0%   0%  69.0Â°C

System health while running ramlat:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:34:17: 1400MHz  1.04  18%   0%  18%   0%   0%   0%  69.0Â°C
15:34:20: 1400MHz  1.04  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:23: 1400MHz  1.04  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:26: 1400MHz  1.04  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:29: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:32: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:35: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:38: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  69.0Â°C
15:34:41: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  69.0Â°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:34:45: 1400MHz  1.02  18%   0%  17%   0%   0%   0%  69.0Â°C
15:35:01: 1400MHz  1.02  12%   0%  12%   0%   0%   0%  69.0Â°C
15:35:17: 1400MHz  1.08  12%   0%  12%   0%   0%   0%  70.0Â°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:35:21: 1400MHz  1.08  18%   0%  17%   0%   0%   0%  70.0Â°C
15:35:35: 1400MHz  1.06  12%   0%  12%   0%   0%   0%  70.0Â°C
15:35:49: 1400MHz  1.04  12%   0%  12%   0%   0%   0%  70.0Â°C
15:36:03: 1400MHz  1.11  13%   0%  12%   0%   0%   0%  70.0Â°C
15:36:17: 1400MHz  1.09  12%   0%  12%   0%   0%   0%  70.0Â°C
15:36:31: 1400MHz  1.07  12%   0%  12%   0%   0%   0%  70.0Â°C
15:36:45: 1400MHz  1.05  12%   0%  12%   0%   0%   0%  70.0Â°C
15:36:59: 1400MHz  1.04  12%   0%  12%   0%   0%   0%  70.0Â°C
15:37:13: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  70.0Â°C
15:37:27: 1400MHz  1.03  12%   0%  12%   0%   0%   0%  70.0Â°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:37:34: 1400MHz  1.02  18%   0%  17%   0%   0%   0%  70.0Â°C
15:37:50: 1400MHz  2.29  72%   0%  71%   0%   0%   0%  73.0Â°C
15:38:04: 1400MHz  3.31  92%   0%  91%   0%   0%   0%  76.0Â°C
15:38:20: 1400MHz  4.42  94%   0%  94%   0%   0%   0%  78.0Â°C
15:38:35: 1400MHz  5.35  78%   1%  77%   0%   0%   0%  79.0Â°C
15:38:51: 1300MHz  5.60  93%   2%  88%   0%   1%   0%  80.0Â°C
15:39:05: 1300MHz  5.59  65%   0%  65%   0%   0%   0%  80.0Â°C
15:39:20: 1400MHz  6.13  97%   0%  97%   0%   0%   0%  78.0Â°C
15:39:35: 1400MHz  6.25  86%   0%  86%   0%   0%   0%  72.0Â°C
15:39:50: 1400MHz  6.26  82%   0%  81%   0%   0%   0%  66.0Â°C
15:40:07: 1400MHz  6.06  88%   1%  83%   0%   2%   0%  61.0Â°C
15:40:22: 1400MHz  6.22  71%   0%  70%   0%   0%   0%  56.0Â°C
15:40:38: 1400MHz  6.61  94%   0%  94%   0%   0%   0%  55.0Â°C
15:40:54: 1400MHz  6.78  87%   0%  86%   0%   0%   0%  52.0Â°C
15:41:08: 1400MHz  7.19  82%   0%  81%   0%   0%   0%  50.0Â°C
15:41:25: 1400MHz  7.50  89%   1%  86%   0%   1%   0%  48.0Â°C

System health while running cpuminer:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:41:34: 1400MHz  7.65  22%   0%  21%   0%   0%   0%  48.0Â°C
15:42:17: 1400MHz  7.88 100%   0%  99%   0%   0%   0%  48.0Â°C
15:43:01: 1400MHz  7.99 100%   0%  99%   0%   0%   0%  48.0Â°C
15:43:45: 1400MHz  7.99 100%   0%  99%   0%   0%   0%  47.0Â°C
15:44:30: 1400MHz  8.04 100%   0%  99%   0%   0%   0%  47.0Â°C
15:45:15: 1400MHz  8.06 100%   0%  99%   0%   0%   0%  47.0Â°C
15:45:59: 1400MHz  8.07 100%   0%  99%   0%   0%   0%  47.0Â°C

##########################################################################

Throttling statistics (time spent on each cpufreq OPP):

1400 MHz:  826.98 sec
1300 MHz:   30.01 sec
1200 MHz:       0 sec
1100 MHz:       0 sec
1000 MHz:       0 sec
 900 MHz:       0 sec
 800 MHz:       0 sec
 700 MHz:       0 sec
 600 MHz:       0 sec
 500 MHz:       0 sec
 400 MHz:       0 sec

##########################################################################

dmesg output while running the benchmarks:

[ 3641.856000] CPU2: update max cpu_capacity 950
[ 3645.240000] CPU2: update max cpu_capacity 877
[ 3648.732000] CPU2: update max cpu_capacity 804
[ 3652.364000] CPU2: update max cpu_capacity 731
[ 3655.804000] CPU2: update max cpu_capacity 658
[ 3659.416000] CPU2: update max cpu_capacity 585
[ 3662.868000] CPU2: update max cpu_capacity 512
[ 3666.540000] CPU2: update max cpu_capacity 438
[ 3670.132000] CPU2: update max cpu_capacity 365
[ 3673.676000] CPU2: update max cpu_capacity 292
[ 3677.228000] CPU7: update max cpu_capacity 1024
[ 4066.756000] CPU7: update max cpu_capacity 950
[ 4067.656000] CPU1: update max cpu_capacity 1024
[ 4068.680000] CPU1: update max cpu_capacity 950
[ 4077.644000] CPU3: update max cpu_capacity 1024
[ 4080.780000] CPU3: update max cpu_capacity 950
[ 4081.652000] CPU1: update max cpu_capacity 1024
[ 4082.660000] CPU1: update max cpu_capacity 950
[ 4101.676000] CPU5: update max cpu_capacity 1024

##########################################################################

Linux 4.4.172-s5p6818 (NanoPi-Fire3) 	03/09/23 	_armv7l_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          26.59    0.01    0.59    0.28    0.00   72.52

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           6.14       114.77       254.86         0.00     520965    1156840          0
sda               0.05         1.44         0.00         0.00       6552          0          0

              total        used        free      shared  buff/cache   available
Mem:          954Mi        74Mi       830Mi       0.0Ki        49Mi       821Mi
Swap:         2.0Gi        30Mi       2.0Gi

Filename				Type		Size	Used	Priority
/swapfile                              	file    	2097148	31076	-1

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      400    1400   Cortex-A53 / r0p3
  1        0        0      400    1400   Cortex-A53 / r0p3
  2        0        0      400    1400   Cortex-A53 / r0p3
  3        0        0      400    1400   Cortex-A53 / r0p3
  4        1        0      400    1400   Cortex-A53 / r0p3
  5        1        0      400    1400   Cortex-A53 / r0p3
  6        1        0      400    1400   Cortex-A53 / r0p3
  7        1        0      400    1400   Cortex-A53 / r0p3

Architecture:        armv7l
Byte Order:          Little Endian
CPU(s):              8
On-line CPU(s) list: 0-7
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           2
Vendor ID:           ARM
Model:               3
Model name:          Cortex-A53
Stepping:            r0p3
CPU max MHz:         1400.0000
CPU min MHz:         400.0000
BogoMIPS:            19.84
Flags:               half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt lpae aes pmull sha1 sha2 crc32

SoC guess: Nexell S5P6818
DT compat: friendlyelec,nanopi-fire3
           nexell,s5p6818
 Compiler: /usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 / arm-linux-gnueabihf
 Userland: armhf
   Kernel: 4.4.172-s5p6818/armv7l
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_RCU=y

##########################################################################

Kernel version 4.4.172 is not covered by any active release cycle any more.

See https://endoflife.date/linux for details. It is highly likely countless
exploitable vulnerabilities do exist for this kernel as well as tons of bugs.

This device runs a Nexell vendor/BSP kernel.

The 4.4 series has reached end-of-life on 2022-02-03 with version 4.4.302.

##########################################################################

Results validation:

  * No mismatch between advertised and measured max CPU clockspeed
  * No swapping
  * Background activity (%system) OK
  * Throttling occured

##########################################################################

/sys/kernel/debug/clk/clk_summary diff between all governors set to powersave and performance:

     clock                         enable_cnt  prepare_cnt        rate   accuracy   phase
  ----------------------------------------------------------------------------------------
   otg                                      1            1           0          0 0  
55,58c55,58
<  sys-pll1                                 0            0   400000000          0 0  
<     pll1                                  0            0   400000000          0 0  
<     sys-chclk                             0            0   100000000          0 0  
<     sys-cfclk                             0            0   400000000          0 0  
---
>  sys-pll1                                 0            0  1400000000          0 0  
>     pll1                                  0            0  1400000000          0 0  
>     sys-chclk                             0            0   350000000          0 0  
>     sys-cfclk                             0            0  1400000000          0 0  

##########################################################################

# FriendlyElec NanoPi Fire3

Tested with sbc-bench v0.9.37 on Thu, 09 Mar 2023 15:46:37 +0000.

### General information:

    Nexell S5P6818, Kernel: armv7l, Userland: armhf
    
    CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                     cpufreq   min    max
     CPU    cluster  policy   speed  speed   core type
      0        0        0      400    1400   Cortex-A53 / r0p3
      1        0        0      400    1400   Cortex-A53 / r0p3
      2        0        0      400    1400   Cortex-A53 / r0p3
      3        0        0      400    1400   Cortex-A53 / r0p3
      4        1        0      400    1400   Cortex-A53 / r0p3
      5        1        0      400    1400   Cortex-A53 / r0p3
      6        1        0      400    1400   Cortex-A53 / r0p3
      7        1        0      400    1400   Cortex-A53 / r0p3

954 KB available RAM

### Governors/policies (performance vs. idle consumption):

Original governor settings:

    cpufreq-policy0: ondemand / 1400 MHz (conservative ondemand userspace powersave interactive performance schedutil / 400 500 600 700 800 900 1000 1100 1200 1300 1400)

Tuned governor settings:

    cpufreq-policy0: performance / 1400 MHz

### Clockspeeds (idle vs. heated up):

Before at 65.0Â°C:

    cpu0 (Cortex-A53): OPP: 1400, Measured: 1395 

After at 47.0Â°C (throttled):

    cpu0 (Cortex-A53): OPP: 1400, Measured: 1396 

### Performance baseline

  * memcpy: 1645.5 MB/s, memchr: 2057.3 MB/s, memset: 3714.1 MB/s
  * 16M latency: 159.0 160.6 159.1 159.3 159.0 160.2 230.1 444.8 
  * 7-zip MIPS (3 consecutive runs): 7366, 7365, 7463 (7400 avg), single-threaded: 1144
  * `aes-256-cbc      98707.27k   273482.94k   478640.04k   599685.02k   648536.06k   650771.39k`
  * `aes-256-cbc      99225.53k   272750.03k   478245.72k   601413.63k   647042.81k   652875.09k`

### Storage devices:

  * 111.8GB "Transcend TS120GMTS420" SSD as /dev/sda [SATA 3.1, 6.0 Gb/s (current: 6.0 Gb/s)]: behind JMicron JMS578 SATA 6Gb/s bridge, 1% worn out, Driver=uas, 480Mbps (capable of 12Mbps, 480Mbps, 5Gbps), drive temp: 30Â°C
  * 7.4GB "SanDisk SU08G" HS SD card as /dev/mmcblk0: date 06/2013, manfid/oemid: 0x000003/0x5344, hw/fw rev: 0x8/0x0

### Swap configuration:

  * /swapfile on /dev/mmcblk0p2: 2.0G (30.2M used) on ultra slow SD card storage

### Software versions:

  * Ubuntu 20.04 LTS
  * Compiler: /usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 / arm-linux-gnueabihf

### Kernel info:

  * `/proc/cmdline: console=ttySAC0,115200n8 root=/dev/mmcblk0p2 rootfstype=ext4 rootwait data=/dev/mmcblk0p3 init=/sbin/init loglevel=7 printk.time=1 consoleblank=0 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1 lcd=HDMI720P60 bootdev=2`
  * Kernel 4.4.172-s5p6818 / CONFIG_HZ=250

Kernel version 4.4.172 is not covered by any active release cycle any more.

See https://endoflife.date/linux for details. It is highly likely countless
exploitable vulnerabilities do exist for this kernel as well as tons of bugs.

This device runs a Nexell vendor/BSP kernel.

The 4.4 series has reached end-of-life on 2022-02-03 with version 4.4.302.
