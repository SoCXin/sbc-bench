sbc-bench v0.9.38 Microsoft Devkit 2023 (Sun, 12 Mar 2023 23:35:34 +0100)

Distributor ID:	Ubuntu
Description:	Ubuntu 22.10
Release:	22.10
Codename:	kinetic
Build system:   git@github.com:armbian/build.git, 23.02.0-trunk, UEFI arm64, uefi-arm64, arm64

Device Info:
	Manufacturer: Microsoft Corporation
	Product Name: Windows Dev Kit 2023
	Version: 124I:00097T:000M:0200000B:07
	SKU Number: 2043
	Family: Surface

BIOS/UEFI:
	Vendor: Microsoft Corporation
	Version: 7.31.139
	Release Date: 08.24.2022

/usr/bin/gcc (Ubuntu 12.2.0-3ubuntu1) 12.2.0

Uptime: 23:35:41 up 19 min,  4 users,  load average: 1.74, 1.36, 0.95,  36.2°C,  998086340

Linux 6.2.2-arm64 (uefi-arm64) 	03/12/23 	_aarch64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.79    0.00    0.99   10.21    0.00   88.00

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
nvme0n1           0.33         7.72         0.00         0.00       9152          0          0
sda              42.95       271.23      1952.41         0.00     321740    2316025          0

               total        used        free      shared  buff/cache   available
Mem:            30Gi       222Mi        30Gi        11Mi       209Mi        30Gi
Swap:             0B          0B          0B

##########################################################################

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A78C):

Cpufreq OPP: 2438    Measured: 2422 (2424.441/2423.360/2419.671)
Cpufreq OPP: 2342    Measured: 2326 (2326.801/2325.806/2325.492)
Cpufreq OPP: 2227    Measured: 2221 (2221.952/2221.618/2221.044)
Cpufreq OPP: 2112    Measured: 2106 (2107.106/2106.978/2106.118)
Cpufreq OPP: 1996    Measured: 1991 (1991.815/1991.815/1990.616)
Cpufreq OPP: 1881    Measured: 1876 (1876.658/1876.616/1876.488)
Cpufreq OPP: 1785    Measured: 1780 (1780.933/1780.779/1779.859)
Cpufreq OPP: 1670    Measured: 1665 (1665.103/1665.070/1665.036)
Cpufreq OPP: 1555    Measured: 1550 (1550.552/1550.334/1549.789)
Cpufreq OPP: 1440    Measured: 1435 (1435.638/1435.171/1434.828)
Cpufreq OPP: 1324    Measured: 1320 (1320.333/1320.333/1320.300)
Cpufreq OPP: 1209    Measured: 1205 (1205.305/1205.305/1204.838)
Cpufreq OPP: 1113    Measured: 1109 (1109.412/1108.993/1108.830)
Cpufreq OPP: 1017    Measured: 1013 (1013.485/1012.830/1012.806)
Cpufreq OPP:  902    Measured:  898    (898.441/898.365/898.098)
Cpufreq OPP:  806    Measured:  802    (802.446/802.446/802.370)
Cpufreq OPP:  691    Measured:  687    (687.053/687.039/686.913)
Cpufreq OPP:  595    Measured:  591    (591.495/591.391/591.378)
Cpufreq OPP:  499    Measured:  495    (495.537/495.503/494.971)
Cpufreq OPP:  403    Measured:  399    (399.613/399.603/399.355)
Cpufreq OPP:  300    Measured:  296    (296.605/296.345/296.130)     (-1.3%)

Checking cpufreq OPP for cpu4-cpu7 (Cortex-X1C):

Cpufreq OPP: 2995    Measured: 2991 (2991.165/2991.096/2991.096)
Cpufreq OPP: 2899    Measured: 2895 (2895.260/2895.195/2895.195)
Cpufreq OPP: 2803    Measured: 2799 (2799.293/2799.233/2799.233)
Cpufreq OPP: 2688    Measured: 2684 (2684.140/2684.084/2684.028)
Cpufreq OPP: 2592    Measured: 2588 (2588.162/2588.162/2588.111)
Cpufreq OPP: 2496    Measured: 2492 (2492.232/2492.232/2492.171)
Cpufreq OPP: 2400    Measured: 2396 (2396.210/2396.154/2396.099)
Cpufreq OPP: 2284    Measured: 2281 (2281.124/2281.124/2280.973)
Cpufreq OPP: 2169    Measured: 2165 (2165.999/2165.954/2165.863)
Cpufreq OPP: 2073    Measured: 2069 (2069.952/2069.910/2069.869)
Cpufreq OPP: 1977    Measured: 1974 (1974.068/1974.021/1974.021)
Cpufreq OPP: 1862    Measured: 1858 (1858.803/1858.803/1858.803)
Cpufreq OPP: 1747    Measured: 1743 (1743.547/1743.547/1743.511)
Cpufreq OPP: 1632    Measured: 1628 (1628.464/1628.424/1628.343)
Cpufreq OPP: 1516    Measured: 1513 (1513.356/1513.287/1513.287)
Cpufreq OPP: 1401    Measured: 1398 (1398.143/1398.143/1398.084)
Cpufreq OPP: 1286    Measured: 1283 (1283.020/1283.020/1282.988)
Cpufreq OPP: 1171    Measured: 1167 (1167.886/1167.886/1167.886)
Cpufreq OPP: 1056    Measured: 1052 (1052.693/1052.693/1052.641)
Cpufreq OPP:  940    Measured:  937    (937.560/937.560/937.539)
Cpufreq OPP:  825    Measured:  822    (822.410/822.410/822.390)

##########################################################################

Hardware sensors:

cpu7_thermal-virtual-0
temp1:        +38.2 C  (crit = +110.0 C)

pm8280_2_thermal-virtual-0
temp1:        +37.0 C  (crit = +115.0 C)

cpu5_thermal-virtual-0
temp1:        +37.6 C  (crit = +110.0 C)

mem_thermal-virtual-0
temp1:        +38.2 C  

cpu3_thermal-virtual-0
temp1:        +37.6 C  (crit = +110.0 C)

cpu1_thermal-virtual-0
temp1:        +37.6 C  (crit = +110.0 C)

nvme-pci-20100
Composite:    +44.9 C  (low  = -273.1 C, high = +81.8 C)
                       (crit = +85.8 C)
Sensor 1:     +44.9 C  (low  = -273.1 C, high = +65261.8 C)

cluster0_thermal-virtual-0
temp1:        +38.6 C  (crit = +110.0 C)

cpu6_thermal-virtual-0
temp1:        +38.2 C  (crit = +110.0 C)

pm8280_1_thermal-virtual-0
temp1:        +37.0 C  (crit = +115.0 C)

cpu4_thermal-virtual-0
temp1:        +37.9 C  (crit = +110.0 C)

cpu2_thermal-virtual-0
temp1:        +37.9 C  (crit = +110.0 C)

cpu0_thermal-virtual-0
temp1:        +37.9 C  (crit = +110.0 C)

/dev/nvme0:	45°C

##########################################################################

Executing benchmark on cpu0 (Cortex-A78C):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :  15001.3 MB/s (3, 3.0%)
 C copy backwards (32 byte blocks)                :  15255.5 MB/s (2)
 C copy backwards (64 byte blocks)                :  15308.9 MB/s (2)
 C copy                                           :  15234.4 MB/s (3, 0.2%)
 C copy prefetched (32 bytes step)                :  15201.5 MB/s (2)
 C copy prefetched (64 bytes step)                :  15193.4 MB/s (2)
 C 2-pass copy                                    :  11627.5 MB/s (2)
 C 2-pass copy prefetched (32 bytes step)         :  12503.3 MB/s (3, 0.2%)
 C 2-pass copy prefetched (64 bytes step)         :  13408.6 MB/s (2)
 C scan 8                                         :   2420.9 MB/s (2)
 C scan 16                                        :   4824.0 MB/s (2)
 C scan 32                                        :   9610.6 MB/s (2)
 C scan 64                                        :  18777.3 MB/s (2)
 C fill                                           :  38311.2 MB/s (3, 0.1%)
 C fill (shuffle within 16 byte blocks)           :  38303.5 MB/s (2)
 C fill (shuffle within 32 byte blocks)           :  38317.1 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :  38321.8 MB/s (2)
 ---
 libc memcpy copy                                 :  15339.0 MB/s (2)
 libc memchr scan                                 :  23038.8 MB/s (2)
 libc memset fill                                 :  38614.4 MB/s (2)
 ---
 NEON LDP/STP copy                                :  15237.5 MB/s (3, 1.5%)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :  15117.5 MB/s (2)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :  15232.3 MB/s (3, 0.1%)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :  14421.4 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :  14394.6 MB/s (2)
 NEON LD1/ST1 copy                                :  14784.8 MB/s (3, 0.2%)
 NEON LDP load                                    :  25040.1 MB/s (3, 0.3%)
 NEON LDNP load                                   :  25662.6 MB/s (3, 0.6%)
 NEON STP fill                                    :  38598.6 MB/s (2)
 NEON STNP fill                                   :  38604.2 MB/s (2)
 ARM LDP/STP copy                                 :  15019.2 MB/s (3, 0.9%)
 ARM LDP load                                     :  25588.7 MB/s (3, 1.7%)
 ARM LDNP load                                    :  24257.6 MB/s (2)
 ARM STP fill                                     :  38608.8 MB/s (2)
 ARM STNP fill                                    :  38654.5 MB/s (2)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)             :   1123.1 MB/s (3, 3.7%)
 NEON LDP/STP 2-pass copy (from framebuffer)      :   1022.7 MB/s (3, 0.1%)
 NEON LD1/ST1 copy (from framebuffer)             :   1083.8 MB/s (3, 1.1%)
 NEON LD1/ST1 2-pass copy (from framebuffer)      :   1023.2 MB/s (2)
 ARM LDP/STP copy (from framebuffer)              :   1063.1 MB/s (3, 1.0%)
 ARM LDP/STP 2-pass copy (from framebuffer)       :   1018.2 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    1.1 ns          /     1.5 ns 
    131072 :    1.7 ns          /     2.0 ns 
    262144 :    3.1 ns          /     3.5 ns 
    524288 :    6.5 ns          /     7.2 ns 
   1048576 :   12.4 ns          /    14.4 ns 
   2097152 :   22.5 ns          /    17.6 ns 
   4194304 :   22.0 ns          /    18.5 ns 
   8388608 :   63.3 ns          /    26.8 ns 
  16777216 :  149.2 ns          /   111.6 ns 
  33554432 :  262.2 ns          /   240.4 ns 
  67108864 :  316.4 ns          /   292.4 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    1.3 ns          /     1.9 ns 
    131072 :    1.7 ns          /     2.2 ns 
    262144 :    2.2 ns          /     2.2 ns 
    524288 :    2.2 ns          /     2.3 ns 
   1048576 :    9.1 ns          /    12.7 ns 
   2097152 :   19.3 ns          /    15.8 ns 
   4194304 :   22.9 ns          /    16.0 ns 
   8388608 :   60.5 ns          /    16.4 ns 
  16777216 :   66.1 ns          /    95.6 ns 
  33554432 :  195.2 ns          /   213.8 ns 
  67108864 :  283.8 ns          /   248.4 ns 

Executing benchmark on cpu4 (Cortex-X1C):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :  17293.7 MB/s (2)
 C copy backwards (32 byte blocks)                :  17257.3 MB/s (2)
 C copy backwards (64 byte blocks)                :  17257.6 MB/s (3)
 C copy                                           :  16926.5 MB/s (2)
 C copy prefetched (32 bytes step)                :  16937.7 MB/s (2)
 C copy prefetched (64 bytes step)                :  16962.7 MB/s (2)
 C 2-pass copy                                    :  12995.7 MB/s (3, 0.3%)
 C 2-pass copy prefetched (32 bytes step)         :  16151.5 MB/s (3, 0.5%)
 C 2-pass copy prefetched (64 bytes step)         :  16644.4 MB/s (3, 0.1%)
 C scan 8                                         :   2986.1 MB/s (2)
 C scan 16                                        :   5945.3 MB/s (3, 0.1%)
 C scan 32                                        :  11811.2 MB/s (3, 0.2%)
 C scan 64                                        :  22671.0 MB/s (2)
 C fill                                           :  41973.9 MB/s (3, 0.9%)
 C fill (shuffle within 16 byte blocks)           :  42026.1 MB/s (3, 0.4%)
 C fill (shuffle within 32 byte blocks)           :  41974.6 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :  42009.5 MB/s (2)
 ---
 libc memcpy copy                                 :  17707.4 MB/s (3)
 libc memchr scan                                 :  26965.0 MB/s (3, 0.2%)
 libc memset fill                                 :  42113.6 MB/s (2)
 ---
 NEON LDP/STP copy                                :  18385.3 MB/s (3, 0.2%)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :  17713.1 MB/s (3, 0.2%)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :  17663.6 MB/s (3)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :  17059.9 MB/s (3, 0.1%)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :  17030.3 MB/s (2)
 NEON LD1/ST1 copy                                :  18235.3 MB/s (2)
 NEON LDP load                                    :  29302.5 MB/s (3, 0.5%)
 NEON LDNP load                                   :  29463.9 MB/s (3, 0.9%)
 NEON STP fill                                    :  42171.0 MB/s (2)
 NEON STNP fill                                   :  42087.4 MB/s (2)
 ARM LDP/STP copy                                 :  17508.4 MB/s (3, 0.2%)
 ARM LDP load                                     :  27635.1 MB/s (2)
 ARM LDNP load                                    :  27614.1 MB/s (2)
 ARM STP fill                                     :  42141.1 MB/s (3, 0.2%)
 ARM STNP fill                                    :  42034.1 MB/s (2)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)             :   1145.0 MB/s (3, 3.6%)
 NEON LDP/STP 2-pass copy (from framebuffer)      :   1054.7 MB/s (3, 0.7%)
 NEON LD1/ST1 copy (from framebuffer)             :   1086.0 MB/s (3, 0.7%)
 NEON LD1/ST1 2-pass copy (from framebuffer)      :   1043.1 MB/s (2)
 ARM LDP/STP copy (from framebuffer)              :   1082.7 MB/s (3, 1.2%)
 ARM LDP/STP 2-pass copy (from framebuffer)       :   1041.1 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    0.0 ns          /     0.0 ns 
    131072 :    1.0 ns          /     1.4 ns 
    262144 :    2.3 ns          /     2.7 ns 
    524288 :    3.4 ns          /     3.4 ns 
   1048576 :    5.0 ns          /     5.7 ns 
   2097152 :   15.7 ns          /    12.7 ns 
   4194304 :   17.5 ns          /    15.5 ns 
   8388608 :   61.3 ns          /    23.2 ns 
  16777216 :  124.9 ns          /    93.5 ns 
  33554432 :  236.8 ns          /   229.0 ns 
  67108864 :  300.5 ns          /   278.2 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    0.0 ns          /     0.0 ns 
    131072 :    1.0 ns          /     1.4 ns 
    262144 :    1.7 ns          /     1.8 ns 
    524288 :    1.8 ns          /     2.0 ns 
   1048576 :    2.1 ns          /     2.0 ns 
   2097152 :   13.4 ns          /    11.1 ns 
   4194304 :   19.9 ns          /    13.9 ns 
   8388608 :   48.3 ns          /    14.4 ns 
  16777216 :   59.7 ns          /    87.0 ns 
  33554432 :  180.8 ns          /   203.3 ns 
  67108864 :  268.7 ns          /   238.5 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A78C), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.644 1.644 1.646 1.645 1.646 1.645 1.644 3.185 
         8k: 1.645 1.645 1.645 1.644 1.644 1.646 1.645 3.195 
        16k: 1.645 1.645 1.645 1.646 1.645 1.645 1.645 3.196 
        32k: 1.649 1.646 1.647 1.646 1.648 1.648 1.649 3.200 
        64k: 5.765 5.769 5.768 5.770 5.768 5.798 6.597 12.14 
       128k: 4.936 4.970 4.936 4.968 4.938 4.949 6.348 12.66 
       256k: 4.934 4.968 4.935 4.967 4.935 4.943 6.335 12.74 
       512k: 5.021 5.051 5.027 5.049 5.022 5.166 6.593 12.87 
      1024k: 5.754 6.975 5.760 6.965 5.769 11.27 13.96 17.46 
      2048k: 6.073 7.307 6.082 7.274 6.061 13.65 19.59 26.43 
      4096k: 6.913 7.780 6.921 7.846 6.883 14.79 22.94 35.79 
      8192k: 12.36 12.62 12.22 12.45 12.13 15.58 26.11 45.23 
     16384k: 66.52 49.12 67.45 48.89 74.58 37.34 32.50 51.56 

Executing ramlat on cpu4 (Cortex-X1C), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 1.337 1.337 1.337 1.337 1.337 1.337 1.337 2.506 
         8k: 1.337 1.337 1.337 1.337 1.337 1.337 1.337 2.525 
        16k: 1.337 1.337 1.337 1.339 1.337 1.337 1.337 2.520 
        32k: 1.337 1.337 1.337 1.337 1.337 1.337 1.337 2.525 
        64k: 1.339 1.338 1.339 1.338 1.339 1.339 1.339 2.527 
       128k: 4.012 4.012 4.012 4.012 4.010 4.462 5.606 9.559 
       256k: 4.014 4.012 4.012 4.012 4.012 4.495 5.616 9.677 
       512k: 4.012 4.012 4.012 4.012 4.012 4.453 5.607 9.711 
      1024k: 4.045 4.045 4.044 4.048 4.046 4.583 5.734 9.770 
      2048k: 4.704 5.684 4.695 5.683 4.694 10.65 14.12 19.34 
      4096k: 5.230 6.678 5.219 6.700 5.208 13.31 20.01 33.27 
      8192k: 5.920 6.570 5.858 6.683 5.877 13.80 21.58 36.89 
     16384k: 40.16 32.57 37.80 28.93 37.84 24.12 27.74 48.81 

##########################################################################

Executing benchmark on each cluster individually

OpenSSL 3.0.5, built on 5 Jul 2022 (Library: OpenSSL 3.0.5 5 Jul 2022)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     934382.75k  1537687.25k  1811229.87k  1904452.61k  1933153.62k  1933765.29k (Cortex-A78C)
aes-128-cbc    1312322.03k  2061511.77k  2269991.08k  2333541.72k  2361027.24k  2362365.27k (Cortex-X1C)
aes-192-cbc     887685.19k  1348750.08k  1528028.67k  1585213.78k  1602139.48k  1603152.55k (Cortex-A78C)
aes-192-cbc    1231214.63k  1740455.59k  1913088.60k  1958564.52k  1980653.57k  1981175.13k (Cortex-X1C)
aes-256-cbc     823505.01k  1180811.22k  1323236.35k  1358854.14k  1372184.58k  1373787.48k (Cortex-A78C)
aes-256-cbc    1154532.02k  1542605.21k  1645162.75k  1682968.58k  1693652.31k  1694258.52k (Cortex-X1C)

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A78C)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - 128000000 - - - -

RAM size:   31420 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3491    99   3414   3397  |      44846   100   3843   3829
23:       2857    99   2927   2911  |      44484   100   3867   3851
24:       2604    99   2814   2800  |      43833   100   3863   3848
25:       2462   100   2825   2812  |      41987   100   3752   3737
----------------------------------  | ------------------------------
Avr:              99   2995   2980  |              100   3831   3816
Tot:             100   3413   3398

Executing benchmark single-threaded on cpu4 (Cortex-X1C)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   31420 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4434   100   4324   4314  |      57747   100   4938   4930
23:       3498   100   3574   3565  |      57082   100   4957   4941
24:       3175   100   3422   3414  |      56326   100   4953   4945
25:       2963   100   3392   3384  |      53569   100   4776   4768
----------------------------------  | ------------------------------
Avr:             100   3678   3669  |              100   4906   4896
Tot:             100   4292   4283

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-7

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   31420 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      38151   696   5334  37113  |     371377   722   4389  31677
23:      38192   751   5180  38913  |     361863   724   4325  31315
24:      36615   751   5240  39369  |     351591   725   4258  30859
25:      36113   771   5345  41233  |     341462   727   4180  30389
----------------------------------  | ------------------------------
Avr:             742   5275  39157  |              724   4288  31060
Tot:             733   4781  35108

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   31420 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      41617   768   5271  40485  |     370929   722   4381  31639
23:      37928   756   5110  38644  |     360450   719   4337  31192
24:      36795   763   5185  39562  |     350860   720   4279  30794
25:      35617   765   5318  40667  |     341560   725   4193  30397
----------------------------------  | ------------------------------
Avr:             763   5221  39840  |              722   4297  31006
Tot:             742   4759  35423

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - 256000000 - - -

RAM size:   31420 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      41147   755   5304  40029  |     371471   721   4394  31685
23:      38041   764   5075  38759  |     361215   722   4331  31258
24:      37047   769   5178  39834  |     351332   723   4267  30836
25:      35610   762   5335  40658  |     339942   724   4177  30253
----------------------------------  | ------------------------------
Avr:             762   5223  39820  |              722   4292  31008
Tot:             742   4757  35414

Compression: 39157,39840,39820
Decompression: 31060,31006,31008
Total: 35108,35423,35414

##########################################################################

** cpuminer-multi 1.3.7 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2023-03-12 23:46:08] 8 miner threads started, using 'scrypt' algorithm.
[2023-03-12 23:46:08] CPU #4: 5.15 kH/s
[2023-03-12 23:46:08] CPU #5: 5.17 kH/s
[2023-03-12 23:46:08] CPU #6: 5.20 kH/s
[2023-03-12 23:46:08] CPU #7: 5.17 kH/s
[2023-03-12 23:46:08] CPU #1: 4.02 kH/s
[2023-03-12 23:46:08] CPU #0: 3.98 kH/s
[2023-03-12 23:46:08] CPU #3: 4.02 kH/s
[2023-03-12 23:46:08] CPU #2: 3.99 kH/s
[2023-03-12 23:46:12] Total: 39.25 kH/s
[2023-03-12 23:46:13] Total: 42.69 kH/s
[2023-03-12 23:46:18] CPU #4: 6.05 kH/s
[2023-03-12 23:46:18] CPU #5: 6.05 kH/s
[2023-03-12 23:46:18] CPU #7: 6.05 kH/s
[2023-03-12 23:46:18] Total: 42.75 kH/s
[2023-03-12 23:46:18] CPU #2: 4.64 kH/s
[2023-03-12 23:46:18] CPU #0: 4.64 kH/s
[2023-03-12 23:46:18] CPU #6: 6.05 kH/s
[2023-03-12 23:46:18] CPU #1: 4.64 kH/s
[2023-03-12 23:46:18] CPU #3: 4.64 kH/s
[2023-03-12 23:46:23] Total: 42.76 kH/s
[2023-03-12 23:46:28] CPU #4: 6.05 kH/s
[2023-03-12 23:46:28] CPU #5: 6.05 kH/s
[2023-03-12 23:46:28] CPU #7: 6.05 kH/s
[2023-03-12 23:46:28] Total: 42.76 kH/s
[2023-03-12 23:46:28] CPU #2: 4.64 kH/s
[2023-03-12 23:46:28] CPU #6: 6.05 kH/s
[2023-03-12 23:46:28] CPU #0: 4.64 kH/s
[2023-03-12 23:46:28] CPU #1: 4.65 kH/s
[2023-03-12 23:46:28] CPU #3: 4.64 kH/s
[2023-03-12 23:46:33] Total: 42.76 kH/s
[2023-03-12 23:46:38] CPU #4: 6.05 kH/s
[2023-03-12 23:46:38] CPU #5: 6.05 kH/s
[2023-03-12 23:46:38] CPU #7: 6.05 kH/s
[2023-03-12 23:46:38] Total: 42.76 kH/s
[2023-03-12 23:46:38] CPU #2: 4.64 kH/s
[2023-03-12 23:46:38] CPU #0: 4.64 kH/s
[2023-03-12 23:46:38] CPU #6: 6.05 kH/s
[2023-03-12 23:46:38] CPU #1: 4.64 kH/s
[2023-03-12 23:46:38] CPU #3: 4.64 kH/s
[2023-03-12 23:46:43] Total: 42.76 kH/s
[2023-03-12 23:46:48] CPU #4: 6.05 kH/s
[2023-03-12 23:46:48] CPU #5: 6.05 kH/s
[2023-03-12 23:46:48] CPU #7: 6.05 kH/s
[2023-03-12 23:46:48] Total: 42.76 kH/s
[2023-03-12 23:46:48] CPU #2: 4.64 kH/s
[2023-03-12 23:46:48] CPU #0: 4.64 kH/s
[2023-03-12 23:46:48] CPU #6: 6.05 kH/s
[2023-03-12 23:46:48] CPU #1: 4.64 kH/s
[2023-03-12 23:46:48] CPU #3: 4.64 kH/s
[2023-03-12 23:46:53] Total: 42.76 kH/s
[2023-03-12 23:46:58] CPU #4: 6.05 kH/s
[2023-03-12 23:46:58] CPU #7: 6.05 kH/s
[2023-03-12 23:46:58] Total: 42.76 kH/s
[2023-03-12 23:46:58] CPU #5: 6.05 kH/s
[2023-03-12 23:46:58] CPU #2: 4.64 kH/s
[2023-03-12 23:46:58] CPU #0: 4.64 kH/s
[2023-03-12 23:46:58] CPU #6: 6.04 kH/s
[2023-03-12 23:46:58] CPU #1: 4.64 kH/s
[2023-03-12 23:46:58] CPU #3: 4.64 kH/s
[2023-03-12 23:47:03] Total: 42.75 kH/s
[2023-03-12 23:47:08] CPU #4: 6.05 kH/s
[2023-03-12 23:47:08] CPU #5: 6.05 kH/s
[2023-03-12 23:47:08] CPU #7: 6.05 kH/s
[2023-03-12 23:47:08] Total: 42.76 kH/s
[2023-03-12 23:47:08] CPU #2: 4.64 kH/s
[2023-03-12 23:47:08] CPU #0: 4.64 kH/s
[2023-03-12 23:47:08] CPU #6: 6.05 kH/s
[2023-03-12 23:47:08] CPU #1: 4.64 kH/s
[2023-03-12 23:47:08] CPU #3: 4.64 kH/s
[2023-03-12 23:47:13] Total: 42.77 kH/s
[2023-03-12 23:47:18] CPU #4: 6.05 kH/s
[2023-03-12 23:47:18] CPU #5: 6.05 kH/s
[2023-03-12 23:47:18] CPU #7: 6.05 kH/s
[2023-03-12 23:47:18] Total: 42.76 kH/s
[2023-03-12 23:47:18] CPU #2: 4.64 kH/s
[2023-03-12 23:47:18] CPU #6: 6.05 kH/s
[2023-03-12 23:47:18] CPU #0: 4.64 kH/s
[2023-03-12 23:47:18] CPU #1: 4.64 kH/s
[2023-03-12 23:47:18] CPU #3: 4.63 kH/s
[2023-03-12 23:47:23] Total: 42.76 kH/s
[2023-03-12 23:47:28] CPU #4: 6.05 kH/s
[2023-03-12 23:47:28] CPU #5: 6.05 kH/s
[2023-03-12 23:47:28] CPU #7: 6.05 kH/s
[2023-03-12 23:47:28] Total: 42.76 kH/s
[2023-03-12 23:47:28] CPU #2: 4.64 kH/s
[2023-03-12 23:47:28] CPU #0: 4.64 kH/s
[2023-03-12 23:47:28] CPU #6: 6.05 kH/s
[2023-03-12 23:47:28] CPU #3: 4.64 kH/s
[2023-03-12 23:47:28] CPU #1: 4.64 kH/s
[2023-03-12 23:47:33] Total: 42.77 kH/s
[2023-03-12 23:47:38] CPU #4: 6.05 kH/s
[2023-03-12 23:47:38] CPU #7: 6.05 kH/s
[2023-03-12 23:47:38] Total: 42.76 kH/s
[2023-03-12 23:47:38] CPU #5: 6.04 kH/s
[2023-03-12 23:47:38] CPU #2: 4.64 kH/s
[2023-03-12 23:47:38] CPU #0: 4.64 kH/s
[2023-03-12 23:47:38] CPU #6: 6.05 kH/s
[2023-03-12 23:47:38] CPU #3: 4.64 kH/s
[2023-03-12 23:47:38] CPU #1: 4.64 kH/s
[2023-03-12 23:47:43] Total: 42.76 kH/s
[2023-03-12 23:47:48] CPU #4: 6.05 kH/s
[2023-03-12 23:47:48] CPU #5: 6.05 kH/s
[2023-03-12 23:47:48] CPU #7: 6.05 kH/s
[2023-03-12 23:47:48] Total: 42.76 kH/s
[2023-03-12 23:47:48] CPU #2: 4.64 kH/s
[2023-03-12 23:47:48] CPU #0: 4.64 kH/s
[2023-03-12 23:47:48] CPU #6: 6.04 kH/s
[2023-03-12 23:47:48] CPU #3: 4.64 kH/s
[2023-03-12 23:47:48] CPU #1: 4.64 kH/s
[2023-03-12 23:47:53] Total: 42.77 kH/s
[2023-03-12 23:47:58] CPU #4: 6.05 kH/s
[2023-03-12 23:47:58] CPU #5: 6.05 kH/s
[2023-03-12 23:47:58] CPU #7: 6.05 kH/s
[2023-03-12 23:47:58] Total: 42.77 kH/s
[2023-03-12 23:47:58] CPU #2: 4.64 kH/s
[2023-03-12 23:47:58] CPU #0: 4.64 kH/s
[2023-03-12 23:47:58] CPU #6: 6.05 kH/s
[2023-03-12 23:47:58] CPU #3: 4.64 kH/s
[2023-03-12 23:47:58] CPU #1: 4.64 kH/s
[2023-03-12 23:48:03] Total: 42.77 kH/s
[2023-03-12 23:48:08] CPU #4: 6.05 kH/s
[2023-03-12 23:48:08] CPU #5: 6.05 kH/s
[2023-03-12 23:48:08] CPU #7: 6.05 kH/s
[2023-03-12 23:48:08] Total: 42.76 kH/s
[2023-03-12 23:48:08] CPU #2: 4.64 kH/s
[2023-03-12 23:48:08] CPU #0: 4.64 kH/s
[2023-03-12 23:48:08] CPU #6: 6.05 kH/s
[2023-03-12 23:48:08] CPU #3: 4.64 kH/s
[2023-03-12 23:48:08] CPU #1: 4.64 kH/s
[2023-03-12 23:48:13] Total: 42.77 kH/s
[2023-03-12 23:48:18] CPU #4: 6.05 kH/s
[2023-03-12 23:48:18] CPU #5: 6.05 kH/s
[2023-03-12 23:48:18] CPU #7: 6.05 kH/s
[2023-03-12 23:48:18] Total: 42.77 kH/s
[2023-03-12 23:48:18] CPU #2: 4.64 kH/s
[2023-03-12 23:48:18] CPU #0: 4.64 kH/s
[2023-03-12 23:48:18] CPU #6: 6.05 kH/s
[2023-03-12 23:48:18] CPU #3: 4.64 kH/s
[2023-03-12 23:48:18] CPU #1: 4.64 kH/s
[2023-03-12 23:48:23] Total: 42.77 kH/s
[2023-03-12 23:48:28] CPU #4: 6.05 kH/s
[2023-03-12 23:48:28] CPU #7: 6.05 kH/s
[2023-03-12 23:48:28] Total: 42.75 kH/s
[2023-03-12 23:48:28] CPU #5: 6.04 kH/s
[2023-03-12 23:48:28] CPU #2: 4.64 kH/s
[2023-03-12 23:48:28] CPU #0: 4.64 kH/s
[2023-03-12 23:48:28] CPU #6: 6.04 kH/s
[2023-03-12 23:48:28] CPU #3: 4.64 kH/s
[2023-03-12 23:48:28] CPU #1: 4.64 kH/s
[2023-03-12 23:48:33] Total: 42.76 kH/s
[2023-03-12 23:48:38] CPU #4: 6.05 kH/s
[2023-03-12 23:48:38] CPU #5: 6.05 kH/s
[2023-03-12 23:48:38] CPU #7: 6.05 kH/s
[2023-03-12 23:48:38] Total: 42.77 kH/s
[2023-03-12 23:48:38] CPU #2: 4.64 kH/s
[2023-03-12 23:48:38] CPU #0: 4.64 kH/s
[2023-03-12 23:48:38] CPU #6: 6.05 kH/s
[2023-03-12 23:48:38] CPU #3: 4.64 kH/s
[2023-03-12 23:48:38] CPU #1: 4.64 kH/s
[2023-03-12 23:48:43] Total: 42.77 kH/s
[2023-03-12 23:48:48] CPU #4: 6.05 kH/s
[2023-03-12 23:48:48] CPU #7: 6.05 kH/s
[2023-03-12 23:48:48] Total: 42.77 kH/s
[2023-03-12 23:48:48] CPU #5: 6.04 kH/s
[2023-03-12 23:48:48] CPU #2: 4.64 kH/s
[2023-03-12 23:48:48] CPU #0: 4.64 kH/s
[2023-03-12 23:48:48] CPU #6: 6.04 kH/s
[2023-03-12 23:48:48] CPU #3: 4.64 kH/s
[2023-03-12 23:48:48] CPU #1: 4.64 kH/s
[2023-03-12 23:48:53] Total: 42.76 kH/s
[2023-03-12 23:48:58] CPU #4: 6.05 kH/s
[2023-03-12 23:48:58] CPU #5: 6.05 kH/s
[2023-03-12 23:48:58] CPU #7: 6.05 kH/s
[2023-03-12 23:48:58] Total: 42.77 kH/s
[2023-03-12 23:48:58] CPU #2: 4.64 kH/s
[2023-03-12 23:48:58] CPU #0: 4.64 kH/s
[2023-03-12 23:48:58] CPU #6: 6.05 kH/s
[2023-03-12 23:48:58] CPU #3: 4.64 kH/s
[2023-03-12 23:48:58] CPU #1: 4.64 kH/s
[2023-03-12 23:49:03] Total: 42.77 kH/s
[2023-03-12 23:49:08] CPU #4: 6.05 kH/s
[2023-03-12 23:49:08] CPU #7: 6.05 kH/s
[2023-03-12 23:49:08] Total: 42.77 kH/s
[2023-03-12 23:49:08] CPU #5: 6.04 kH/s
[2023-03-12 23:49:08] CPU #2: 4.64 kH/s
[2023-03-12 23:49:08] CPU #0: 4.64 kH/s
[2023-03-12 23:49:08] CPU #6: 6.04 kH/s
[2023-03-12 23:49:08] CPU #3: 4.64 kH/s
[2023-03-12 23:49:08] CPU #1: 4.64 kH/s
[2023-03-12 23:49:13] Total: 42.76 kH/s
[2023-03-12 23:49:18] CPU #4: 6.05 kH/s
[2023-03-12 23:49:18] CPU #5: 6.04 kH/s
[2023-03-12 23:49:18] CPU #7: 6.05 kH/s
[2023-03-12 23:49:18] Total: 42.76 kH/s
[2023-03-12 23:49:18] CPU #2: 4.64 kH/s
[2023-03-12 23:49:18] CPU #0: 4.64 kH/s
[2023-03-12 23:49:18] CPU #6: 6.04 kH/s
[2023-03-12 23:49:18] CPU #3: 4.64 kH/s
[2023-03-12 23:49:18] CPU #1: 4.64 kH/s
[2023-03-12 23:49:23] Total: 42.76 kH/s
[2023-03-12 23:49:28] CPU #4: 6.06 kH/s
[2023-03-12 23:49:28] CPU #5: 6.05 kH/s
[2023-03-12 23:49:28] CPU #7: 6.05 kH/s
[2023-03-12 23:49:28] Total: 42.77 kH/s
[2023-03-12 23:49:28] CPU #2: 4.64 kH/s
[2023-03-12 23:49:28] CPU #0: 4.64 kH/s
[2023-03-12 23:49:28] CPU #6: 6.05 kH/s
[2023-03-12 23:49:28] CPU #3: 4.64 kH/s
[2023-03-12 23:49:28] CPU #1: 4.64 kH/s
[2023-03-12 23:49:33] Total: 42.77 kH/s
[2023-03-12 23:49:38] CPU #4: 6.06 kH/s
[2023-03-12 23:49:38] CPU #5: 6.05 kH/s
[2023-03-12 23:49:38] CPU #7: 6.05 kH/s
[2023-03-12 23:49:38] Total: 42.77 kH/s
[2023-03-12 23:49:38] CPU #2: 4.64 kH/s
[2023-03-12 23:49:38] CPU #0: 4.64 kH/s
[2023-03-12 23:49:38] CPU #6: 6.05 kH/s
[2023-03-12 23:49:38] CPU #3: 4.64 kH/s
[2023-03-12 23:49:38] CPU #1: 4.64 kH/s
[2023-03-12 23:49:43] Total: 42.77 kH/s
[2023-03-12 23:49:48] CPU #4: 6.05 kH/s
[2023-03-12 23:49:48] CPU #5: 6.05 kH/s
[2023-03-12 23:49:48] CPU #7: 6.05 kH/s
[2023-03-12 23:49:48] Total: 42.77 kH/s
[2023-03-12 23:49:48] CPU #2: 4.64 kH/s
[2023-03-12 23:49:48] CPU #0: 4.64 kH/s
[2023-03-12 23:49:48] CPU #6: 6.05 kH/s
[2023-03-12 23:49:48] CPU #3: 4.64 kH/s
[2023-03-12 23:49:48] CPU #1: 4.64 kH/s
[2023-03-12 23:49:53] Total: 42.76 kH/s
[2023-03-12 23:49:58] CPU #4: 6.05 kH/s
[2023-03-12 23:49:58] CPU #5: 6.05 kH/s
[2023-03-12 23:49:58] CPU #7: 6.05 kH/s
[2023-03-12 23:49:58] Total: 42.76 kH/s
[2023-03-12 23:49:58] CPU #2: 4.64 kH/s
[2023-03-12 23:49:58] CPU #0: 4.64 kH/s
[2023-03-12 23:49:58] CPU #6: 6.04 kH/s
[2023-03-12 23:49:58] CPU #3: 4.64 kH/s
[2023-03-12 23:49:58] CPU #1: 4.64 kH/s
[2023-03-12 23:50:03] Total: 42.75 kH/s
[2023-03-12 23:50:08] CPU #4: 6.05 kH/s
[2023-03-12 23:50:08] CPU #5: 6.05 kH/s
[2023-03-12 23:50:08] CPU #7: 6.05 kH/s
[2023-03-12 23:50:08] Total: 42.76 kH/s
[2023-03-12 23:50:08] CPU #2: 4.64 kH/s
[2023-03-12 23:50:08] CPU #0: 4.64 kH/s
[2023-03-12 23:50:08] CPU #6: 6.05 kH/s
[2023-03-12 23:50:08] CPU #3: 4.64 kH/s
[2023-03-12 23:50:08] CPU #1: 4.64 kH/s
[2023-03-12 23:50:13] Total: 42.77 kH/s
[2023-03-12 23:50:18] CPU #4: 6.06 kH/s
[2023-03-12 23:50:18] CPU #5: 6.04 kH/s
[2023-03-12 23:50:18] CPU #7: 6.05 kH/s
[2023-03-12 23:50:18] Total: 42.77 kH/s
[2023-03-12 23:50:18] CPU #2: 4.64 kH/s
[2023-03-12 23:50:18] CPU #0: 4.64 kH/s
[2023-03-12 23:50:18] CPU #6: 6.04 kH/s
[2023-03-12 23:50:18] CPU #3: 4.64 kH/s
[2023-03-12 23:50:18] CPU #1: 4.64 kH/s
[2023-03-12 23:50:23] Total: 42.76 kH/s
[2023-03-12 23:50:28] CPU #4: 6.05 kH/s
[2023-03-12 23:50:28] CPU #5: 6.05 kH/s
[2023-03-12 23:50:28] CPU #7: 6.05 kH/s
[2023-03-12 23:50:28] Total: 42.77 kH/s
[2023-03-12 23:50:28] CPU #2: 4.64 kH/s
[2023-03-12 23:50:28] CPU #0: 4.64 kH/s
[2023-03-12 23:50:28] CPU #6: 6.05 kH/s
[2023-03-12 23:50:28] CPU #3: 4.64 kH/s
[2023-03-12 23:50:28] CPU #1: 4.64 kH/s
[2023-03-12 23:50:33] Total: 42.77 kH/s
[2023-03-12 23:50:38] CPU #4: 6.05 kH/s
[2023-03-12 23:50:38] CPU #5: 6.04 kH/s
[2023-03-12 23:50:38] CPU #7: 6.05 kH/s
[2023-03-12 23:50:38] Total: 42.76 kH/s
[2023-03-12 23:50:38] CPU #2: 4.64 kH/s
[2023-03-12 23:50:38] CPU #0: 4.64 kH/s
[2023-03-12 23:50:38] CPU #6: 6.04 kH/s
[2023-03-12 23:50:38] CPU #3: 4.64 kH/s
[2023-03-12 23:50:38] CPU #1: 4.64 kH/s
[2023-03-12 23:50:43] Total: 42.76 kH/s
[2023-03-12 23:50:48] CPU #4: 6.05 kH/s
[2023-03-12 23:50:48] CPU #5: 6.05 kH/s
[2023-03-12 23:50:48] CPU #7: 6.05 kH/s
[2023-03-12 23:50:48] Total: 42.76 kH/s
[2023-03-12 23:50:48] CPU #2: 4.64 kH/s
[2023-03-12 23:50:48] CPU #0: 4.64 kH/s
[2023-03-12 23:50:48] CPU #6: 6.04 kH/s
[2023-03-12 23:50:48] CPU #3: 4.64 kH/s
[2023-03-12 23:50:48] CPU #1: 4.64 kH/s
[2023-03-12 23:50:53] Total: 42.76 kH/s
[2023-03-12 23:50:58] CPU #4: 6.06 kH/s
[2023-03-12 23:50:58] CPU #5: 6.05 kH/s
[2023-03-12 23:50:58] CPU #7: 6.05 kH/s
[2023-03-12 23:50:58] Total: 42.77 kH/s
[2023-03-12 23:50:58] CPU #2: 4.64 kH/s
[2023-03-12 23:50:58] CPU #0: 4.64 kH/s
[2023-03-12 23:50:58] CPU #6: 6.05 kH/s
[2023-03-12 23:50:58] CPU #3: 4.64 kH/s
[2023-03-12 23:50:58] CPU #1: 4.64 kH/s
[2023-03-12 23:51:03] Total: 42.76 kH/s

Total Scores: 42.77,42.76,42.75

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:50:44: 2995/2438MHz  8.05 100%   0%  99%   0%   0%   0%  61.1°C

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A78C):

Cpufreq OPP: 2438    Measured: 2433 (2433.178/2433.121/2433.063)

Checking cpufreq OPP for cpu4-cpu7 (Cortex-X1C):

Cpufreq OPP: 2995    Measured: 2991 (2991.234/2991.165/2991.027)

##########################################################################

Hardware sensors:

cpu7_thermal-virtual-0
temp1:        +56.7 C  (crit = +110.0 C)

pm8280_2_thermal-virtual-0
temp1:        +37.0 C  (crit = +115.0 C)

cpu5_thermal-virtual-0
temp1:        +56.0 C  (crit = +110.0 C)

mem_thermal-virtual-0
temp1:        +56.0 C  

cpu3_thermal-virtual-0
temp1:        +56.0 C  (crit = +110.0 C)

cpu1_thermal-virtual-0
temp1:        +56.4 C  (crit = +110.0 C)

nvme-pci-20100
Composite:    +52.9 C  (low  = -273.1 C, high = +81.8 C)
                       (crit = +85.8 C)
Sensor 1:     +52.9 C  (low  = -273.1 C, high = +65261.8 C)

cluster0_thermal-virtual-0
temp1:        +55.7 C  (crit = +110.0 C)

cpu6_thermal-virtual-0
temp1:        +56.0 C  (crit = +110.0 C)

pm8280_1_thermal-virtual-0
temp1:        +37.0 C  (crit = +115.0 C)

cpu4_thermal-virtual-0
temp1:        +57.0 C  (crit = +110.0 C)

cpu2_thermal-virtual-0
temp1:        +56.4 C  (crit = +110.0 C)

cpu0_thermal-virtual-0
temp1:        +55.7 C  (crit = +110.0 C)

/dev/nvme0:	53°C

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (cpu0-thermal)
                (Armbian wants to use /sys/class/hwmon/hwmon0 instead, that
                zone is named nvme. Please check and if wrong
                file a bug here: https://github.com/armbian/build/issues/)

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:38:09: 2995/2438MHz  1.24  12%   0%   2%   0%   9%   0%  39.9°C
23:38:29: 2995/2438MHz  1.17  12%   0%  12%   0%   0%   0%  40.9°C
23:38:49: 2995/2438MHz  1.28  12%   0%  12%   0%   0%   0%  43.3°C
23:39:09: 2995/2438MHz  1.20  12%   0%  12%   0%   0%   0%  42.9°C
23:39:29: 2995/2438MHz  1.14  12%   0%  12%   0%   0%   0%  41.6°C
23:39:50: 2995/2438MHz  1.10  12%   0%  12%   0%   0%   0%  43.3°C
23:40:10: 2995/2438MHz  1.07  12%   0%  12%   0%   0%   0%  45.6°C
23:40:30: 2995/2438MHz  1.12  12%   0%  12%   0%   0%   0%  47.0°C
23:40:50: 2995/2438MHz  1.08  12%   0%  12%   0%   0%   0%  43.3°C

System health while running ramlat:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:41:01: 2995/2438MHz  1.15  12%   0%   3%   0%   8%   0%  43.6°C
23:41:07: 2995/2438MHz  1.13  12%   0%  12%   0%   0%   0%  41.9°C
23:41:13: 2995/2438MHz  1.12  12%   0%  12%   0%   0%   0%  41.6°C
23:41:19: 2995/2438MHz  1.11  12%   0%  12%   0%   0%   0%  41.9°C
23:41:26: 2995/2438MHz  1.10  12%   0%  12%   0%   0%   0%  40.9°C
23:41:32: 2995/2438MHz  1.09  12%   0%  12%   0%   0%   0%  41.3°C
23:41:38: 2995/2438MHz  1.08  12%   0%  12%   0%   0%   0%  41.3°C
23:41:44: 2995/2438MHz  1.07  12%   0%  12%   0%   0%   0%  41.9°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:41:45: 2995/2438MHz  1.15  12%   0%   3%   0%   7%   0%  45.3°C
23:42:01: 2995/2438MHz  1.11  12%   0%  12%   0%   0%   0%  43.3°C
23:42:17: 2995/2438MHz  1.09  12%   0%  12%   0%   0%   0%  41.9°C
23:42:34: 2995/2438MHz  1.07  12%   0%  12%   0%   0%   0%  43.6°C
23:42:50: 2995/2438MHz  1.05  12%   0%  12%   0%   0%   0%  41.9°C
23:43:06: 2995/2438MHz  1.04  12%   0%  12%   0%   0%   0%  44.3°C
23:43:22: 2995/2438MHz  1.03  12%   0%  12%   0%   0%   0%  41.9°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:43:33: 2995/2438MHz  1.02  12%   0%   4%   0%   7%   0%  43.6°C
23:43:48: 2995/2438MHz  1.02  12%   0%  12%   0%   0%   0%  43.6°C
23:44:04: 2995/2438MHz  1.01  12%   0%  12%   0%   0%   0%  43.3°C
23:44:19: 2995/2438MHz  1.01  12%   0%  12%   0%   0%   0%  42.3°C
23:44:34: 2995/2438MHz  1.01  12%   0%  12%   0%   0%   0%  42.9°C
23:44:49: 2995/2438MHz  1.00  12%   0%  12%   0%   0%   0%  42.9°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:44:52: 2995/2438MHz  1.00  12%   0%   4%   0%   7%   0%  45.6°C
23:45:22: 2995/2438MHz  3.54  89%   0%  89%   0%   0%   0%  55.0°C
23:45:49: 2995/2438MHz  5.42  87%   0%  87%   0%   0%   0%  59.1°C

System health while running cpuminer:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:46:14: 2995/2438MHz  6.04  15%   0%   8%   0%   6%   0%  57.7°C
23:46:59: 2995/2438MHz  7.15 100%   0%  99%   0%   0%   0%  57.4°C
23:47:44: 2995/2438MHz  7.68 100%   0%  99%   0%   0%   0%  57.7°C
23:48:29: 2995/2438MHz  7.93 100%   0%  99%   0%   0%   0%  58.7°C
23:49:14: 2995/2438MHz  7.97 100%   0%  99%   0%   0%   0%  59.4°C
23:49:59: 2995/2438MHz  8.02 100%   0%  99%   0%   0%   0%  60.4°C
23:50:44: 2995/2438MHz  8.05 100%   0%  99%   0%   0%   0%  61.1°C

##########################################################################

Linux 6.2.2-arm64 (uefi-arm64) 	03/12/23 	_aarch64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          21.00    0.00    0.65    5.81    0.00   72.54

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
nvme0n1           0.19         4.32         0.00         0.00       9152          0          0
sda              24.51       156.14      1130.56         0.00     331064    2397089          0

               total        used        free      shared  buff/cache   available
Mem:            30Gi       215Mi        30Gi        20Mi       226Mi        30Gi
Swap:             0B          0B          0B

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      300    2438   Cortex-A78C / r0p0
  1        0        0      300    2438   Cortex-A78C / r0p0
  2        0        0      300    2438   Cortex-A78C / r0p0
  3        0        0      300    2438   Cortex-A78C / r0p0
  4        0        4      826    2995   Cortex-X1C / r0p0
  5        0        4      826    2995   Cortex-X1C / r0p0
  6        0        4      826    2995   Cortex-X1C / r0p0
  7        0        4      826    2995   Cortex-X1C / r0p0

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          8
On-line CPU(s) list:             0-7
Vendor ID:                       ARM
BIOS Vendor ID:                  Qualcomm Technologies Inc
Model name:                      Cortex-A78C
BIOS Model name:                 Snapdragon Compute Platform 428 CPU @ 1.5GHz
BIOS CPU family:                 280
Model:                           0
Thread(s) per core:              1
Core(s) per socket:              4
Socket(s):                       1
Stepping:                        r0p0
CPU(s) scaling MHz:              100%
CPU max MHz:                     2438.3999
CPU min MHz:                     300.0000
BogoMIPS:                        38.40
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm lrcpc dcpop asimddp uscat ilrcpc flagm paca pacg
Model name:                      -
BIOS Model name:                 Snapdragon Compute Platform 428 CPU @ 1.5GHz
BIOS CPU family:                 280
Model:                           0
Thread(s) per core:              1
Core(s) per socket:              4
Socket(s):                       1
Stepping:                        r0p0
CPU(s) scaling MHz:              100%
CPU max MHz:                     2995.2000
CPU min MHz:                     825.6000
BogoMIPS:                        38.40
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm lrcpc dcpop asimddp uscat ilrcpc flagm paca pacg
NUMA node(s):                    1
NUMA node0 CPU(s):               0-7
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Mmio stale data:   Not affected
Vulnerability Retbleed:          Not affected
Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Mitigation; CSV2, BHB
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected

Processor Information
	Socket Designation: Qualcomm
	Type: Central Processor
	Family: ARM
	Manufacturer: Qualcomm Technologies Inc
	Version: Snapdragon Compute Platform
	Voltage: 1.1 V
	Max Speed: 2995 MHz
	Current Speed: 1536 MHz
	Status: Populated, Enabled
	L1 Cache Handle: 0x0000
	L2 Cache Handle: 0x0002
	L3 Cache Handle: 0x0003
	Part Number: 428
	Core Count: 8
	Core Enabled: 8
	Thread Count: 8
	Characteristics:
		64-bit capable
		Multi-Core
		Execute Protection

SoC guess: Qualcomm Snapdragon 8cx Gen 3
DT compat: microsoft,devkit-2023
           qcom,sc8280xp
 Compiler: /usr/bin/gcc (Ubuntu 12.2.0-3ubuntu1) 12.2.0 / aarch64-linux-gnu
 Userland: arm64
   Kernel: 6.2.2-arm64/aarch64
           CONFIG_HZ=1000
           CONFIG_HZ_1000=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_BUILD=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y

##########################################################################

DIMM configuration:
          description: TSOP LPDDR4 2092 MHz (0.5 ns)
          product: H9HCNNNFAMMLXR-NEE
          vendor: Hynix
          physical id: 0
          slot: Top - on board
          size: 32GiB
          width: 16 bits
          clock: 2092MHz (0.5ns)

##########################################################################

   cpu0-opp-table:
       300 MHz       -
       403 MHz       -
       499 MHz       -
       595 MHz       -
       691 MHz       -
       806 MHz       -
       902 MHz       -
      1018 MHz       -
      1114 MHz       -
      1210 MHz       -
      1325 MHz       -
      1440 MHz       -
      1555 MHz       -
      1670 MHz       -
      1786 MHz       -
      1882 MHz       -
      1997 MHz       -
      2112 MHz       -
      2227 MHz       -
      2342 MHz       -
      2438 MHz       -

   cpu4-opp-table:
       826 MHz       -
       941 MHz       -
      1056 MHz       -
      1171 MHz       -
      1286 MHz       -
      1402 MHz       -
      1517 MHz       -
      1632 MHz       -
      1747 MHz       -
      1862 MHz       -
      1978 MHz       -
      2074 MHz       -
      2170 MHz       -
      2285 MHz       -
      2400 MHz       -
      2496 MHz       -
      2592 MHz       -
      2688 MHz       -
      2803 MHz       -
      2899 MHz       -
      2995 MHz       -

   qup-100mhz-opp-table:
        75 MHz       -
       100 MHz       -

##########################################################################

Results validation:

  * No mismatch between advertised and measured max CPU clockspeed
  * Background activity (%system) OK
  * No throttling

Status of performance related policies found below /sys:

  * /sys/module/pcie_aspm/parameters/policy: [default] performance powersave powersupersave

| Microsoft Devkit 2023 | 2995/2438 MHz | 6.2 | Ubuntu 22.10 arm64 | 35320 | 4283 | 1694260 | 17710 | 42110 | 42.76 |